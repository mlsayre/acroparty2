{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"}]},{"source":"./AccountsUIWrapper.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"AccountsUIWrapper"}]},{"source":"meteor/react-meteor-data","imported":["createContainer"],"specifiers":[{"kind":"named","imported":"createContainer","local":"createContainer"}]},{"source":"../api/rooms.js","imported":["Rooms"],"specifiers":[{"kind":"named","imported":"Rooms","local":"Rooms"}]},{"source":"./Room.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Room"}]}],"exports":{"exported":["App"],"specifiers":[{"kind":"local","local":"App","exported":"default"}]}}},"options":{"filename":"/imports/ui/App.jsx","filenameRelative":"/imports/ui/App.jsx","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/ui/App.jsx.map","sourceFileName":"/imports/ui/App.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"App"},"ignored":false,"code":"var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{\"default\":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{\"default\":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{\"default\":function(v){_inherits=v}});var React,Component;module.import('react',{\"default\":function(v){React=v},\"Component\":function(v){Component=v}});var AccountsUIWrapper;module.import('./AccountsUIWrapper.jsx',{\"default\":function(v){AccountsUIWrapper=v}});var createContainer;module.import('meteor/react-meteor-data',{\"createContainer\":function(v){createContainer=v}});var Rooms;module.import('../api/rooms.js',{\"Rooms\":function(v){Rooms=v}});var Room;module.import('./Room.jsx',{\"default\":function(v){Room=v}});\n\n\n\n\n\n\n\n\n\n\n// App component - represents the whole app\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    _classCallCheck(this, App);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.state = {\n      gameRoomId: \"blaaa\"\n    };\n    return _this;\n  }\n\n  App.prototype.userRouting = function userRouting() {\n    if (this.props.currentUser) {\n      $(\".frontSignin\").hide();\n      $(\".mainScreen\").show();\n    } else {\n      $(\".frontSignin\").show();\n      $(\".mainScreen, .stats, .chat, .gamePlay, .settings\").hide();\n    }\n    $(\".acroparty\").show();\n  };\n\n  App.prototype.barfRoom = function barfRoom(e) {\n    var theroom = $(e.target).attr(\"data-room\");\n    $(\".mainScreen, .popup\").hide();\n    this.setState({ gameRoomId: theroom });\n    $(\".chat\").show();\n  };\n\n  // rooms\n\n\n  App.prototype.renderRooms = function renderRooms() {\n    return this.props.rooms.map(function (room) {\n      return React.createElement(Room, { key: room._id, room: room });\n    });\n  };\n\n  App.prototype.renderRoomName = function renderRoomName() {\n    // if ($(\".chat\").attr(\"id\")) {\n    //   return $(\".chat\").attr(\"id\");\n    // } else {\n    //   return \"\";\n    // }\n    return this.state.gameRoomId;\n  };\n\n  // stats\n\n\n  App.prototype.closePopup = function closePopup(e) {\n    $(\".popup\").hide();\n  };\n\n  App.prototype.openStats = function openStats(e) {\n    $(\".settings\").hide();\n    $(\".stats\").show();\n  };\n\n  App.prototype.renderUsername = function renderUsername() {\n    if (this.props.currentUser) {\n      if (this.props.currentUser.username) {\n        return React.createElement(\n          'span',\n          null,\n          this.props.currentUser.username\n        );\n      } else {\n        return \"\";\n      }\n    } else {\n      return \"\";\n    }\n  };\n\n  App.prototype.renderLifePoints = function renderLifePoints() {\n    // this.props.currentUser ? <span>{ this.props.currentUser.stats.lifetimePoints }</span> : '';\n    if (this.props.currentUser) {\n      if (this.props.currentUser.stats) {\n        return React.createElement(\n          'span',\n          null,\n          this.props.currentUser.stats.lifetimePoints\n        );\n      } else {\n        return \"\";\n      }\n    } else {\n      return \"\";\n    }\n  };\n\n  //settings\n\n\n  App.prototype.openSettings = function openSettings(e) {\n    $(\".stats\").hide();\n    $(\".settings\").show();\n  };\n\n  App.prototype.render = function render() {\n    return React.createElement(\n      'div',\n      { className: 'acroparty' },\n      this.userRouting(),\n      React.createElement(\n        'section',\n        { className: 'frontSignin', style: { \"display\": \"none\" } },\n        React.createElement(\n          'h1',\n          null,\n          'Welcome to AcroParty!'\n        ),\n        React.createElement(AccountsUIWrapper, null)\n      ),\n      React.createElement(\n        'section',\n        { className: 'mainScreen' },\n        React.createElement(\n          'header',\n          null,\n          React.createElement(\n            'h1',\n            null,\n            'AcroParty'\n          )\n        ),\n        React.createElement(\n          'div',\n          { className: 'welcomeText' },\n          'Welcome, ',\n          this.renderUsername(),\n          '! Please select a room to start playing...'\n        ),\n        React.createElement(\n          'div',\n          { className: 'roomList' },\n          React.createElement(\n            'div',\n            { className: 'roomListTitle' },\n            'Rooms'\n          ),\n          this.renderRooms()\n        ),\n        React.createElement(\n          'div',\n          { className: 'mainButtons' },\n          React.createElement(\n            'button',\n            { className: 'mainButton', onClick: this.openStats.bind(this) },\n            'Stats'\n          ),\n          React.createElement(\n            'button',\n            { className: 'mainButton', onClick: this.openSettings.bind(this) },\n            'Settings'\n          ),\n          React.createElement(\n            'button',\n            { className: 'roomSelect', 'data-room': 'poopooman', onClick: this.barfRoom.bind(this) },\n            'Join'\n          )\n        )\n      ),\n      React.createElement(\n        'section',\n        { className: 'chat' },\n        'This is where chat will happen. This is game room id: ',\n        this.renderRoomName(),\n        '.',\n        React.createElement('section', { className: 'gamePlay' })\n      ),\n      React.createElement('section', { className: 'gamePlay' }),\n      React.createElement(\n        'section',\n        { className: 'stats popup' },\n        React.createElement(\n          'div',\n          null,\n          'Life wins is ',\n          this.renderLifePoints()\n        ),\n        React.createElement(\n          'button',\n          { className: 'popupButton', onClick: this.closePopup.bind(this) },\n          'Close'\n        )\n      ),\n      React.createElement(\n        'section',\n        { className: 'settings popup' },\n        React.createElement(AccountsUIWrapper, null),\n        React.createElement(\n          'button',\n          { className: 'popupButton', onClick: this.closePopup.bind(this) },\n          'Close'\n        )\n      )\n    );\n  };\n\n  return App;\n}(Component);\n\nmodule.export(\"default\",exports.default=(App));\n\n\nmodule.export(\"default\",exports.default=(createContainer(function () {\n  return {\n    currentUser: Meteor.user(),\n    rooms: Rooms.find({}).fetch()\n  };\n}, App)));","ast":null,"map":{"version":3,"sources":["/imports/ui/App.jsx"],"names":[],"mappings":"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","file":"/imports/ui/App.jsx.map","sourcesContent":["import React, { Component } from 'react';\nimport AccountsUIWrapper from './AccountsUIWrapper.jsx';\nimport { createContainer } from 'meteor/react-meteor-data';\n\nimport { Rooms } from '../api/rooms.js';\n\nimport Room from './Room.jsx';\n\n// App component - represents the whole app\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      gameRoomId: \"blaaa\",\n    };\n  }\n\n  userRouting() {\n    if (this.props.currentUser) {\n      $(\".frontSignin\").hide();\n      $(\".mainScreen\").show();\n    } else {\n      $(\".frontSignin\").show();\n      $(\".mainScreen, .stats, .chat, .gamePlay, .settings\").hide();\n    }\n    $(\".acroparty\").show()\n  }\n\n  barfRoom(e) {\n    var theroom = $(e.target).attr(\"data-room\")\n    $(\".mainScreen, .popup\").hide();\n    this.setState({gameRoomId: theroom});\n    $(\".chat\").show();\n  }\n\n  // rooms\n  renderRooms() {\n    return this.props.rooms.map((room) => (\n      <Room key={room._id} room={room} />\n    ));\n  }\n  renderRoomName() {\n    // if ($(\".chat\").attr(\"id\")) {\n    //   return $(\".chat\").attr(\"id\");\n    // } else {\n    //   return \"\";\n    // }\n    return this.state.gameRoomId\n  }\n\n  // stats\n  closePopup(e) {\n    $(\".popup\").hide();\n  }\n\n  openStats(e) {\n    $(\".settings\").hide();\n    $(\".stats\").show();\n  }\n\n  renderUsername() {\n    if (this.props.currentUser) {\n      if (this.props.currentUser.username) {\n        return  <span>{ this.props.currentUser.username }</span>;\n      } else {\n        return \"\";\n      }\n    } else {\n      return \"\";\n    }\n  }\n\n  renderLifePoints() {\n    // this.props.currentUser ? <span>{ this.props.currentUser.stats.lifetimePoints }</span> : '';\n    if (this.props.currentUser) {\n      if (this.props.currentUser.stats) {\n        return  <span>{ this.props.currentUser.stats.lifetimePoints }</span>;\n      } else {\n        return \"\";\n      }\n    } else {\n      return \"\";\n    }\n  }\n\n  //settings\n  openSettings(e) {\n    $(\".stats\").hide();\n    $(\".settings\").show();\n  }\n\n  render() {\n    return (\n\n      <div className=\"acroparty\">\n        {this.userRouting()}\n        <section className=\"frontSignin\" style={{\"display\" : \"none\"}}>\n          <h1>Welcome to AcroParty!</h1>\n          <AccountsUIWrapper />\n        </section>\n\n        <section className=\"mainScreen\">\n          <header>\n            <h1>AcroParty</h1>\n          </header>\n          <div className=\"welcomeText\">\n            Welcome, { this.renderUsername() }! Please select a room to start playing...\n          </div>\n          <div className=\"roomList\">\n            <div className=\"roomListTitle\">Rooms</div>\n            { this.renderRooms() }\n          </div>\n          <div className=\"mainButtons\">\n            <button className=\"mainButton\" onClick={this.openStats.bind(this)}>Stats</button>\n            <button className=\"mainButton\" onClick={this.openSettings.bind(this)}>Settings</button>\n            <button className=\"roomSelect\" data-room=\"poopooman\" onClick={this.barfRoom.bind(this)}>Join</button>\n          </div>\n        </section>\n\n        <section className=\"chat\">\n          This is where chat will happen. This is game room id: {this.renderRoomName()}.\n          <section className=\"gamePlay\">\n          </section>\n        </section>\n\n        <section className=\"gamePlay\">\n\n        </section>\n\n        <section className=\"stats popup\">\n          <div>Life wins is { this.renderLifePoints() }</div>\n          <button className=\"popupButton\" onClick={this.closePopup.bind(this)}>Close</button>\n        </section>\n\n        <section className=\"settings popup\">\n          <AccountsUIWrapper />\n          <button className=\"popupButton\" onClick={this.closePopup.bind(this)}>Close</button>\n        </section>\n\n\n      </div>\n    );\n  }\n}\n\nexport default createContainer(() => {\n  return {\n    currentUser: Meteor.user(),\n    rooms: Rooms.find({}).fetch(),\n  };\n}, App);\n\n"]},"hash":"6d55250c0a37ddbb751d069cfe8779edd10134b9"}
