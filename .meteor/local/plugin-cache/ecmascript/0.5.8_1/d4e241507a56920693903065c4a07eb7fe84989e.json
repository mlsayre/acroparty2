{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[{"source":"meteor/meteor","imported":["Meteor"],"specifiers":[{"kind":"named","imported":"Meteor","local":"Meteor"}]},{"source":"meteor/mongo","imported":["Mongo"],"specifiers":[{"kind":"named","imported":"Mongo","local":"Mongo"}]},{"source":"meteor/check","imported":["check"],"specifiers":[{"kind":"named","imported":"check","local":"check"}]}],"exports":{"exported":["Games"],"specifiers":[{"kind":"local","local":"Games","exported":"Games"}]}}},"options":{"filename":"/imports/api/games.js","filenameRelative":"/imports/api/games.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/api/games.js.map","sourceFileName":"/imports/api/games.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"games"},"ignored":false,"code":"module.export({Games:function(){return Games}});var Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var Mongo;module.import('meteor/mongo',{\"Mongo\":function(v){Mongo=v}});var check;module.import('meteor/check',{\"check\":function(v){check=v}});\n\n\n\nvar Games = new Mongo.Collection('games');\n\nMeteor.methods({\n  'games.init': function () {\n    function gamesInit(roomId) {\n      if (Games.find({ room_id: roomId }).length() === 0) {\n        console.log(\"running games.init\");\n        var roundletters;\n        var acroPoolLength = acroLettersPool.length;\n        var acroPlayArray = [];\n        for (var i = 0; i < roundstoplay; i++) {\n          var acroToPlay = \"\";\n          for (var j = 0; j < roundacrolength[i]; j++) {\n            acroToPlay = acroToPlay + acroLettersPool[Math.floor(Math.random() * acroPoolLength)];\n          }\n          acroPlayArray.push(acroToPlay);\n        }\n        Games.insert({\n          room_id: roomId,\n          roundletters: acroPlayArray\n        });\n      }\n    }\n\n    return gamesInit;\n  }()\n});\n\n// Games.find({ room_id: roomId }).remove({});","ast":null,"map":{"version":3,"sources":["/imports/api/games.js"],"names":[],"mappings":"AAAA,SAAS,MAAT,QAAuB,eAAvB;AACA,SAAS,KAAT,QAAsB,cAAtB;AACA,SAAS,KAAT,QAAsB,cAAtB;;AAEA,OAAO,IAAM,QAAQ,IAAI,MAAM,UAAV,CAAqB,OAArB,CAAd;;AAEP,OAAO,OAAP,CAAe;AACb,cADa;AAAA,uBACA,MADA,EACQ;AACnB,UAAI,MAAM,IAAN,CAAW,EAAE,SAAS,MAAX,EAAX,EAAgC,MAAhC,OAA6C,CAAjD,EAAoD;AAClD,gBAAQ,GAAR,CAAY,oBAAZ;AACA,YAAI,YAAJ;AACA,YAAI,iBAAiB,gBAAgB,MAArC;AACA,YAAI,gBAAgB,EAApB;AACA,aAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,YAApB,EAAkC,GAAlC,EAAuC;AACrC,cAAI,aAAa,EAAjB;AACA,eAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,gBAAgB,CAAhB,CAApB,EAAwC,GAAxC,EAA6C;AAC3C,yBAAa,aAAa,gBAAgB,KAAK,KAAL,CAAW,KAAK,MAAL,KAAgB,cAA3B,CAAhB,CAA1B;AACD;AACD,wBAAc,IAAd,CAAmB,UAAnB;AACD;AACD,cAAM,MAAN,CAAa;AACX,mBAAS,MADE;AAEX,wBAAc;AAFH,SAAb;AAID;AACF;;AAnBY;AAAA;AAAA,CAAf","file":"/imports/api/games.js.map","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nexport const Games = new Mongo.Collection('games');\n\nMeteor.methods({\n  'games.init'(roomId) {\n    if (Games.find({ room_id: roomId }).length() === 0) {\n      console.log(\"running games.init\")\n      var roundletters;\n      var acroPoolLength = acroLettersPool.length;\n      var acroPlayArray = []\n      for (var i = 0; i < roundstoplay; i++) {\n        var acroToPlay = \"\";\n        for (var j = 0; j < roundacrolength[i]; j++) {\n          acroToPlay = acroToPlay + acroLettersPool[Math.floor(Math.random() * acroPoolLength)]\n        }\n        acroPlayArray.push(acroToPlay);\n      }\n      Games.insert({\n        room_id: roomId,\n        roundletters: acroPlayArray\n      });\n    }\n  },\n\n\n})\n\n    // Games.find({ room_id: roomId }).remove({});\n"]},"hash":"d4e241507a56920693903065c4a07eb7fe84989e"}
