{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"react-dom","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"ReactDOM"}]},{"source":"meteor/react-meteor-data","imported":["createContainer"],"specifiers":[{"kind":"named","imported":"createContainer","local":"createContainer"}]},{"source":"./App.jsx","imported":["gameRoomIdSelected"],"specifiers":[{"kind":"named","imported":"gameRoomIdSelected","local":"gameRoomIdSelected"}]},{"source":"/client/utilities.js","imported":["validateAnswer"],"specifiers":[{"kind":"named","imported":"validateAnswer","local":"validateAnswer"}]},{"source":"../api/rooms.js","imported":["Rooms"],"specifiers":[{"kind":"named","imported":"Rooms","local":"Rooms"}]},{"source":"../api/games.js","imported":["Games"],"specifiers":[{"kind":"named","imported":"Games","local":"Games"}]},{"source":"../api/gamedata.js","imported":["Gamedata"],"specifiers":[{"kind":"named","imported":"Gamedata","local":"Gamedata"}]},{"source":"./Room.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Room"}]}],"exports":{"exported":["Game"],"specifiers":[{"kind":"local","local":"Game","exported":"default"}]}}},"options":{"filename":"/imports/ui/Game.jsx","filenameRelative":"/imports/ui/Game.jsx","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/ui/Game.jsx.map","sourceFileName":"/imports/ui/Game.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"Game"},"ignored":false,"code":"var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{\"default\":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{\"default\":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{\"default\":function(v){_inherits=v}});var React,Component,PropTypes;module.import('react',{\"default\":function(v){React=v},\"Component\":function(v){Component=v},\"PropTypes\":function(v){PropTypes=v}});var ReactDOM;module.import('react-dom',{\"default\":function(v){ReactDOM=v}});var createContainer;module.import('meteor/react-meteor-data',{\"createContainer\":function(v){createContainer=v}});var gameRoomIdSelected;module.import('./App.jsx',{\"gameRoomIdSelected\":function(v){gameRoomIdSelected=v}});var validateAnswer;module.import('/client/utilities.js',{\"validateAnswer\":function(v){validateAnswer=v}});var Rooms;module.import('../api/rooms.js',{\"Rooms\":function(v){Rooms=v}});var Games;module.import('../api/games.js',{\"Games\":function(v){Games=v}});var Gamedata;module.import('../api/gamedata.js',{\"Gamedata\":function(v){Gamedata=v}});var Room;module.import('./Room.jsx',{\"default\":function(v){Room=v}});\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar Game = function (_Component) {\n  _inherits(Game, _Component);\n\n  function Game() {\n    _classCallCheck(this, Game);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  Game.prototype.sendAnswer = function sendAnswer(event) {\n    event.preventDefault();\n    var answer = ReactDOM.findDOMNode(this.refs.answerInput).value.trim();\n    var roundNumber = Rooms.findOne({ room_id: gameRoomIdSelected.get() }).round;\n    var acroLetters = Games.findOne({ room_id: gameRoomIdSelected.get() }).roundletters[roundNumber - 1];\n    var checkedAnswer = validateAnswer(answer, acroLetters);\n    if (checkedAnswer === 1) {\n      var failMessage = \"Not feeling inspired?\";\n      $(\".submittedInfo\").css(\"color\", \"red\");\n      $(\".submittedInfo\").text(failMessage);\n    } else if (checkedAnswer === 2) {\n      var failMessage = \"Your acro should have \" + acroLetters.length + \" words...\";\n      $(\".submittedInfo\").css(\"color\", \"red\");\n      $(\".submittedInfo\").text(failMessage);\n    } else if (checkedAnswer === 3) {\n      var failMessage = \"Check your letters...\";\n      $(\".submittedInfo\").css(\"color\", \"red\");\n      $(\".submittedInfo\").text(failMessage);\n    } else {\n      $(\".submittedInfo\").css(\"color\", \"green\");\n      Meteor.call('gamedata.postAnswer', gameRoomIdSelected.get(), this.props.currentUser.username, checkedAnswer);\n      var submitTime = Gamedata.findOne({ room_id: gameRoomIdSelected.get(), user_id: this.props.currentUser.username }).finalAnswerTime;\n      $(\".submittedInfo\").text(\"Submitted: \" + submitTime + \"s\");\n    }\n  };\n\n  Game.prototype.render = function render() {\n    if (this.props.selectedRoom) {\n      var currentRound = this.props.selectedRoom.round;\n      var currentSubround = this.props.selectedRoom.subround;\n      if (currentSubround === \"Waiting for players\") {\n        if (this.props.gamedata.length < 2) {\n          // number of players needed to start game\n          $(\".gamestate\").hide();\n          $(\".waitingForPlayers\").show();\n        } else {\n          Meteor.call('games.init', gameRoomIdSelected.get());\n        }\n      } else {\n        $(\".gamestate\").hide();\n        if (currentSubround === \"Waiting for players\") {\n          Meteor.call('games.init', gameRoomIdSelected.get());\n        } else if (currentSubround === \"Get ready\") {\n          $(\".gamestate\").hide();\n          $(\".getReady\").show();\n          $(\".submittedInfo\").text(\"\");\n          $(\".answerEnter\").value = \"\";\n          Meteor.call('games.getready', gameRoomIdSelected.get());\n        } else if (currentSubround === \"Play\") {\n          $(\".gamestate\").hide();\n          $(\".play\").show();\n          // flip the letters\n          if (this.props.gameInfo.turnLetters === true) {\n            console.log(\"textillate should run now\");\n            var uniqueId = this.props.gameInfo._id;\n            $(\".\" + uniqueId + currentRound).textillate({\n              selector: '.texts',\n              initialDelay: 0,\n              autoStart: false,\n              'in': {\n                effect: 'flipInY',\n                delayScale: 1.5,\n                delay: 800\n              },\n              callback: function callback() {\n                console.log(\"Really textillate running??\");\n                Meteor.call('games.letterFlipFlagOff', gameRoomIdSelected.get());\n              },\n              type: 'char'\n            });\n            $(\".\" + uniqueId + currentRound).textillate(\"in\");\n          }\n          var roundSeconds = this.props.gameInfo.roundtimes[currentRound - 1];\n          Meteor.call('games.play', gameRoomIdSelected.get(), roundSeconds);\n          if (this.props.gameInfo.playStartAnswering === true) {\n            $(\".gameTimer\").css(\"visibility\", \"visible\");\n          } else {\n            $(\".gameTimer\").css(\"visibility\", \"hidden\");\n          }\n          if (this.props.gameInfo.showAnswerForm === true) {\n            $(\".answerForm\").css(\"visibility\", \"visible\");\n          } else {\n            $(\".answerForm\").css(\"visibility\", \"hidden\").val(\"\");\n          }\n        } else if (currentSubround === \"Vote\") {\n          $(\".gamestate\").hide();\n          $(\".vote\").show();\n          Meteor.call('games.vote', gameRoomIdSelected.get());\n        } else if (currentSubround === \"Results\") {\n          $(\".gamestate\").hide();\n          $(\".results\").show();\n          Meteor.call('games.results', gameRoomIdSelected.get());\n        } else if (currentSubround === \"Final results\") {\n          $(\".gamestate\").hide();\n          $(\".finalresults\").show();\n          Meteor.call('games.finalresults', gameRoomIdSelected.get());\n        }\n      }\n    }\n    return React.createElement(\n      'div',\n      null,\n      React.createElement(\n        'div',\n        { className: 'gamestate waitingForPlayers' },\n        React.createElement(\n          'div',\n          null,\n          'Waiting for at least 3 players...'\n        )\n      ),\n      React.createElement(\n        'div',\n        { className: 'gamestate getReady' },\n        React.createElement(\n          'div',\n          { className: 'gameTop' },\n          React.createElement(\n            'div',\n            { className: 'roundInfo' },\n            'Round ',\n            this.props.selectedRoom ? this.props.selectedRoom.round : \"\",\n            ' ofÂ ',\n            this.props.gameInfo ? this.props.gameInfo.roundletters.length : \"\"\n          ),\n          React.createElement('div', { className: 'gameTimer' })\n        ),\n        React.createElement(\n          'div',\n          { className: 'gameMiddle' },\n          React.createElement(\n            'div',\n            { className: 'getReadyText' },\n            'Get ready...'\n          )\n        )\n      ),\n      React.createElement(\n        'div',\n        { className: 'gamestate play' },\n        React.createElement(\n          'div',\n          { className: 'gameTop' },\n          React.createElement(\n            'div',\n            { className: 'roundInfo' },\n            'Round ',\n            this.props.selectedRoom ? this.props.selectedRoom.round : \"\",\n            ' ofÂ ',\n            this.props.gameInfo ? this.props.gameInfo.roundletters.length : \"\"\n          ),\n          React.createElement(\n            'div',\n            { className: 'gameTimer' },\n            this.props.gameInfo ? this.props.gameInfo.timerSeconds : 0\n          )\n        ),\n        React.createElement(\n          'div',\n          { className: 'gameMiddle' },\n          React.createElement(\n            'div',\n            { className: 'numberSubmitted' },\n            '0 of 3 Answers Submitted'\n          ),\n          React.createElement(\n            'div',\n            { className: 'categoryAndLetters' },\n            React.createElement(\n              'div',\n              { className: 'currentCat' },\n              React.createElement(\n                'span',\n                { className: 'catWord' },\n                'Category:'\n              ),\n              ' ',\n              this.props.gameInfo ? this.props.gameInfo.roundcategories[currentRound - 1] : \"\"\n            ),\n            React.createElement(\n              'div',\n              { className: 'currentLetters' },\n              React.createElement(\n                'span',\n                { className: (this.props.gameInfo ? this.props.gameInfo._id : \"\") + currentRound },\n                this.props.gameInfo ? this.props.gameInfo.roundletters[currentRound - 1] : \"\"\n              )\n            )\n          ),\n          React.createElement('div', { className: 'submittedInfo' })\n        ),\n        React.createElement(\n          'div',\n          { className: 'gameBottom' },\n          React.createElement(\n            'form',\n            { className: 'answerForm' },\n            React.createElement('input', { type: 'text', ref: 'answerInput', className: 'answerEnter', placeholder: 'Enter acro here...',\n              maxLength: '70' }),\n            React.createElement(\n              'button',\n              { className: 'answerSend', onClick: this.sendAnswer.bind(this) },\n              'Play'\n            )\n          )\n        )\n      ),\n      React.createElement(\n        'div',\n        { className: 'gamestate vote' },\n        'Now vote!'\n      ),\n      React.createElement(\n        'div',\n        { className: 'gamestate results' },\n        'The results!'\n      ),\n      React.createElement(\n        'div',\n        { className: 'gamestate finalresults' },\n        'Final game results!'\n      )\n    );\n  };\n\n  return Game;\n}(Component);\n\nmodule.export(\"default\",exports.default=(Game));\n\n\nmodule.export(\"default\",exports.default=(createContainer(function () {\n  //var userRoom = Meteor.user().currentRoom;\n  return {\n    currentUser: Meteor.user(),\n    selectedRoom: Rooms.findOne({ room_id: gameRoomIdSelected.get() }),\n    gameInfo: Games.findOne({ room_id: gameRoomIdSelected.get() }) ? Games.findOne({ room_id: gameRoomIdSelected.get() }) : \"\",\n    gamedata: Gamedata.find({ room_id: gameRoomIdSelected.get() }).fetch()\n  };\n}, Game)));\n\n// Game.propTypes = {\n//   // This component gets the game to display through a React prop.\n//   // We can use propTypes to indicate it is required\n//   game: PropTypes.object.isRequired,\n// };","ast":null,"map":{"version":3,"sources":["/imports/ui/Game.jsx"],"names":[],"mappings":"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","file":"/imports/ui/Game.jsx.map","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport ReactDOM from 'react-dom';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport { gameRoomIdSelected } from './App.jsx'\nimport {validateAnswer} from '/client/utilities.js';\n\nimport { Rooms } from '../api/rooms.js';\nimport { Games } from '../api/games.js';\nimport { Gamedata } from '../api/gamedata.js';\nimport Room from './Room.jsx';\n\nexport default class Game extends Component {\n  sendAnswer(event) {\n    event.preventDefault();\n    const answer = ReactDOM.findDOMNode(this.refs.answerInput).value.trim();\n    const roundNumber = Rooms.findOne({room_id: gameRoomIdSelected.get()}).round;\n    const acroLetters = Games.findOne({room_id: gameRoomIdSelected.get()}).roundletters[roundNumber - 1];\n    var checkedAnswer = validateAnswer(answer, acroLetters);\n    if (checkedAnswer === 1) {\n      var failMessage = \"Not feeling inspired?\"\n      $(\".submittedInfo\").css(\"color\", \"red\");\n      $(\".submittedInfo\").text(failMessage)\n    } else if (checkedAnswer === 2) {\n      var failMessage = \"Your acro should have \" + acroLetters.length + \" words...\"\n      $(\".submittedInfo\").css(\"color\", \"red\");\n      $(\".submittedInfo\").text(failMessage)\n    } else if (checkedAnswer === 3) {\n      var failMessage = \"Check your letters...\"\n      $(\".submittedInfo\").css(\"color\", \"red\");\n      $(\".submittedInfo\").text(failMessage)\n    } else {\n      $(\".submittedInfo\").css(\"color\", \"green\");\n      Meteor.call('gamedata.postAnswer', gameRoomIdSelected.get(), this.props.currentUser.username, checkedAnswer);\n      var submitTime = Gamedata.findOne({room_id: gameRoomIdSelected.get(), user_id: this.props.currentUser.username}).finalAnswerTime\n      $(\".submittedInfo\").text(\"Submitted: \" + submitTime + \"s\");\n    }\n  }\n\n  render() {\n    if (this.props.selectedRoom) {\n      var currentRound = this.props.selectedRoom.round;\n      var currentSubround = this.props.selectedRoom.subround;\n      if (currentSubround === \"Waiting for players\") {\n        if (this.props.gamedata.length < 2) { // number of players needed to start game\n          $(\".gamestate\").hide();\n          $(\".waitingForPlayers\").show();\n        } else {\n          Meteor.call('games.init', gameRoomIdSelected.get(), );\n        }\n      } else {\n        $(\".gamestate\").hide();\n        if (currentSubround === \"Waiting for players\") {\n          Meteor.call('games.init', gameRoomIdSelected.get(), );\n        } else if (currentSubround === \"Get ready\") {\n          $(\".gamestate\").hide();\n          $(\".getReady\").show();\n          $(\".submittedInfo\").text(\"\")\n          $(\".answerEnter\").value = \"\";\n          Meteor.call('games.getready', gameRoomIdSelected.get(), );\n        } else if (currentSubround === \"Play\") {\n          $(\".gamestate\").hide();\n          $(\".play\").show();\n          // flip the letters\n          if (this.props.gameInfo.turnLetters === true) {\n            console.log(\"textillate should run now\")\n            var uniqueId = this.props.gameInfo._id;\n            $(\".\" + uniqueId + currentRound).textillate({\n              selector: '.texts',\n              initialDelay: 0,\n              autoStart: false,\n              in: {\n                effect: 'flipInY',\n                delayScale: 1.5,\n                delay: 800,\n              },\n              callback: function () {\n                console.log(\"Really textillate running??\")\n                Meteor.call('games.letterFlipFlagOff', gameRoomIdSelected.get());\n              },\n              type: 'char'\n            });\n            $(\".\" + uniqueId + currentRound).textillate(\"in\")\n          }\n          var roundSeconds = this.props.gameInfo.roundtimes[currentRound - 1];\n          Meteor.call('games.play', gameRoomIdSelected.get(), roundSeconds);\n          if (this.props.gameInfo.playStartAnswering === true) {\n            $(\".gameTimer\").css(\"visibility\", \"visible\");\n          } else {\n            $(\".gameTimer\").css(\"visibility\", \"hidden\");\n          }\n          if (this.props.gameInfo.showAnswerForm === true) {\n            $(\".answerForm\").css(\"visibility\", \"visible\");\n          } else {\n            $(\".answerForm\").css(\"visibility\", \"hidden\").val(\"\");\n          }\n        } else if (currentSubround === \"Vote\") {\n          $(\".gamestate\").hide();\n          $(\".vote\").show();\n          Meteor.call('games.vote', gameRoomIdSelected.get());\n        } else if (currentSubround === \"Results\") {\n          $(\".gamestate\").hide();\n          $(\".results\").show();\n          Meteor.call('games.results', gameRoomIdSelected.get());\n        } else if (currentSubround === \"Final results\") {\n          $(\".gamestate\").hide();\n          $(\".finalresults\").show();\n          Meteor.call('games.finalresults', gameRoomIdSelected.get());\n        }\n      }\n    }\n    return (\n      <div>\n        <div className=\"gamestate waitingForPlayers\">\n          <div>Waiting for at least 3 players...</div>\n        </div>\n        <div className=\"gamestate getReady\">\n          <div className=\"gameTop\">\n            <div className=\"roundInfo\">\n              Round {this.props.selectedRoom ? this.props.selectedRoom.round : \"\"} of&nbsp;\n              {this.props.gameInfo ? this.props.gameInfo.roundletters.length : \"\"}\n            </div>\n            <div className=\"gameTimer\"></div>\n          </div>\n          <div className=\"gameMiddle\">\n            <div className=\"getReadyText\">Get ready...</div>\n          </div>\n        </div>\n        <div className=\"gamestate play\">\n          <div className=\"gameTop\">\n            <div className=\"roundInfo\">\n              Round {this.props.selectedRoom ? this.props.selectedRoom.round : \"\"} of&nbsp;\n              {this.props.gameInfo ? this.props.gameInfo.roundletters.length : \"\"}\n            </div>\n            <div className=\"gameTimer\">{this.props.gameInfo ? this.props.gameInfo.timerSeconds : 0}</div>\n          </div>\n          <div className=\"gameMiddle\">\n            <div className=\"numberSubmitted\">0 of 3 Answers Submitted</div>\n            <div className=\"categoryAndLetters\">\n              <div className=\"currentCat\"><span className=\"catWord\">Category:</span> {this.props.gameInfo ? this.props.gameInfo.roundcategories[currentRound - 1] : \"\"}</div>\n              <div className=\"currentLetters\">\n                <span className={(this.props.gameInfo ? this.props.gameInfo._id : \"\") + currentRound}>\n                  {this.props.gameInfo ? this.props.gameInfo.roundletters[currentRound - 1] : \"\"}\n                </span>\n              </div>\n            </div>\n            <div className=\"submittedInfo\"></div>\n          </div>\n          <div className=\"gameBottom\">\n            <form className=\"answerForm\">\n              <input type=\"text\" ref=\"answerInput\" className=\"answerEnter\" placeholder=\"Enter acro here...\"\n                maxLength=\"70\"></input>\n              <button className=\"answerSend\" onClick={this.sendAnswer.bind(this)}>Play</button>\n            </form>\n          </div>\n\n        </div>\n        <div className=\"gamestate vote\">\n          Now vote!\n        </div>\n        <div className=\"gamestate results\">\n          The results!\n        </div>\n        <div className=\"gamestate finalresults\">\n          Final game results!\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default createContainer(() => {\n  //var userRoom = Meteor.user().currentRoom;\n  return {\n    currentUser: Meteor.user(),\n    selectedRoom: Rooms.findOne({ room_id: gameRoomIdSelected.get() }),\n    gameInfo: Games.findOne({room_id: gameRoomIdSelected.get()}) ? Games.findOne({room_id: gameRoomIdSelected.get()}) : \"\",\n    gamedata: Gamedata.find({room_id: gameRoomIdSelected.get()}).fetch(),\n  };\n}, Game);\n\n// Game.propTypes = {\n//   // This component gets the game to display through a React prop.\n//   // We can use propTypes to indicate it is required\n//   game: PropTypes.object.isRequired,\n// };\n"]},"hash":"d4e0352b388338c346c95b6de175a59fcc8f11e5"}
