{"metadata":{"usedHelpers":["inherits","possibleConstructorReturn","classCallCheck"],"marked":[],"modules":{"imports":[{"source":"react","imported":["default","Component","PropTypes"],"specifiers":[{"kind":"named","imported":"default","local":"React"},{"kind":"named","imported":"Component","local":"Component"},{"kind":"named","imported":"PropTypes","local":"PropTypes"}]},{"source":"meteor/react-meteor-data","imported":["createContainer"],"specifiers":[{"kind":"named","imported":"createContainer","local":"createContainer"}]},{"source":"./App.jsx","imported":["gameRoomIdSelected"],"specifiers":[{"kind":"named","imported":"gameRoomIdSelected","local":"gameRoomIdSelected"}]},{"source":"../api/rooms.js","imported":["Rooms"],"specifiers":[{"kind":"named","imported":"Rooms","local":"Rooms"}]},{"source":"../api/games.js","imported":["Games"],"specifiers":[{"kind":"named","imported":"Games","local":"Games"}]},{"source":"./Room.jsx","imported":["default"],"specifiers":[{"kind":"named","imported":"default","local":"Room"}]}],"exports":{"exported":["Game"],"specifiers":[{"kind":"local","local":"Game","exported":"default"}]}}},"options":{"filename":"/imports/ui/Game.jsx","filenameRelative":"/imports/ui/Game.jsx","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/imports/ui/Game.jsx.map","sourceFileName":"/imports/ui/Game.jsx","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"Game"},"ignored":false,"code":"var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{\"default\":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{\"default\":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{\"default\":function(v){_inherits=v}});var React,Component,PropTypes;module.import('react',{\"default\":function(v){React=v},\"Component\":function(v){Component=v},\"PropTypes\":function(v){PropTypes=v}});var createContainer;module.import('meteor/react-meteor-data',{\"createContainer\":function(v){createContainer=v}});var gameRoomIdSelected;module.import('./App.jsx',{\"gameRoomIdSelected\":function(v){gameRoomIdSelected=v}});var Rooms;module.import('../api/rooms.js',{\"Rooms\":function(v){Rooms=v}});var Games;module.import('../api/games.js',{\"Games\":function(v){Games=v}});var Room;module.import('./Room.jsx',{\"default\":function(v){Room=v}});\n\n\n\n\n\n\n\n\n\n\nvar Game = function (_Component) {\n  _inherits(Game, _Component);\n\n  function Game() {\n    _classCallCheck(this, Game);\n\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  Game.prototype.render = function () {\n    function render() {\n      if (this.props.selectedRoom) {\n        var currentRound = this.props.selectedRoom.round;\n        var currentSubround = this.props.selectedRoom.subround;\n        if (currentSubround === \"Waiting for players\") {\n          if (this.props.selectedRoom.players.length < 2) {\n            // number of players needed to start game\n            $(\".gamestate\").hide();\n            $(\".waitingForPlayers\").show();\n          } else {\n            Meteor.call('games.init', gameRoomIdSelected.get());\n          }\n        } else {\n          $(\".gamestate\").hide();\n          if (currentSubround === \"Waiting for players\") {\n            Meteor.call('games.init', gameRoomIdSelected.get());\n          } else if (currentSubround === \"Get ready\") {\n            $(\".gamestate\").hide();\n            $(\".getReady\").show();\n            Meteor.call('games.getready', gameRoomIdSelected.get());\n          } else if (currentSubround === \"Play\") {\n            $(\".gamestate\").hide();\n            $(\".play\").show();\n            var roundSeconds = this.props.gameInfo.roundtimes[currentRound - 1];\n            Meteor.call('games.play', gameRoomIdSelected.get(), roundSeconds);\n          } else if (currentSubround === \"Vote\") {\n            $(\".gamestate\").hide();\n            $(\".vote\").show();\n            Meteor.call('games.vote', gameRoomIdSelected.get());\n          } else if (currentSubround === \"Results\") {\n            $(\".gamestate\").hide();\n            $(\".results\").show();\n            Meteor.call('games.results', gameRoomIdSelected.get());\n          } else if (currentSubround === \"Final results\") {\n            $(\".gamestate\").hide();\n            $(\".finalresults\").show();\n            Meteor.call('games.finalresults', gameRoomIdSelected.get());\n          }\n        }\n      }\n      return React.createElement(\n        'div',\n        null,\n        React.createElement(\n          'div',\n          { className: 'gamestate waitingForPlayers' },\n          React.createElement(\n            'div',\n            null,\n            'Waiting for at least 3 players...'\n          )\n        ),\n        React.createElement(\n          'div',\n          { className: 'gamestate getReady' },\n          React.createElement(\n            'div',\n            { className: 'gameTop' },\n            React.createElement(\n              'div',\n              { className: 'roundInfo' },\n              'Round ',\n              this.props.selectedRoom ? this.props.selectedRoom.round : \"\",\n              ' of ',\n              this.props.gameInfo ? this.props.gameInfo.roundletters.length : \"\"\n            ),\n            React.createElement('div', { className: 'gameTimer' })\n          ),\n          React.createElement(\n            'div',\n            { className: 'gameMiddle' },\n            React.createElement(\n              'div',\n              { className: 'getReadyText' },\n              'Get ready...'\n            )\n          )\n        ),\n        React.createElement(\n          'div',\n          { className: 'gamestate play' },\n          React.createElement(\n            'div',\n            { className: 'gameTop' },\n            React.createElement(\n              'div',\n              { className: 'roundInfo' },\n              'Round ',\n              this.props.selectedRoom ? this.props.selectedRoom.round : \"\",\n              ' of ',\n              this.props.gameInfo ? this.props.gameInfo.roundletters.length : \"\"\n            ),\n            React.createElement(\n              'div',\n              { className: 'gameTimer' },\n              '50'\n            )\n          ),\n          React.createElement(\n            'div',\n            { className: 'gameMiddle' },\n            React.createElement(\n              'div',\n              { className: 'numberSubmitted' },\n              '0 of 3 Answers Submitted'\n            ),\n            React.createElement(\n              'div',\n              { className: 'categoryAndLetters' },\n              React.createElement(\n                'div',\n                { className: 'currentCat' },\n                React.createElement(\n                  'span',\n                  { className: 'catWord' },\n                  'Category:'\n                ),\n                ' ',\n                this.props.gameInfo ? this.props.gameInfo.roundcategories[currentRound - 1] : \"\"\n              ),\n              React.createElement(\n                'div',\n                { className: 'currentLetters' },\n                this.props.gameInfo ? this.props.gameInfo.roundletters[currentRound - 1] : \"\"\n              )\n            ),\n            React.createElement(\n              'div',\n              { className: 'submittedInfo' },\n              'Submitted: 24.57s'\n            )\n          ),\n          React.createElement(\n            'div',\n            { className: 'gameBottom' },\n            React.createElement(\n              'form',\n              null,\n              React.createElement('input', { type: 'text', ref: 'answerInput', className: 'answerEnter', placeholder: 'Enter acro here...' }),\n              React.createElement(\n                'button',\n                { className: 'answerSend' },\n                'Play'\n              )\n            )\n          )\n        ),\n        React.createElement(\n          'div',\n          { className: 'gamestate vote' },\n          'Now vote!'\n        ),\n        React.createElement(\n          'div',\n          { className: 'gamestate results' },\n          'The results!'\n        ),\n        React.createElement(\n          'div',\n          { className: 'gamestate finalresults' },\n          'Final game results!'\n        )\n      )\n      // <div>{this.props.selectedRoom && this.props.selectedRoom.players.length > 1 ?\n      // <div>THERE IS MORE THAN ONE PLAYER HERE.</div> : <div>This is the game area.</div>}</div>\n      ;\n    }\n\n    return render;\n  }();\n\n  return Game;\n}(Component);\n\nmodule.export(\"default\",exports.default=(Game));\n\n\nmodule.export(\"default\",exports.default=(createContainer(function () {\n  //var userRoom = Meteor.user().currentRoom;\n  return {\n    currentUser: Meteor.user(),\n    selectedRoom: Rooms.findOne({ room_id: gameRoomIdSelected.get() }),\n    gameInfo: Games.findOne({ room_id: gameRoomIdSelected.get() }) ? Games.findOne({ room_id: gameRoomIdSelected.get() }) : \"\"\n  };\n}, Game)));\n\n// Game.propTypes = {\n//   // This component gets the game to display through a React prop.\n//   // We can use propTypes to indicate it is required\n//   game: PropTypes.object.isRequired,\n// };","ast":null,"map":{"version":3,"sources":["/imports/ui/Game.jsx"],"names":[],"mappings":"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","file":"/imports/ui/Game.jsx.map","sourcesContent":["import React, { Component, PropTypes } from 'react';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport { gameRoomIdSelected } from './App.jsx'\n\nimport { Rooms } from '../api/rooms.js';\nimport { Games } from '../api/games.js';\nimport Room from './Room.jsx';\n\nexport default class Game extends Component {\n  render() {\n    if (this.props.selectedRoom) {\n      var currentRound = this.props.selectedRoom.round;\n      var currentSubround = this.props.selectedRoom.subround;\n      if (currentSubround === \"Waiting for players\") {\n        if (this.props.selectedRoom.players.length < 2) { // number of players needed to start game\n          $(\".gamestate\").hide();\n          $(\".waitingForPlayers\").show();\n        } else {\n          Meteor.call('games.init', gameRoomIdSelected.get(), );\n        }\n      } else {\n        $(\".gamestate\").hide();\n        if (currentSubround === \"Waiting for players\") {\n          Meteor.call('games.init', gameRoomIdSelected.get(), );\n        } else if (currentSubround === \"Get ready\") {\n          $(\".gamestate\").hide();\n          $(\".getReady\").show();\n          Meteor.call('games.getready', gameRoomIdSelected.get(), );\n        } else if (currentSubround === \"Play\") {\n          $(\".gamestate\").hide();\n          $(\".play\").show();\n          var roundSeconds = this.props.gameInfo.roundtimes[currentRound - 1];\n          Meteor.call('games.play', gameRoomIdSelected.get(), roundSeconds);\n        } else if (currentSubround === \"Vote\") {\n          $(\".gamestate\").hide();\n          $(\".vote\").show();\n          Meteor.call('games.vote', gameRoomIdSelected.get());\n        } else if (currentSubround === \"Results\") {\n          $(\".gamestate\").hide();\n          $(\".results\").show();\n          Meteor.call('games.results', gameRoomIdSelected.get());\n        } else if (currentSubround === \"Final results\") {\n          $(\".gamestate\").hide();\n          $(\".finalresults\").show();\n          Meteor.call('games.finalresults', gameRoomIdSelected.get());\n        }\n      }\n    }\n    return (\n      <div>\n        <div className=\"gamestate waitingForPlayers\">\n          <div>Waiting for at least 3 players...</div>\n        </div>\n        <div className=\"gamestate getReady\">\n          <div className=\"gameTop\">\n            <div className=\"roundInfo\">\n              Round {this.props.selectedRoom ? this.props.selectedRoom.round : \"\"} of&nbsp;\n              {this.props.gameInfo ? this.props.gameInfo.roundletters.length : \"\"}\n            </div>\n            <div className=\"gameTimer\"></div>\n          </div>\n          <div className=\"gameMiddle\">\n            <div className=\"getReadyText\">Get ready...</div>\n          </div>\n        </div>\n        <div className=\"gamestate play\">\n          <div className=\"gameTop\">\n            <div className=\"roundInfo\">\n              Round {this.props.selectedRoom ? this.props.selectedRoom.round : \"\"} of&nbsp;\n              {this.props.gameInfo ? this.props.gameInfo.roundletters.length : \"\"}\n            </div>\n            <div className=\"gameTimer\">50</div>\n          </div>\n          <div className=\"gameMiddle\">\n            <div className=\"numberSubmitted\">0 of 3 Answers Submitted</div>\n            <div className=\"categoryAndLetters\">\n              <div className=\"currentCat\"><span className=\"catWord\">Category:</span> {this.props.gameInfo ? this.props.gameInfo.roundcategories[currentRound - 1] : \"\"}</div>\n              <div className=\"currentLetters\">{this.props.gameInfo ? this.props.gameInfo.roundletters[currentRound - 1] : \"\"}</div>\n            </div>\n            <div className=\"submittedInfo\">Submitted: 24.57s</div>\n          </div>\n          <div className=\"gameBottom\">\n            <form>\n              <input type=\"text\" ref=\"answerInput\" className=\"answerEnter\" placeholder=\"Enter acro here...\"></input>\n              <button className=\"answerSend\">Play</button>\n            </form>\n          </div>\n\n        </div>\n        <div className=\"gamestate vote\">\n          Now vote!\n        </div>\n        <div className=\"gamestate results\">\n          The results!\n        </div>\n        <div className=\"gamestate finalresults\">\n          Final game results!\n        </div>\n      </div>\n      // <div>{this.props.selectedRoom && this.props.selectedRoom.players.length > 1 ?\n      // <div>THERE IS MORE THAN ONE PLAYER HERE.</div> : <div>This is the game area.</div>}</div>\n    );\n  }\n}\n\nexport default createContainer(() => {\n  //var userRoom = Meteor.user().currentRoom;\n  return {\n    currentUser: Meteor.user(),\n    selectedRoom: Rooms.findOne({ room_id: gameRoomIdSelected.get() }),\n    gameInfo: Games.findOne({room_id: gameRoomIdSelected.get()}) ? Games.findOne({room_id: gameRoomIdSelected.get()}) : \"\"\n  };\n}, Game);\n\n// Game.propTypes = {\n//   // This component gets the game to display through a React prop.\n//   // We can use propTypes to indicate it is required\n//   game: PropTypes.object.isRequired,\n// };\n"]},"hash":"b89dea0c0d6ca55a78a6ec75200dbe3ab4ea3b21"}
