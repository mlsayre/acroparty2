{"metadata":{"usedHelpers":["typeof"],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/jquery.textillate.js","filenameRelative":"/client/jquery.textillate.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/jquery.textillate.js.map","sourceFileName":"/client/jquery.textillate.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"jquery.textillate"},"ignored":false,"code":"var _typeof;module.import(\"babel-runtime/helpers/typeof\",{\"default\":function(v){_typeof=v}});\n/*\n * textillate.js\n * http://jschr.github.com/textillate\n * MIT licensed\n *\n * Copyright (C) 2012-2013 Jordan Schroter\n */\n\n(function ($) {\n  \"use strict\";\n\n  function isInEffect(effect) {\n    return (/In/.test(effect) || $.inArray(effect, $.fn.textillate.defaults.inEffects) >= 0\n    );\n  };\n\n  function isOutEffect(effect) {\n    return (/Out/.test(effect) || $.inArray(effect, $.fn.textillate.defaults.outEffects) >= 0\n    );\n  };\n\n  function stringToBoolean(str) {\n    if (str !== \"true\" && str !== \"false\") return str;\n    return str === \"true\";\n  };\n\n  // custom get data api method\n  function getData(node) {\n    var attrs = node.attributes || [],\n        data = {};\n\n    if (!attrs.length) return data;\n\n    $.each(attrs, function (i, attr) {\n      var nodeName = attr.nodeName.replace(/delayscale/, 'delayScale');\n      if (/^data-in-*/.test(nodeName)) {\n        data[\"in\"] = data[\"in\"] || {};\n        data[\"in\"][nodeName.replace(/data-in-/, '')] = stringToBoolean(attr.nodeValue);\n      } else if (/^data-out-*/.test(nodeName)) {\n        data.out = data.out || {};\n        data.out[nodeName.replace(/data-out-/, '')] = stringToBoolean(attr.nodeValue);\n      } else if (/^data-*/.test(nodeName)) {\n        data[nodeName.replace(/data-/, '')] = stringToBoolean(attr.nodeValue);\n      }\n    });\n\n    return data;\n  }\n\n  function shuffle(o) {\n    for (var j, x, i = o.length; i; j = parseInt(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x) {}\n    return o;\n  }\n\n  function animate($t, effect, cb) {\n    $t.addClass('animated ' + effect).css('visibility', 'visible').show();\n\n    $t.one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function () {\n      $t.removeClass('animated ' + effect);\n      cb && cb();\n    });\n  }\n\n  function animateTokens($tokens, options, cb) {\n    var that = this,\n        count = $tokens.length;\n\n    if (!count) {\n      cb && cb();\n      return;\n    }\n\n    if (options.shuffle) $tokens = shuffle($tokens);\n    if (options.reverse) $tokens = $tokens.toArray().reverse();\n\n    $.each($tokens, function (i, t) {\n      var $token = $(t);\n\n      function complete() {\n        if (isInEffect(options.effect)) {\n          $token.css('visibility', 'visible');\n        } else if (isOutEffect(options.effect)) {\n          $token.css('visibility', 'hidden');\n        }\n        count -= 1;\n        if (!count && cb) cb();\n      }\n\n      var delay = options.sync ? options.delay : options.delay * i * options.delayScale;\n\n      $token.text() ? setTimeout(function () {\n        animate($token, options.effect, complete);\n      }, delay) : complete();\n    });\n  };\n\n  var Textillate = function Textillate(element, options) {\n    var base = this,\n        $element = $(element);\n\n    base.init = function () {\n      base.$texts = $element.find(options.selector);\n\n      if (!base.$texts.length) {\n        base.$texts = $('<ul class=\"texts\"><li>' + $element.html() + '</li></ul>');\n        $element.html(base.$texts);\n      }\n\n      base.$texts.hide();\n\n      base.$current = $('<span>').html(base.$texts.find(':first-child').html()).prependTo($element);\n\n      if (isInEffect(options[\"in\"].effect)) {\n        base.$current.css('visibility', 'hidden');\n      } else if (isOutEffect(options.out.effect)) {\n        base.$current.css('visibility', 'visible');\n      }\n\n      base.setOptions(options);\n\n      base.timeoutRun = null;\n\n      setTimeout(function () {\n        base.options.autoStart && base.start();\n      }, base.options.initialDelay);\n    };\n\n    base.setOptions = function (options) {\n      base.options = options;\n    };\n\n    base.triggerEvent = function (name) {\n      var e = $.Event(name + '.tlt');\n      $element.trigger(e, base);\n      return e;\n    };\n\n    base[\"in\"] = function (index, cb) {\n      index = index || 0;\n\n      var $elem = base.$texts.find(':nth-child(' + ((index || 0) + 1) + ')'),\n          options = $.extend(true, {}, base.options, $elem.length ? getData($elem[0]) : {}),\n          $tokens;\n\n      $elem.addClass('current');\n\n      base.triggerEvent('inAnimationBegin');\n\n      base.$current.html($elem.html()).lettering('words');\n\n      // split words to individual characters if token type is set to 'char'\n      if (base.options.type == \"char\") {\n        base.$current.find('[class^=\"word\"]').css({\n          'display': 'inline-block',\n          // fix for poor ios performance\n          '-webkit-transform': 'translate3d(0,0,0)',\n          '-moz-transform': 'translate3d(0,0,0)',\n          '-o-transform': 'translate3d(0,0,0)',\n          'transform': 'translate3d(0,0,0)'\n        }).each(function () {\n          $(this).lettering();\n        });\n      }\n\n      $tokens = base.$current.find('[class^=\"' + base.options.type + '\"]').css('display', 'inline-block');\n\n      if (isInEffect(options[\"in\"].effect)) {\n        $tokens.css('visibility', 'hidden');\n      } else if (isOutEffect(options[\"in\"].effect)) {\n        $tokens.css('visibility', 'visible');\n      }\n\n      base.currentIndex = index;\n\n      animateTokens($tokens, options[\"in\"], function () {\n        base.triggerEvent('inAnimationEnd');\n        if (options[\"in\"].callback) options[\"in\"].callback();\n        if (cb) cb(base);\n      });\n    };\n\n    base.out = function (cb) {\n      var $elem = base.$texts.find(':nth-child(' + ((base.currentIndex || 0) + 1) + ')'),\n          $tokens = base.$current.find('[class^=\"' + base.options.type + '\"]'),\n          options = $.extend(true, {}, base.options, $elem.length ? getData($elem[0]) : {});\n\n      base.triggerEvent('outAnimationBegin');\n\n      animateTokens($tokens, options.out, function () {\n        $elem.removeClass('current');\n        base.triggerEvent('outAnimationEnd');\n        if (options.out.callback) options.out.callback();\n        if (cb) cb(base);\n      });\n    };\n\n    base.start = function (index) {\n      setTimeout(function () {\n        base.triggerEvent('start');\n\n        (function () {\n          function run(index) {\n            base[\"in\"](index, function () {\n              var length = base.$texts.children().length;\n\n              index += 1;\n\n              if (!base.options.loop && index >= length) {\n                if (base.options.callback) base.options.callback();\n                base.triggerEvent('end');\n              } else {\n                index = index % length;\n\n                base.timeoutRun = setTimeout(function () {\n                  base.out(function () {\n                    run(index);\n                  });\n                }, base.options.minDisplayTime);\n              }\n            });\n          }\n\n          return run;\n        })()(index || 0);\n      }, base.options.initialDelay);\n    };\n\n    base.stop = function () {\n      if (base.timeoutRun) {\n        clearInterval(base.timeoutRun);\n        base.timeoutRun = null;\n      }\n    };\n\n    base.init();\n  };\n\n  $.fn.textillate = function (settings, args) {\n    return this.each(function () {\n      var $this = $(this),\n          data = $this.data('textillate'),\n          options = $.extend(true, {}, $.fn.textillate.defaults, getData(this), (typeof settings === \"undefined\" ? \"undefined\" : _typeof(settings)) == 'object' && settings);\n\n      if (!data) {\n        $this.data('textillate', data = new Textillate(this, options));\n      } else if (typeof settings == 'string') {\n        data[settings].apply(data, [].concat(args));\n      } else {\n        data.setOptions.call(data, options);\n      }\n    });\n  };\n\n  $.fn.textillate.defaults = {\n    selector: '.texts',\n    loop: false,\n    minDisplayTime: 2000,\n    initialDelay: 0,\n    \"in\": {\n      effect: 'fadeInLeftBig',\n      delayScale: 1.5,\n      delay: 50,\n      sync: false,\n      reverse: false,\n      shuffle: false,\n      callback: function () {\n        function callback() {}\n\n        return callback;\n      }()\n    },\n    out: {\n      effect: 'hinge',\n      delayScale: 1.5,\n      delay: 50,\n      sync: false,\n      reverse: false,\n      shuffle: false,\n      callback: function () {\n        function callback() {}\n\n        return callback;\n      }()\n    },\n    autoStart: true,\n    inEffects: [],\n    outEffects: ['hinge'],\n    callback: function () {\n      function callback() {}\n\n      return callback;\n    }(),\n    type: 'char'\n  };\n})(jQuery);","ast":null,"map":{"version":3,"sources":["/client/jquery.textillate.js"],"names":[],"mappings":"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","file":"/client/jquery.textillate.js.map","sourcesContent":["/*\n * textillate.js\n * http://jschr.github.com/textillate\n * MIT licensed\n *\n * Copyright (C) 2012-2013 Jordan Schroter\n */\n\n(function ($) {\n  \"use strict\";\n\n  function isInEffect (effect) {\n    return /In/.test(effect) || $.inArray(effect, $.fn.textillate.defaults.inEffects) >= 0;\n  };\n\n  function isOutEffect (effect) {\n    return /Out/.test(effect) || $.inArray(effect, $.fn.textillate.defaults.outEffects) >= 0;\n  };\n\n\n  function stringToBoolean(str) {\n    if (str !== \"true\" && str !== \"false\") return str;\n    return (str === \"true\");\n  };\n\n  // custom get data api method\n  function getData (node) {\n    var attrs = node.attributes || []\n      , data = {};\n\n    if (!attrs.length) return data;\n\n    $.each(attrs, function (i, attr) {\n      var nodeName = attr.nodeName.replace(/delayscale/, 'delayScale');\n      if (/^data-in-*/.test(nodeName)) {\n        data.in = data.in || {};\n        data.in[nodeName.replace(/data-in-/, '')] = stringToBoolean(attr.nodeValue);\n      } else if (/^data-out-*/.test(nodeName)) {\n        data.out = data.out || {};\n        data.out[nodeName.replace(/data-out-/, '')] =stringToBoolean(attr.nodeValue);\n      } else if (/^data-*/.test(nodeName)) {\n        data[nodeName.replace(/data-/, '')] = stringToBoolean(attr.nodeValue);\n      }\n    })\n\n    return data;\n  }\n\n  function shuffle (o) {\n      for (var j, x, i = o.length; i; j = parseInt(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);\n      return o;\n  }\n\n  function animate ($t, effect, cb) {\n    $t.addClass('animated ' + effect)\n      .css('visibility', 'visible')\n      .show();\n\n    $t.one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function () {\n        $t.removeClass('animated ' + effect);\n        cb && cb();\n    });\n  }\n\n  function animateTokens ($tokens, options, cb) {\n    var that = this\n      , count = $tokens.length;\n\n    if (!count) {\n      cb && cb();\n      return;\n    }\n\n    if (options.shuffle) $tokens = shuffle($tokens);\n    if (options.reverse) $tokens = $tokens.toArray().reverse();\n\n    $.each($tokens, function (i, t) {\n      var $token = $(t);\n\n      function complete () {\n        if (isInEffect(options.effect)) {\n          $token.css('visibility', 'visible');\n        } else if (isOutEffect(options.effect)) {\n          $token.css('visibility', 'hidden');\n        }\n        count -= 1;\n        if (!count && cb) cb();\n      }\n\n      var delay = options.sync ? options.delay : options.delay * i * options.delayScale;\n\n      $token.text() ?\n        setTimeout(function () { animate($token, options.effect, complete) }, delay) :\n        complete();\n    });\n  };\n\n  var Textillate = function (element, options) {\n    var base = this\n      , $element = $(element);\n\n    base.init = function () {\n      base.$texts = $element.find(options.selector);\n\n      if (!base.$texts.length) {\n        base.$texts = $('<ul class=\"texts\"><li>' + $element.html() + '</li></ul>');\n        $element.html(base.$texts);\n      }\n\n      base.$texts.hide();\n\n      base.$current = $('<span>')\n        .html(base.$texts.find(':first-child').html())\n        .prependTo($element);\n\n      if (isInEffect(options.in.effect)) {\n        base.$current.css('visibility', 'hidden');\n      } else if (isOutEffect(options.out.effect)) {\n        base.$current.css('visibility', 'visible');\n      }\n\n      base.setOptions(options);\n\n      base.timeoutRun = null;\n\n      setTimeout(function () {\n        base.options.autoStart && base.start();\n      }, base.options.initialDelay)\n    };\n\n    base.setOptions = function (options) {\n      base.options = options;\n    };\n\n    base.triggerEvent = function (name) {\n      var e = $.Event(name + '.tlt');\n      $element.trigger(e, base);\n      return e;\n    };\n\n    base.in = function (index, cb) {\n      index = index || 0;\n\n      var $elem = base.$texts.find(':nth-child(' + ((index||0) + 1) + ')')\n        , options = $.extend(true, {}, base.options, $elem.length ? getData($elem[0]) : {})\n        , $tokens;\n\n      $elem.addClass('current');\n\n      base.triggerEvent('inAnimationBegin');\n\n      base.$current\n        .html($elem.html())\n        .lettering('words');\n\n      // split words to individual characters if token type is set to 'char'\n      if (base.options.type == \"char\") {\n        base.$current.find('[class^=\"word\"]')\n            .css({\n              'display': 'inline-block',\n              // fix for poor ios performance\n              '-webkit-transform': 'translate3d(0,0,0)',\n              '-moz-transform': 'translate3d(0,0,0)',\n              '-o-transform': 'translate3d(0,0,0)',\n              'transform': 'translate3d(0,0,0)'\n            })\n            .each(function () { $(this).lettering() });\n      }\n\n      $tokens = base.$current\n        .find('[class^=\"' + base.options.type + '\"]')\n        .css('display', 'inline-block');\n\n      if (isInEffect(options.in.effect)) {\n        $tokens.css('visibility', 'hidden');\n      } else if (isOutEffect(options.in.effect)) {\n        $tokens.css('visibility', 'visible');\n      }\n\n      base.currentIndex = index;\n\n      animateTokens($tokens, options.in, function () {\n        base.triggerEvent('inAnimationEnd');\n        if (options.in.callback) options.in.callback();\n        if (cb) cb(base);\n      });\n    };\n\n    base.out = function (cb) {\n      var $elem = base.$texts.find(':nth-child(' + ((base.currentIndex||0) + 1) + ')')\n        , $tokens = base.$current.find('[class^=\"' + base.options.type + '\"]')\n        , options = $.extend(true, {}, base.options, $elem.length ? getData($elem[0]) : {})\n\n      base.triggerEvent('outAnimationBegin');\n\n      animateTokens($tokens, options.out, function () {\n        $elem.removeClass('current');\n        base.triggerEvent('outAnimationEnd');\n        if (options.out.callback) options.out.callback();\n        if (cb) cb(base);\n      });\n    };\n\n    base.start = function (index) {\n      setTimeout(function () {\n        base.triggerEvent('start');\n\n      (function run (index) {\n        base.in(index, function () {\n          var length = base.$texts.children().length;\n\n          index += 1;\n\n          if (!base.options.loop && index >= length) {\n            if (base.options.callback) base.options.callback();\n            base.triggerEvent('end');\n          } else {\n            index = index % length;\n\n            base.timeoutRun = setTimeout(function () {\n              base.out(function () {\n                run(index)\n              });\n            }, base.options.minDisplayTime);\n          }\n        });\n      }(index || 0));\n      }, base.options.initialDelay);\n    };\n\n    base.stop = function () {\n      if (base.timeoutRun) {\n        clearInterval(base.timeoutRun);\n        base.timeoutRun = null;\n      }\n    };\n\n    base.init();\n  }\n\n  $.fn.textillate = function (settings, args) {\n    return this.each(function () {\n      var $this = $(this)\n        , data = $this.data('textillate')\n        , options = $.extend(true, {}, $.fn.textillate.defaults, getData(this), typeof settings == 'object' && settings);\n\n      if (!data) {\n        $this.data('textillate', (data = new Textillate(this, options)));\n      } else if (typeof settings == 'string') {\n        data[settings].apply(data, [].concat(args));\n      } else {\n        data.setOptions.call(data, options);\n      }\n    })\n  };\n\n  $.fn.textillate.defaults = {\n    selector: '.texts',\n    loop: false,\n    minDisplayTime: 2000,\n    initialDelay: 0,\n    in: {\n      effect: 'fadeInLeftBig',\n      delayScale: 1.5,\n      delay: 50,\n      sync: false,\n      reverse: false,\n      shuffle: false,\n      callback: function () {}\n    },\n    out: {\n      effect: 'hinge',\n      delayScale: 1.5,\n      delay: 50,\n      sync: false,\n      reverse: false,\n      shuffle: false,\n      callback: function () {}\n    },\n    autoStart: true,\n    inEffects: [],\n    outEffects: [ 'hinge' ],\n    callback: function () {},\n    type: 'char'\n  };\n\n}(jQuery));\n"]},"hash":"01fada085f6221eda9a9012a89966d9b5b678d59"}
