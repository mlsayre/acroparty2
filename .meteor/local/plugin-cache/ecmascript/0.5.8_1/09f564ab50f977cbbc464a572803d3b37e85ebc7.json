{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/jquery.lettering.js","filenameRelative":"/client/jquery.lettering.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/jquery.lettering.js.map","sourceFileName":"/client/jquery.lettering.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"jquery.lettering"},"ignored":false,"code":"/*global jQuery */\n/*!\n* Lettering.JS 0.7.0\n*\n* Copyright 2010, Dave Rupert http://daverupert.com\n* Released under the WTFPL license\n* http://sam.zoy.org/wtfpl/\n*\n* Thanks to Paul Irish - http://paulirish.com - for the feedback.\n*\n* Date: Mon Sep 20 17:14:00 2010 -0600\n*/\n(function ($) {\n  function injector(t, splitter, klass, after) {\n    var text = t.text(),\n        a = text.split(splitter),\n        inject = '';\n    if (a.length) {\n      $(a).each(function (i, item) {\n        inject += '<span class=\"' + klass + (i + 1) + '\" aria-hidden=\"true\">' + item + '</span>' + after;\n      });\n      t.attr('aria-label', text).empty().append(inject);\n    }\n  }\n\n  var methods = {\n    init: function () {\n      function init() {\n\n        return this.each(function () {\n          injector($(this), '', 'char', '');\n        });\n      }\n\n      return init;\n    }(),\n\n    words: function () {\n      function words() {\n\n        return this.each(function () {\n          injector($(this), ' ', 'word', ' ');\n        });\n      }\n\n      return words;\n    }(),\n\n    lines: function () {\n      function lines() {\n\n        return this.each(function () {\n          var r = \"eefec303079ad17405c889e092e105b0\";\n          // Because it's hard to split a <br/> tag consistently across browsers,\n          // (*ahem* IE *ahem*), we replace all <br/> instances with an md5 hash\n          // (of the word \"split\").  If you're trying to use this plugin on that\n          // md5 hash string, it will fail because you're being ridiculous.\n          injector($(this).children(\"br\").replaceWith(r).end(), r, 'line', '');\n        });\n      }\n\n      return lines;\n    }()\n  };\n\n  $.fn.lettering = function (method) {\n    // Method calling logic\n    if (method && methods[method]) {\n      return methods[method].apply(this, [].slice.call(arguments, 1));\n    } else if (method === 'letters' || !method) {\n      return methods.init.apply(this, [].slice.call(arguments, 0)); // always pass an array\n    }\n    $.error('Method ' + method + ' does not exist on jQuery.lettering');\n    return this;\n  };\n})(jQuery);","ast":null,"map":{"version":3,"sources":["/client/jquery.lettering.js"],"names":[],"mappings":";;;;;;;;;;;;AAYA,CAAC,UAAS,CAAT,EAAW;AACV,WAAS,QAAT,CAAkB,CAAlB,EAAqB,QAArB,EAA+B,KAA/B,EAAsC,KAAtC,EAA6C;AAC3C,QAAI,OAAO,EAAE,IAAF,EAAX;AAAA,QACE,IAAI,KAAK,KAAL,CAAW,QAAX,CADN;AAAA,QAEE,SAAS,EAFX;AAGA,QAAI,EAAE,MAAN,EAAc;AACZ,QAAE,CAAF,EAAK,IAAL,CAAU,UAAS,CAAT,EAAY,IAAZ,EAAkB;AAC1B,kBAAU,kBAAgB,KAAhB,IAAuB,IAAE,CAAzB,IAA4B,uBAA5B,GAAoD,IAApD,GAAyD,SAAzD,GAAmE,KAA7E;AACD,OAFD;AAGA,QAAE,IAAF,CAAO,YAAP,EAAoB,IAApB,EACC,KADD,GAEC,MAFD,CAEQ,MAFR;AAID;AACF;;AAGD,MAAI,UAAU;AACZ;AAAO,sBAAW;;AAEhB,eAAO,KAAK,IAAL,CAAU,YAAW;AAC1B,mBAAS,EAAE,IAAF,CAAT,EAAkB,EAAlB,EAAsB,MAAtB,EAA8B,EAA9B;AACD,SAFM,CAAP;AAID;;AAND;AAAA,OADY;;AASZ;AAAQ,uBAAW;;AAEjB,eAAO,KAAK,IAAL,CAAU,YAAW;AAC1B,mBAAS,EAAE,IAAF,CAAT,EAAkB,GAAlB,EAAuB,MAAvB,EAA+B,GAA/B;AACD,SAFM,CAAP;AAID;;AAND;AAAA,OATY;;AAiBZ;AAAQ,uBAAW;;AAEjB,eAAO,KAAK,IAAL,CAAU,YAAW;AAC1B,cAAI,IAAI,kCAAR;;;;;AAKA,mBAAS,EAAE,IAAF,EAAQ,QAAR,CAAiB,IAAjB,EAAuB,WAAvB,CAAmC,CAAnC,EAAsC,GAAtC,EAAT,EAAsD,CAAtD,EAAyD,MAAzD,EAAiE,EAAjE;AACD,SAPM,CAAP;AASD;;AAXD;AAAA;AAjBY,GAAd;;AA+BA,IAAE,EAAF,CAAK,SAAL,GAAiB,UAAU,MAAV,EAAmB;;AAElC,QAAK,UAAU,QAAQ,MAAR,CAAf,EAAiC;AAC/B,aAAO,QAAS,MAAT,EAAkB,KAAlB,CAAyB,IAAzB,EAA+B,GAAG,KAAH,CAAS,IAAT,CAAe,SAAf,EAA0B,CAA1B,CAA/B,CAAP;AACD,KAFD,MAEO,IAAK,WAAW,SAAX,IAAwB,CAAE,MAA/B,EAAwC;AAC7C,aAAO,QAAQ,IAAR,CAAa,KAAb,CAAoB,IAApB,EAA0B,GAAG,KAAH,CAAS,IAAT,CAAe,SAAf,EAA0B,CAA1B,CAA1B,CAAP,C;AACD;AACD,MAAE,KAAF,CAAS,YAAa,MAAb,GAAsB,qCAA/B;AACA,WAAO,IAAP;AACD,GATD;AAWD,CA3DD,EA2DG,MA3DH","file":"/client/jquery.lettering.js.map","sourcesContent":["/*global jQuery */\n/*!\n* Lettering.JS 0.7.0\n*\n* Copyright 2010, Dave Rupert http://daverupert.com\n* Released under the WTFPL license\n* http://sam.zoy.org/wtfpl/\n*\n* Thanks to Paul Irish - http://paulirish.com - for the feedback.\n*\n* Date: Mon Sep 20 17:14:00 2010 -0600\n*/\n(function($){\n  function injector(t, splitter, klass, after) {\n    var text = t.text()\n    , a = text.split(splitter)\n    , inject = '';\n    if (a.length) {\n      $(a).each(function(i, item) {\n        inject += '<span class=\"'+klass+(i+1)+'\" aria-hidden=\"true\">'+item+'</span>'+after;\n      });\n      t.attr('aria-label',text)\n      .empty()\n      .append(inject)\n\n    }\n  }\n\n\n  var methods = {\n    init : function() {\n\n      return this.each(function() {\n        injector($(this), '', 'char', '');\n      });\n\n    },\n\n    words : function() {\n\n      return this.each(function() {\n        injector($(this), ' ', 'word', ' ');\n      });\n\n    },\n\n    lines : function() {\n\n      return this.each(function() {\n        var r = \"eefec303079ad17405c889e092e105b0\";\n        // Because it's hard to split a <br/> tag consistently across browsers,\n        // (*ahem* IE *ahem*), we replace all <br/> instances with an md5 hash\n        // (of the word \"split\").  If you're trying to use this plugin on that\n        // md5 hash string, it will fail because you're being ridiculous.\n        injector($(this).children(\"br\").replaceWith(r).end(), r, 'line', '');\n      });\n\n    }\n  };\n\n  $.fn.lettering = function( method ) {\n    // Method calling logic\n    if ( method && methods[method] ) {\n      return methods[ method ].apply( this, [].slice.call( arguments, 1 ));\n    } else if ( method === 'letters' || ! method ) {\n      return methods.init.apply( this, [].slice.call( arguments, 0 ) ); // always pass an array\n    }\n    $.error( 'Method ' +  method + ' does not exist on jQuery.lettering' );\n    return this;\n  };\n\n})(jQuery);\n"]},"hash":"09f564ab50f977cbbc464a572803d3b37e85ebc7"}
