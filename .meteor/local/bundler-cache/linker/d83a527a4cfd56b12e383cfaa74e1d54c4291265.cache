[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nAccounts = Package['accounts-base'].Accounts;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nmoment = Package['momentjs:moment'].moment;\nlivestamp = Package['copleykj:livestamp'].livestamp;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"template.main.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// client/template.main.js                                                               //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\n                                                                                         // 1\nTemplate.body.addContent((function() {                                                   // 2\n  var view = this;                                                                       // 3\n  return HTML.Raw('<div id=\"render-target\"></div>');                                     // 4\n}));                                                                                     // 5\nMeteor.startup(Template.body.renderToDocument);                                          // 6\n                                                                                         // 7\n///////////////////////////////////////////////////////////////////////////////////////////\n\n},\"morphext.min.js\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// client/morphext.min.js                                                                //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\n/*! Morphext - v2.4.5 - 2015-08-26 */!function(a){\"use strict\";function b(b,c){this.element=a(b),this.settings=a.extend({},d,c),this._defaults=d,this._init()}var c=\"Morphext\",d={animation:\"bounceIn\",separator:\",\",speed:2e3,complete:a.noop};b.prototype={_init:function(){var b=this;this.phrases=[],this.element.addClass(\"morphext\"),a.each(this.element.text().split(this.settings.separator),function(c,d){b.phrases.push(a.trim(d))}),this.index=-1,this.animate(),this.start()},animate:function(){this.index=++this.index%this.phrases.length,this.element[0].innerHTML='<span class=\"animated '+this.settings.animation+'\">'+this.phrases[this.index]+\"</span>\",a.isFunction(this.settings.complete)&&this.settings.complete.call(this)},start:function(){var a=this;this._interval=setInterval(function(){a.animate()},this.settings.speed)},stop:function(){this._interval=clearInterval(this._interval)}},a.fn[c]=function(d){return this.each(function(){a.data(this,\"plugin_\"+c)||a.data(this,\"plugin_\"+c,new b(this,d))})}}(jQuery);\n                                                                                         // 2\n///////////////////////////////////////////////////////////////////////////////////////////\n\n},\"utilities.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// client/utilities.js                                                                   //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nmodule.export({validateAnswer:function(){return validateAnswer},timer:function(){return timer}});function validateAnswer(answer, acroletters) {\n  var acrolength = acroletters.length;                                                   // 2\n  var theAnswer = answer.replace(/(\\s+)/g, \" \");                                         // 3\n  var answersplit = theAnswer.split(\" \");                                                // 4\n  var answerlength = answersplit.length;                                                 // 5\n                                                                                         //\n  if (theAnswer === [\"\"] || theAnswer === [\"\", \"\"]) {                                    // 7\n    return 1; // answer fail code 1 (\"Not feeling inspired?\")                            // 8\n  }                                                                                      // 9\n  if (acrolength !== answerlength) {                                                     // 10\n    return 2; // answer fail code 2 (\"Incorrect answer length...\")                       // 11\n  }                                                                                      // 12\n  for (var i = 0; i < acrolength; i++) {                                                 // 13\n    if (answersplit[i][0].toUpperCase() !== acroletters[i]) {                            // 14\n      return 3; // answer fail code 3 (\"Check your letters...\")                          // 15\n    }                                                                                    // 16\n  }                                                                                      // 17\n  return theAnswer;                                                                      // 18\n}                                                                                        // 19\n                                                                                         //\nfunction timer(seconds, container) {                                                     // 21\n  $(\".\" + container).text(\":\" + seconds);                                                // 22\n  $(\".\" + container).css(\"display\", \"inline-block\");                                     // 23\n                                                                                         //\n  setTimeout(function () {                                                               // 25\n    var count = seconds;                                                                 // 26\n    var counter = setInterval(tock, 1000);                                               // 27\n                                                                                         //\n    function tock() {                                                                    // 29\n      count = count - 1;                                                                 // 30\n      if (count <= 0) {                                                                  // 31\n        clearInterval(counter);                                                          // 32\n        playtimerflag = \"notrunning\";                                                    // 33\n        return;                                                                          // 34\n      }                                                                                  // 35\n                                                                                         //\n      $(\".\" + container).text(\":\" + count);                                              // 37\n      if (count < 6) {                                                                   // 38\n        $(\".\" + container).css(\"color\", \"red\");                                          // 39\n      }                                                                                  // 40\n    }                                                                                    // 41\n  }, 4000);                                                                              // 42\n}                                                                                        // 43\n///////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.jsx\":[\"react\",\"meteor/meteor\",\"react-dom\",\"meteor/momentjs:moment\",\"../imports/startup/accounts-config.js\",\"./utilities.js\",\"./morphext.min.js\",\"../imports/ui/App.jsx\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// client/main.jsx                                                                       //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nvar React;module.import('react',{\"default\":function(v){React=v}});var Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var render;module.import('react-dom',{\"render\":function(v){render=v}});var moment;module.import('meteor/momentjs:moment',{\"moment\":function(v){moment=v}});module.import('../imports/startup/accounts-config.js');module.import('./utilities.js');module.import('./morphext.min.js');var App;module.import('../imports/ui/App.jsx',{\"default\":function(v){App=v}});\n                                                                                         // 2\n                                                                                         // 3\n                                                                                         // 4\n                                                                                         //\n                                                                                         // 6\n                                                                                         // 7\n                                                                                         // 8\n                                                                                         // 9\n                                                                                         //\nMeteor.startup(function () {                                                             // 11\n  render(React.createElement(App, null), document.getElementById('render-target'));      // 12\n});                                                                                      // 13\n                                                                                         //\nMeteor.subscribe(\"userData\");                                                            // 15\n                                                                                         //\n// DB room setup                                                                         //\n// db.rooms.insert({ room_id: \"FamilyRoom\", displayName: \"Family Room\", family: true, round: 0, subround: \"Waiting for players\" });\n// db.rooms.insert({ room_id: \"HotTub\", displayName: \"Hot Tub\", family: false, round: 0, subround: \"Waiting for players\" });\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"imports\":{\"startup\":{\"accounts-config.js\":[\"meteor/accounts-base\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// imports/startup/accounts-config.js                                                    //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nvar Accounts;module.import('meteor/accounts-base',{\"Accounts\":function(v){Accounts=v}});\n                                                                                         //\nAccounts.ui.config({                                                                     // 3\n    passwordSignupFields: 'USERNAME_AND_EMAIL'                                           // 4\n});                                                                                      // 3\n                                                                                         //\nAccounts.onLogin(function (user) {                                                       // 7\n    $(\".mainScreen\").show();                                                             // 8\n    //App.showPrivate();                                                                 //\n});                                                                                      // 10\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"ui\":{\"App.jsx\":function(){\n\n///////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                       //\n// imports/ui/App.jsx                                                                    //\n//                                                                                       //\n///////////////////////////////////////////////////////////////////////////////////////////\n                                                                                         //\nthrow new Error(\"Unexpected token (72:28)\");                                             // 1\n                                                                                         // 2\n///////////////////////////////////////////////////////////////////////////////////////////\n\n}}}},{\"extensions\":[\".js\",\".json\",\".html\",\".jsx\",\".css\"]});\nrequire(\"./client/template.main.js\");\nrequire(\"./client/morphext.min.js\");\nrequire(\"./client/utilities.js\");\nrequire(\"./client/main.jsx\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/client/template.main.js","/client/morphext.min.js","/client/utilities.js","/client/main.jsx","/imports/startup/accounts-config.js","imports/ui/App.jsx"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,6F;;;;;;;;;;;ACNA;AACA,6F;;;;;;;;;;;ACDA,OAAO,SAAS,cAAT,CAAwB,MAAxB,EAAgC,WAAhC,EAA6C;AAClD,MAAI,aAAa,YAAY,MAA7B;AACA,MAAI,YAAY,OAAO,OAAP,CAAe,QAAf,EAAyB,GAAzB,CAAhB;AACA,MAAI,cAAc,UAAU,KAAV,CAAgB,GAAhB,CAAlB;AACA,MAAI,eAAe,YAAY,MAA/B;;AAEA,MAAI,cAAc,CAAC,EAAD,CAAd,IAAsB,cAAc,CAAC,EAAD,EAAK,EAAL,CAAxC,EAAkD;AAChD,WAAO,CAAP,C;AACD;AACD,MAAI,eAAe,YAAnB,EAAiC;AAC/B,WAAO,CAAP,C;AACD;AACD,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,UAApB,EAAgC,GAAhC,EAAqC;AACnC,QAAI,YAAY,CAAZ,EAAe,CAAf,EAAkB,WAAlB,OAAoC,YAAY,CAAZ,CAAxC,EAAwD;AACtD,aAAO,CAAP,C;AACD;AACF;AACD,SAAO,SAAP;AACD;;AAED,OAAO,SAAS,KAAT,CAAe,OAAf,EAAwB,SAAxB,EAAmC;AACxC,IAAE,MAAM,SAAR,EAAmB,IAAnB,CAAwB,MAAM,OAA9B;AACA,IAAE,MAAM,SAAR,EAAmB,GAAnB,CAAuB,SAAvB,EAAkC,cAAlC;;AAEA,aAAW,YAAW;AACpB,QAAI,QAAQ,OAAZ;AACA,QAAI,UAAU,YAAY,IAAZ,EAAkB,IAAlB,CAAd;;AAEA,aAAS,IAAT,GAAgB;AACd,cAAM,QAAM,CAAZ;AACA,UAAI,SAAS,CAAb,EAAgB;AACb,sBAAc,OAAd;AACA,wBAAgB,YAAhB;AACA;AACF;;AAED,QAAE,MAAM,SAAR,EAAmB,IAAnB,CAAwB,MAAM,KAA9B;AACA,UAAI,QAAQ,CAAZ,EAAe;AACb,UAAE,MAAM,SAAR,EAAmB,GAAnB,CAAuB,OAAvB,EAAgC,KAAhC;AACD;AACF;AACF,GAjBD,EAiBG,IAjBH;AAkBD,8F;;;;;;;;;;;AC1CD,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,MAAT,QAAuB,eAAvB;AACA,SAAS,MAAT,QAAuB,WAAvB;AACA,SAAS,MAAT,QAAuB,wBAAvB;;AAEA,OAAO,uCAAP;AACA,OAAO,gBAAP;AACA,OAAO,mBAAP;AACA,OAAO,GAAP,MAAgB,uBAAhB;;AAEA,OAAO,OAAP,CAAe,YAAM;AACnB,SAAO,oBAAC,GAAD,OAAP,EAAgB,SAAS,cAAT,CAAwB,eAAxB,CAAhB;AACD,CAFD;;AAIA,OAAO,SAAP,CAAiB,UAAjB;;;;;;;;;;;;;;;ACdA,SAAS,QAAT,QAAyB,sBAAzB;;AAEA,SAAS,EAAT,CAAY,MAAZ,CAAmB;AACjB,0BAAsB;AADL,CAAnB;;AAIA,SAAS,OAAT,CAAiB,UAAS,IAAT,EAAc;AAC3B,MAAE,aAAF,EAAiB,IAAjB;;AAEH,CAHD,6F;;;;;;;;;;;ACNA;AACA,6F","file":"/app.js","sourcesContent":["\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.Raw('<div id=\"render-target\"></div>');\n}));\nMeteor.startup(Template.body.renderToDocument);\n","/*! Morphext - v2.4.5 - 2015-08-26 */!function(a){\"use strict\";function b(b,c){this.element=a(b),this.settings=a.extend({},d,c),this._defaults=d,this._init()}var c=\"Morphext\",d={animation:\"bounceIn\",separator:\",\",speed:2e3,complete:a.noop};b.prototype={_init:function(){var b=this;this.phrases=[],this.element.addClass(\"morphext\"),a.each(this.element.text().split(this.settings.separator),function(c,d){b.phrases.push(a.trim(d))}),this.index=-1,this.animate(),this.start()},animate:function(){this.index=++this.index%this.phrases.length,this.element[0].innerHTML='<span class=\"animated '+this.settings.animation+'\">'+this.phrases[this.index]+\"</span>\",a.isFunction(this.settings.complete)&&this.settings.complete.call(this)},start:function(){var a=this;this._interval=setInterval(function(){a.animate()},this.settings.speed)},stop:function(){this._interval=clearInterval(this._interval)}},a.fn[c]=function(d){return this.each(function(){a.data(this,\"plugin_\"+c)||a.data(this,\"plugin_\"+c,new b(this,d))})}}(jQuery);\n","export function validateAnswer(answer, acroletters) {\n  var acrolength = acroletters.length;\n  var theAnswer = answer.replace(/(\\s+)/g, \" \");\n  var answersplit = theAnswer.split(\" \");\n  var answerlength = answersplit.length;\n\n  if (theAnswer === [\"\"] || theAnswer === [\"\", \"\"]) {\n    return 1 // answer fail code 1 (\"Not feeling inspired?\")\n  }\n  if (acrolength !== answerlength) {\n    return 2  // answer fail code 2 (\"Incorrect answer length...\")\n  }\n  for (var i = 0; i < acrolength; i++) {\n    if (answersplit[i][0].toUpperCase() !== acroletters[i]) {\n      return 3 // answer fail code 3 (\"Check your letters...\")\n    }\n  }\n  return theAnswer\n}\n\nexport function timer(seconds, container) {\n  $(\".\" + container).text(\":\" + seconds);\n  $(\".\" + container).css(\"display\", \"inline-block\");\n\n  setTimeout(function() {\n    var count = seconds;\n    var counter = setInterval(tock, 1000);\n\n    function tock() {\n      count=count-1;\n      if (count <= 0) {\n         clearInterval(counter);\n         playtimerflag = \"notrunning\"\n         return;\n      }\n\n      $(\".\" + container).text(\":\" + count);\n      if (count < 6) {\n        $(\".\" + container).css(\"color\", \"red\");\n      }\n    }\n  }, 4000);\n}\n","import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\nimport { moment } from 'meteor/momentjs:moment';\n\nimport '../imports/startup/accounts-config.js';\nimport './utilities.js';\nimport './morphext.min.js';\nimport App from '../imports/ui/App.jsx';\n\nMeteor.startup(() => {\n  render(<App />, document.getElementById('render-target'));\n});\n\nMeteor.subscribe(\"userData\");\n\n// DB room setup\n// db.rooms.insert({ room_id: \"FamilyRoom\", displayName: \"Family Room\", family: true, round: 0, subround: \"Waiting for players\" });\n// db.rooms.insert({ room_id: \"HotTub\", displayName: \"Hot Tub\", family: false, round: 0, subround: \"Waiting for players\" });\n\n\n","import { Accounts } from 'meteor/accounts-base';\n\nAccounts.ui.config({\n  passwordSignupFields: 'USERNAME_AND_EMAIL',\n});\n\nAccounts.onLogin(function(user){\n    $(\".mainScreen\").show();\n    //App.showPrivate();\n});\n","throw new Error(\"Unexpected token (72:28)\");\n"]}}]