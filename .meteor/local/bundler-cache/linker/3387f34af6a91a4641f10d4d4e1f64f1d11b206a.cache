[{"type":"js","data":"//////////////////////////////////////////////////////////////////////////\n//                                                                      //\n// This is a generated file. You can view the original                  //\n// source in your browser if your browser supports source maps.         //\n// Source maps are supported by all recent versions of Chrome, Safari,  //\n// and Firefox, and by Internet Explorer 11.                            //\n//                                                                      //\n//////////////////////////////////////////////////////////////////////////\n\n\n(function () {\n\n/* Imports */\nvar Meteor = Package.meteor.Meteor;\nvar global = Package.meteor.global;\nvar meteorEnv = Package.meteor.meteorEnv;\nvar moment = Package['momentjs:moment'].moment;\nvar Tracker = Package.tracker.Tracker;\nvar Deps = Package.tracker.Deps;\n\n/* Package-scope variables */\nvar ReactiveFromNow, ReactiveFromNowTest;\n\n(function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                     //\n// packages/glasser_reactive-fromnow/packages/glasser_reactive-fromnow.js              //\n//                                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////\n                                                                                       //\n(function () {                                                                         // 1\n                                                                                       // 2\n///////////////////////////////////////////////////////////////////////////////////    // 3\n//                                                                               //    // 4\n// packages/glasser:reactive-fromnow/reactive-fromnow.js                         //    // 5\n//                                                                               //    // 6\n///////////////////////////////////////////////////////////////////////////////////    // 7\n                                                                                 //    // 8\nReactiveFromNow = function (then, options) {                                     // 1  // 9\n  options = options || {};                                                       // 2  // 10\n                                                                                 // 3  // 11\n  var thenMoment = moment(then);                                                 // 4  // 12\n  var nowMoment = options.fromWhen ? moment(options.fromWhen) : moment();        // 5  // 13\n  // to/from appears to be undocumented but is what is used internally by        // 6  // 14\n  // moment.from/moment.fromNow.  Note that this duration is typically negative, // 7  // 15\n  // for \"ago\" durations.                                                        // 8  // 16\n  var duration = moment.duration({ to: thenMoment, from: nowMoment });           // 9  // 17\n  var absDuration = moment.duration(duration).abs();                             // 10\n                                                                                 // 11\n  if (options.maxRelativeMs &&                                                   // 12\n      absDuration.asMilliseconds() > options.maxRelativeMs) {                    // 13\n    var absoluteFormat = options.absoluteFormat || 'YYYY-MMM-DD h:mm a';         // 14\n    // No need to set an expiration time: we're never going to shift from        // 15\n    // absolute back to relative.                                                // 16\n    return thenMoment.format(absoluteFormat);                                    // 17\n  }                                                                              // 18\n                                                                                 // 19\n  if (Tracker.active && ! options.noReactivity) {                                // 20\n    var expirationMs = expirationMsFromDuration(absDuration);                    // 21\n    var computation = Tracker.currentComputation;                                // 22\n    var timer = Meteor.setTimeout(function () {                                  // 23\n      computation.invalidate();                                                  // 24\n    }, expirationMs);                                                            // 25\n    computation.onInvalidate(function () {                                       // 26\n      clearTimeout(timer);                                                       // 27\n    });                                                                          // 28\n  }                                                                              // 29\n                                                                                 // 30\n  if (duration.asSeconds() >= 0) {  // future times                              // 31\n    return \"just now\";                                                           // 32\n  } else {                                                                       // 33\n    return duration.humanize(true);                                              // 34\n  }                                                                              // 35\n};                                                                               // 36\n                                                                                 // 37\n                                                                                 // 38\nvar expirationMsFromDuration = function (duration) {                             // 39\n  if (duration.asMinutes() < 1) {                                                // 40\n    return 1000;  // refresh each second                                         // 41\n  }                                                                              // 42\n  if (duration.asHours() < 1) {                                                  // 43\n    return (60 - duration.seconds())*1000;  // refresh next minute               // 44\n  }                                                                              // 45\n  return (60 - duration.minutes())*60*1000                                       // 46\n    - (duration.seconds())*1000;  // refresh next hour                           // 47\n};                                                                               // 48\n                                                                                 // 49\nReactiveFromNowTest = {                                                          // 50\n  expirationMsFromDuration: expirationMsFromDuration                             // 51\n};                                                                               // 52\n                                                                                 // 53\n///////////////////////////////////////////////////////////////////////////////////    // 62\n                                                                                       // 63\n}).call(this);                                                                         // 64\n                                                                                       // 65\n/////////////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n\n\n/* Exports */\nif (typeof Package === 'undefined') Package = {};\n(function (pkg, symbols) {\n  for (var s in symbols)\n    (s in pkg) || (pkg[s] = symbols[s]);\n})(Package['glasser:reactive-fromnow'] = {}, {\n  ReactiveFromNow: ReactiveFromNow,\n  ReactiveFromNowTest: ReactiveFromNowTest\n});\n\n})();\n","servePath":"/packages/glasser_reactive-fromnow.js","sourceMap":{"version":3,"sources":["/packages/glasser_reactive-fromnow/packages/glasser_reactive-fromnow.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4F","file":"/packages/glasser_reactive-fromnow.js","sourcesContent":["(function () {\n\n///////////////////////////////////////////////////////////////////////////////////\n//                                                                               //\n// packages/glasser:reactive-fromnow/reactive-fromnow.js                         //\n//                                                                               //\n///////////////////////////////////////////////////////////////////////////////////\n                                                                                 //\nReactiveFromNow = function (then, options) {                                     // 1\n  options = options || {};                                                       // 2\n                                                                                 // 3\n  var thenMoment = moment(then);                                                 // 4\n  var nowMoment = options.fromWhen ? moment(options.fromWhen) : moment();        // 5\n  // to/from appears to be undocumented but is what is used internally by        // 6\n  // moment.from/moment.fromNow.  Note that this duration is typically negative, // 7\n  // for \"ago\" durations.                                                        // 8\n  var duration = moment.duration({ to: thenMoment, from: nowMoment });           // 9\n  var absDuration = moment.duration(duration).abs();                             // 10\n                                                                                 // 11\n  if (options.maxRelativeMs &&                                                   // 12\n      absDuration.asMilliseconds() > options.maxRelativeMs) {                    // 13\n    var absoluteFormat = options.absoluteFormat || 'YYYY-MMM-DD h:mm a';         // 14\n    // No need to set an expiration time: we're never going to shift from        // 15\n    // absolute back to relative.                                                // 16\n    return thenMoment.format(absoluteFormat);                                    // 17\n  }                                                                              // 18\n                                                                                 // 19\n  if (Tracker.active && ! options.noReactivity) {                                // 20\n    var expirationMs = expirationMsFromDuration(absDuration);                    // 21\n    var computation = Tracker.currentComputation;                                // 22\n    var timer = Meteor.setTimeout(function () {                                  // 23\n      computation.invalidate();                                                  // 24\n    }, expirationMs);                                                            // 25\n    computation.onInvalidate(function () {                                       // 26\n      clearTimeout(timer);                                                       // 27\n    });                                                                          // 28\n  }                                                                              // 29\n                                                                                 // 30\n  if (duration.asSeconds() >= 0) {  // future times                              // 31\n    return \"just now\";                                                           // 32\n  } else {                                                                       // 33\n    return duration.humanize(true);                                              // 34\n  }                                                                              // 35\n};                                                                               // 36\n                                                                                 // 37\n                                                                                 // 38\nvar expirationMsFromDuration = function (duration) {                             // 39\n  if (duration.asMinutes() < 1) {                                                // 40\n    return 1000;  // refresh each second                                         // 41\n  }                                                                              // 42\n  if (duration.asHours() < 1) {                                                  // 43\n    return (60 - duration.seconds())*1000;  // refresh next minute               // 44\n  }                                                                              // 45\n  return (60 - duration.minutes())*60*1000                                       // 46\n    - (duration.seconds())*1000;  // refresh next hour                           // 47\n};                                                                               // 48\n                                                                                 // 49\nReactiveFromNowTest = {                                                          // 50\n  expirationMsFromDuration: expirationMsFromDuration                             // 51\n};                                                                               // 52\n                                                                                 // 53\n///////////////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n"]}}]