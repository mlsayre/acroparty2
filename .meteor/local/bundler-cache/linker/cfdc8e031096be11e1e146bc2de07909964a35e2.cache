[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nAccounts = Package['accounts-base'].Accounts;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"server\":{\"main.js\":[\"meteor/meteor\",\"../server/accounts-server-config.js\",function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// server/main.js                                                    //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nvar Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});module.import('../server/accounts-server-config.js');\n                                                                     // 2\n                                                                     //\nMeteor.startup(function () {                                         // 4\n  // code to run on server at startup                                //\n});                                                                  // 6\n///////////////////////////////////////////////////////////////////////\n\n}],\"accounts-server-config.js\":function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// server/accounts-server-config.js                                  //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nimport { Accounts } from 'meteor/accounts-base';\nconsole.log(\"accounts-server-config ran!\")\n\nAccounts.onCreateUser((options, user) => {\n  console.log(\"oncreateuser ran!\")\n\n  user.stats = {\n    lifetimePoints : 0,\n    lifetimeWins : 0,\n    lifetimeGamesPlayed : 0;\n  }\n\n  if (options.profile)\n    user.profile = options.profile;\n\n  return user;\n});\n\n///////////////////////////////////////////////////////////////////////\n\n}}},{\"extensions\":[\".js\",\".json\",\".jsx\"]});\nrequire(\"./server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/server/main.js","server/accounts-server-config.js"],"names":[],"mappings":";;;;;;;;AAAA,SAAS,MAAT,QAAuB,eAAvB;AACA,OAAO,qCAAP;;AAEA,OAAO,OAAP,CAAe,YAAM;;AAEpB,CAFD,wE;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/app.js","sourcesContent":["import { Meteor } from 'meteor/meteor';\nimport '../server/accounts-server-config.js';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n","import { Accounts } from 'meteor/accounts-base';\nconsole.log(\"accounts-server-config ran!\")\n\nAccounts.onCreateUser((options, user) => {\n  console.log(\"oncreateuser ran!\")\n\n  user.stats = {\n    lifetimePoints : 0,\n    lifetimeWins : 0,\n    lifetimeGamesPlayed : 0;\n  }\n\n  if (options.profile)\n    user.profile = options.profile;\n\n  return user;\n});\n"]}}]