[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nAccounts = Package['accounts-base'].Accounts;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nmoment = Package['momentjs:moment'].moment;\nlivestamp = Package['copleykj:livestamp'].livestamp;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"template.main.js\":function(){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// client/template.main.js                                           //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\n                                                                     // 1\nTemplate.body.addContent((function() {                               // 2\n  var view = this;                                                   // 3\n  return HTML.Raw('<div id=\"render-target\"></div>');                 // 4\n}));                                                                 // 5\nMeteor.startup(Template.body.renderToDocument);                      // 6\n                                                                     // 7\n///////////////////////////////////////////////////////////////////////\n\n},\"utilities.js\":function(require,exports,module){\n\n///////////////////////////////////////////////////////////////////////\n//                                                                   //\n// client/utilities.js                                               //\n//                                                                   //\n///////////////////////////////////////////////////////////////////////\n                                                                     //\nmodule.export({validateAnswer:function(){return validateAnswer},timer:function(){return timer}});function validateAnswer(answer, acroletters) {\n  var acrolength = acroletters.length;                               // 2\n  var theAnswer = answer.replace(/(\\s+)/g, \" \");                     // 3\n  var answersplit = theAnswer.split(\" \");                            // 4\n  var answerlength = answersplit.length;                             // 5\n                                                                     //\n  if (theAnswer === [\"\"] || theAnswer === [\"\", \"\"]) {                // 7\n    return 1; // answer fail code 1 (\"Not feeling inspired?\")        // 8\n  }                                                                  // 9\n  if (acrolength !== answerlength) {                                 // 10\n    return 2; // answer fail code 2 (\"Incorrect answer length...\")   // 11\n  }                                                                  // 12\n  for (var i = 0; i < acrolength; i++) {                             // 13\n    if (answersplit[i][0].toUpperCase() !== acroletters[i]) {        // 14\n      return 3; // answer fail code 3 (\"Check your letters...\")      // 15\n    }                                                                // 16\n  }                                                                  // 17\n  return theAnswer;                                                  // 18\n}                                                                    // 19\n                                                                     //\nfunction timer(seconds, container) {                                 // 21\n  $(\".\" + container).text(\":\" + seconds);                            // 22\n  $(\".\" + container).css(\"display\", \"inline-block\");                 // 23\n                                                                     //\n  setTimeout(function () {                                           // 25\n    var count = seconds;                                             // 26\n    var counter = setInterval(tock, 1000);                           // 27\n                                                                     //\n    function tock() {                                                // 29\n      count = count - 1;                                             // 30\n      if (count <= 0) {                                              // 31\n        clearInterval(counter);                                      // 32\n        playtimerflag = \"notrunning\";                                // 33\n        return;                                                      // 34\n      }                                                              // 35\n                                                                     //\n      $(\".\" + container).text(\":\" + count);                          // 37\n      if (count < 6) {                                               // 38\n        $(\".\" + container).css(\"color\", \"red\");                      // 39\n      }                                                              // 40\n    }                                                                // 41\n  }, 4000);                                                          // 42\n}                                                                    // 43\n///////////////////////////////////////////////////////////////////////\n\n}}},{\"extensions\":[\".js\",\".json\",\".html\",\".jsx\",\".css\"]});\nrequire(\"./client/template.main.js\");\nrequire(\"./client/utilities.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/client/template.main.js","/client/utilities.js"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,yE;;;;;;;;;;;ACNA,OAAO,SAAS,cAAT,CAAwB,MAAxB,EAAgC,WAAhC,EAA6C;AAClD,MAAI,aAAa,YAAY,MAA7B;AACA,MAAI,YAAY,OAAO,OAAP,CAAe,QAAf,EAAyB,GAAzB,CAAhB;AACA,MAAI,cAAc,UAAU,KAAV,CAAgB,GAAhB,CAAlB;AACA,MAAI,eAAe,YAAY,MAA/B;;AAEA,MAAI,cAAc,CAAC,EAAD,CAAd,IAAsB,cAAc,CAAC,EAAD,EAAK,EAAL,CAAxC,EAAkD;AAChD,WAAO,CAAP,C;AACD;AACD,MAAI,eAAe,YAAnB,EAAiC;AAC/B,WAAO,CAAP,C;AACD;AACD,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,UAApB,EAAgC,GAAhC,EAAqC;AACnC,QAAI,YAAY,CAAZ,EAAe,CAAf,EAAkB,WAAlB,OAAoC,YAAY,CAAZ,CAAxC,EAAwD;AACtD,aAAO,CAAP,C;AACD;AACF;AACD,SAAO,SAAP;AACD;;AAED,OAAO,SAAS,KAAT,CAAe,OAAf,EAAwB,SAAxB,EAAmC;AACxC,IAAE,MAAM,SAAR,EAAmB,IAAnB,CAAwB,MAAM,OAA9B;AACA,IAAE,MAAM,SAAR,EAAmB,GAAnB,CAAuB,SAAvB,EAAkC,cAAlC;;AAEA,aAAW,YAAW;AACpB,QAAI,QAAQ,OAAZ;AACA,QAAI,UAAU,YAAY,IAAZ,EAAkB,IAAlB,CAAd;;AAEA,aAAS,IAAT,GAAgB;AACd,cAAM,QAAM,CAAZ;AACA,UAAI,SAAS,CAAb,EAAgB;AACb,sBAAc,OAAd;AACA,wBAAgB,YAAhB;AACA;AACF;;AAED,QAAE,MAAM,SAAR,EAAmB,IAAnB,CAAwB,MAAM,KAA9B;AACA,UAAI,QAAQ,CAAZ,EAAe;AACb,UAAE,MAAM,SAAR,EAAmB,GAAnB,CAAuB,OAAvB,EAAgC,KAAhC;AACD;AACF;AACF,GAjBD,EAiBG,IAjBH;AAkBD,0E","file":"/app.js","sourcesContent":["\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.Raw('<div id=\"render-target\"></div>');\n}));\nMeteor.startup(Template.body.renderToDocument);\n","export function validateAnswer(answer, acroletters) {\n  var acrolength = acroletters.length;\n  var theAnswer = answer.replace(/(\\s+)/g, \" \");\n  var answersplit = theAnswer.split(\" \");\n  var answerlength = answersplit.length;\n\n  if (theAnswer === [\"\"] || theAnswer === [\"\", \"\"]) {\n    return 1 // answer fail code 1 (\"Not feeling inspired?\")\n  }\n  if (acrolength !== answerlength) {\n    return 2  // answer fail code 2 (\"Incorrect answer length...\")\n  }\n  for (var i = 0; i < acrolength; i++) {\n    if (answersplit[i][0].toUpperCase() !== acroletters[i]) {\n      return 3 // answer fail code 3 (\"Check your letters...\")\n    }\n  }\n  return theAnswer\n}\n\nexport function timer(seconds, container) {\n  $(\".\" + container).text(\":\" + seconds);\n  $(\".\" + container).css(\"display\", \"inline-block\");\n\n  setTimeout(function() {\n    var count = seconds;\n    var counter = setInterval(tock, 1000);\n\n    function tock() {\n      count=count-1;\n      if (count <= 0) {\n         clearInterval(counter);\n         playtimerflag = \"notrunning\"\n         return;\n      }\n\n      $(\".\" + container).text(\":\" + count);\n      if (count < 6) {\n        $(\".\" + container).css(\"color\", \"red\");\n      }\n    }\n  }, 4000);\n}\n"]}}]