[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nAccounts = Package['accounts-base'].Accounts;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nmoment = Package['momentjs:moment'].moment;\nlivestamp = Package['copleykj:livestamp'].livestamp;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"template.main.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/template.main.js                                                                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n                                                                                                                      // 1\nTemplate.body.addContent((function() {                                                                                // 2\n  var view = this;                                                                                                    // 3\n  return HTML.Raw('<div id=\"render-target\"></div>');                                                                  // 4\n}));                                                                                                                  // 5\nMeteor.startup(Template.body.renderToDocument);                                                                       // 6\n                                                                                                                      // 7\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"jquery.lettering.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/jquery.lettering.js                                                                                         //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\n/*global jQuery */                                                                                                    //\n/*!                                                                                                                   //\n* Lettering.JS 0.7.0                                                                                                  //\n*                                                                                                                     //\n* Copyright 2010, Dave Rupert http://daverupert.com                                                                   //\n* Released under the WTFPL license                                                                                    //\n* http://sam.zoy.org/wtfpl/                                                                                           //\n*                                                                                                                     //\n* Thanks to Paul Irish - http://paulirish.com - for the feedback.                                                     //\n*                                                                                                                     //\n* Date: Mon Sep 20 17:14:00 2010 -0600                                                                                //\n*/                                                                                                                    //\n(function ($) {                                                                                                       // 13\n  function injector(t, splitter, klass, after) {                                                                      // 14\n    var text = t.text(),                                                                                              // 15\n        a = text.split(splitter),                                                                                     // 15\n        inject = '';                                                                                                  // 15\n    if (a.length) {                                                                                                   // 18\n      $(a).each(function (i, item) {                                                                                  // 19\n        inject += '<span class=\"' + klass + (i + 1) + '\" aria-hidden=\"true\">' + item + '</span>' + after;             // 20\n      });                                                                                                             // 21\n      t.attr('aria-label', text).empty().append(inject);                                                              // 22\n    }                                                                                                                 // 26\n  }                                                                                                                   // 27\n                                                                                                                      //\n  var methods = {                                                                                                     // 30\n    init: function () {                                                                                               // 31\n      function init() {                                                                                               // 31\n                                                                                                                      //\n        return this.each(function () {                                                                                // 33\n          injector($(this), '', 'char', '');                                                                          // 34\n        });                                                                                                           // 35\n      }                                                                                                               // 37\n                                                                                                                      //\n      return init;                                                                                                    // 31\n    }(),                                                                                                              // 31\n                                                                                                                      //\n    words: function () {                                                                                              // 39\n      function words() {                                                                                              // 39\n                                                                                                                      //\n        return this.each(function () {                                                                                // 41\n          injector($(this), ' ', 'word', ' ');                                                                        // 42\n        });                                                                                                           // 43\n      }                                                                                                               // 45\n                                                                                                                      //\n      return words;                                                                                                   // 39\n    }(),                                                                                                              // 39\n                                                                                                                      //\n    lines: function () {                                                                                              // 47\n      function lines() {                                                                                              // 47\n                                                                                                                      //\n        return this.each(function () {                                                                                // 49\n          var r = \"eefec303079ad17405c889e092e105b0\";                                                                 // 50\n          // Because it's hard to split a <br/> tag consistently across browsers,                                     //\n          // (*ahem* IE *ahem*), we replace all <br/> instances with an md5 hash                                      //\n          // (of the word \"split\").  If you're trying to use this plugin on that                                      //\n          // md5 hash string, it will fail because you're being ridiculous.                                           //\n          injector($(this).children(\"br\").replaceWith(r).end(), r, 'line', '');                                       // 55\n        });                                                                                                           // 56\n      }                                                                                                               // 58\n                                                                                                                      //\n      return lines;                                                                                                   // 47\n    }()                                                                                                               // 47\n  };                                                                                                                  // 30\n                                                                                                                      //\n  $.fn.lettering = function (method) {                                                                                // 61\n    // Method calling logic                                                                                           //\n    if (method && methods[method]) {                                                                                  // 63\n      return methods[method].apply(this, [].slice.call(arguments, 1));                                                // 64\n    } else if (method === 'letters' || !method) {                                                                     // 65\n      return methods.init.apply(this, [].slice.call(arguments, 0)); // always pass an array                           // 66\n    }                                                                                                                 // 67\n    $.error('Method ' + method + ' does not exist on jQuery.lettering');                                              // 68\n    return this;                                                                                                      // 69\n  };                                                                                                                  // 70\n})(jQuery);                                                                                                           // 72\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"jquery.textillate.js\":[\"babel-runtime/helpers/typeof\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/jquery.textillate.js                                                                                        //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _typeof;module.import(\"babel-runtime/helpers/typeof\",{\"default\":function(v){_typeof=v}});                         //\n/*                                                                                                                    //\n * textillate.js                                                                                                      //\n * http://jschr.github.com/textillate                                                                                 //\n * MIT licensed                                                                                                       //\n *                                                                                                                    //\n * Copyright (C) 2012-2013 Jordan Schroter                                                                            //\n */                                                                                                                   //\n                                                                                                                      //\n(function ($) {                                                                                                       // 9\n  \"use strict\";                                                                                                       // 10\n                                                                                                                      //\n  function isInEffect(effect) {                                                                                       // 12\n    return (/In/.test(effect) || $.inArray(effect, $.fn.textillate.defaults.inEffects) >= 0                           // 13\n    );                                                                                                                // 13\n  };                                                                                                                  // 14\n                                                                                                                      //\n  function isOutEffect(effect) {                                                                                      // 16\n    return (/Out/.test(effect) || $.inArray(effect, $.fn.textillate.defaults.outEffects) >= 0                         // 17\n    );                                                                                                                // 17\n  };                                                                                                                  // 18\n                                                                                                                      //\n  function stringToBoolean(str) {                                                                                     // 21\n    if (str !== \"true\" && str !== \"false\") return str;                                                                // 22\n    return str === \"true\";                                                                                            // 23\n  };                                                                                                                  // 24\n                                                                                                                      //\n  // custom get data api method                                                                                       //\n  function getData(node) {                                                                                            // 27\n    var attrs = node.attributes || [],                                                                                // 28\n        data = {};                                                                                                    // 28\n                                                                                                                      //\n    if (!attrs.length) return data;                                                                                   // 31\n                                                                                                                      //\n    $.each(attrs, function (i, attr) {                                                                                // 33\n      var nodeName = attr.nodeName.replace(/delayscale/, 'delayScale');                                               // 34\n      if (/^data-in-*/.test(nodeName)) {                                                                              // 35\n        data[\"in\"] = data[\"in\"] || {};                                                                                // 36\n        data[\"in\"][nodeName.replace(/data-in-/, '')] = stringToBoolean(attr.nodeValue);                               // 37\n      } else if (/^data-out-*/.test(nodeName)) {                                                                      // 38\n        data.out = data.out || {};                                                                                    // 39\n        data.out[nodeName.replace(/data-out-/, '')] = stringToBoolean(attr.nodeValue);                                // 40\n      } else if (/^data-*/.test(nodeName)) {                                                                          // 41\n        data[nodeName.replace(/data-/, '')] = stringToBoolean(attr.nodeValue);                                        // 42\n      }                                                                                                               // 43\n    });                                                                                                               // 44\n                                                                                                                      //\n    return data;                                                                                                      // 46\n  }                                                                                                                   // 47\n                                                                                                                      //\n  function shuffle(o) {                                                                                               // 49\n    for (var j, x, i = o.length; i; j = parseInt(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x) {}            // 50\n    return o;                                                                                                         // 51\n  }                                                                                                                   // 52\n                                                                                                                      //\n  function animate($t, effect, cb) {                                                                                  // 54\n    $t.addClass('animated ' + effect).css('visibility', 'visible').show();                                            // 55\n                                                                                                                      //\n    $t.one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function () {              // 59\n      $t.removeClass('animated ' + effect);                                                                           // 60\n      cb && cb();                                                                                                     // 61\n    });                                                                                                               // 62\n  }                                                                                                                   // 63\n                                                                                                                      //\n  function animateTokens($tokens, options, cb) {                                                                      // 65\n    var that = this,                                                                                                  // 66\n        count = $tokens.length;                                                                                       // 66\n                                                                                                                      //\n    if (!count) {                                                                                                     // 69\n      cb && cb();                                                                                                     // 70\n      return;                                                                                                         // 71\n    }                                                                                                                 // 72\n                                                                                                                      //\n    if (options.shuffle) $tokens = shuffle($tokens);                                                                  // 74\n    if (options.reverse) $tokens = $tokens.toArray().reverse();                                                       // 75\n                                                                                                                      //\n    $.each($tokens, function (i, t) {                                                                                 // 77\n      var $token = $(t);                                                                                              // 78\n                                                                                                                      //\n      function complete() {                                                                                           // 80\n        if (isInEffect(options.effect)) {                                                                             // 81\n          $token.css('visibility', 'visible');                                                                        // 82\n        } else if (isOutEffect(options.effect)) {                                                                     // 83\n          $token.css('visibility', 'hidden');                                                                         // 84\n        }                                                                                                             // 85\n        count -= 1;                                                                                                   // 86\n        if (!count && cb) cb();                                                                                       // 87\n      }                                                                                                               // 88\n                                                                                                                      //\n      var delay = options.sync ? options.delay : options.delay * i * options.delayScale;                              // 90\n                                                                                                                      //\n      $token.text() ? setTimeout(function () {                                                                        // 92\n        animate($token, options.effect, complete);                                                                    // 93\n      }, delay) : complete();                                                                                         // 93\n    });                                                                                                               // 95\n  };                                                                                                                  // 96\n                                                                                                                      //\n  var Textillate = function Textillate(element, options) {                                                            // 98\n    var base = this,                                                                                                  // 99\n        $element = $(element);                                                                                        // 99\n                                                                                                                      //\n    base.init = function () {                                                                                         // 102\n      base.$texts = $element.find(options.selector);                                                                  // 103\n                                                                                                                      //\n      if (!base.$texts.length) {                                                                                      // 105\n        base.$texts = $('<ul class=\"texts\"><li>' + $element.html() + '</li></ul>');                                   // 106\n        $element.html(base.$texts);                                                                                   // 107\n      }                                                                                                               // 108\n                                                                                                                      //\n      base.$texts.hide();                                                                                             // 110\n                                                                                                                      //\n      base.$current = $('<span>').html(base.$texts.find(':first-child').html()).prependTo($element);                  // 112\n                                                                                                                      //\n      if (isInEffect(options[\"in\"].effect)) {                                                                         // 116\n        base.$current.css('visibility', 'hidden');                                                                    // 117\n      } else if (isOutEffect(options.out.effect)) {                                                                   // 118\n        base.$current.css('visibility', 'visible');                                                                   // 119\n      }                                                                                                               // 120\n                                                                                                                      //\n      base.setOptions(options);                                                                                       // 122\n                                                                                                                      //\n      base.timeoutRun = null;                                                                                         // 124\n                                                                                                                      //\n      setTimeout(function () {                                                                                        // 126\n        base.options.autoStart && base.start();                                                                       // 127\n      }, base.options.initialDelay);                                                                                  // 128\n    };                                                                                                                // 129\n                                                                                                                      //\n    base.setOptions = function (options) {                                                                            // 131\n      base.options = options;                                                                                         // 132\n    };                                                                                                                // 133\n                                                                                                                      //\n    base.triggerEvent = function (name) {                                                                             // 135\n      var e = $.Event(name + '.tlt');                                                                                 // 136\n      $element.trigger(e, base);                                                                                      // 137\n      return e;                                                                                                       // 138\n    };                                                                                                                // 139\n                                                                                                                      //\n    base[\"in\"] = function (index, cb) {                                                                               // 141\n      index = index || 0;                                                                                             // 142\n                                                                                                                      //\n      var $elem = base.$texts.find(':nth-child(' + ((index || 0) + 1) + ')'),                                         // 144\n          options = $.extend(true, {}, base.options, $elem.length ? getData($elem[0]) : {}),                          // 144\n          $tokens;                                                                                                    // 144\n                                                                                                                      //\n      $elem.addClass('current');                                                                                      // 148\n                                                                                                                      //\n      base.triggerEvent('inAnimationBegin');                                                                          // 150\n                                                                                                                      //\n      base.$current.html($elem.html()).lettering('words');                                                            // 152\n                                                                                                                      //\n      // split words to individual characters if token type is set to 'char'                                          //\n      if (base.options.type == \"char\") {                                                                              // 157\n        base.$current.find('[class^=\"word\"]').css({                                                                   // 158\n          'display': 'inline-block',                                                                                  // 160\n          // fix for poor ios performance                                                                             //\n          '-webkit-transform': 'translate3d(0,0,0)',                                                                  // 162\n          '-moz-transform': 'translate3d(0,0,0)',                                                                     // 163\n          '-o-transform': 'translate3d(0,0,0)',                                                                       // 164\n          'transform': 'translate3d(0,0,0)'                                                                           // 165\n        }).each(function () {                                                                                         // 159\n          $(this).lettering();                                                                                        // 167\n        });                                                                                                           // 167\n      }                                                                                                               // 168\n                                                                                                                      //\n      $tokens = base.$current.find('[class^=\"' + base.options.type + '\"]').css('display', 'inline-block');            // 170\n                                                                                                                      //\n      if (isInEffect(options[\"in\"].effect)) {                                                                         // 174\n        $tokens.css('visibility', 'hidden');                                                                          // 175\n      } else if (isOutEffect(options[\"in\"].effect)) {                                                                 // 176\n        $tokens.css('visibility', 'visible');                                                                         // 177\n      }                                                                                                               // 178\n                                                                                                                      //\n      base.currentIndex = index;                                                                                      // 180\n                                                                                                                      //\n      animateTokens($tokens, options[\"in\"], function () {                                                             // 182\n        base.triggerEvent('inAnimationEnd');                                                                          // 183\n        if (options[\"in\"].callback) options[\"in\"].callback();                                                         // 184\n        if (cb) cb(base);                                                                                             // 185\n      });                                                                                                             // 186\n    };                                                                                                                // 187\n                                                                                                                      //\n    base.out = function (cb) {                                                                                        // 189\n      var $elem = base.$texts.find(':nth-child(' + ((base.currentIndex || 0) + 1) + ')'),                             // 190\n          $tokens = base.$current.find('[class^=\"' + base.options.type + '\"]'),                                       // 190\n          options = $.extend(true, {}, base.options, $elem.length ? getData($elem[0]) : {});                          // 190\n                                                                                                                      //\n      base.triggerEvent('outAnimationBegin');                                                                         // 194\n                                                                                                                      //\n      animateTokens($tokens, options.out, function () {                                                               // 196\n        $elem.removeClass('current');                                                                                 // 197\n        base.triggerEvent('outAnimationEnd');                                                                         // 198\n        if (options.out.callback) options.out.callback();                                                             // 199\n        if (cb) cb(base);                                                                                             // 200\n      });                                                                                                             // 201\n    };                                                                                                                // 202\n                                                                                                                      //\n    base.start = function (index) {                                                                                   // 204\n      setTimeout(function () {                                                                                        // 205\n        base.triggerEvent('start');                                                                                   // 206\n                                                                                                                      //\n        (function () {                                                                                                // 208\n          function run(index) {                                                                                       // 208\n            base[\"in\"](index, function () {                                                                           // 209\n              var length = base.$texts.children().length;                                                             // 210\n                                                                                                                      //\n              index += 1;                                                                                             // 212\n                                                                                                                      //\n              if (!base.options.loop && index >= length) {                                                            // 214\n                if (base.options.callback) base.options.callback();                                                   // 215\n                base.triggerEvent('end');                                                                             // 216\n              } else {                                                                                                // 217\n                index = index % length;                                                                               // 218\n                                                                                                                      //\n                base.timeoutRun = setTimeout(function () {                                                            // 220\n                  base.out(function () {                                                                              // 221\n                    run(index);                                                                                       // 222\n                  });                                                                                                 // 223\n                }, base.options.minDisplayTime);                                                                      // 224\n              }                                                                                                       // 225\n            });                                                                                                       // 226\n          }                                                                                                           // 227\n                                                                                                                      //\n          return run;                                                                                                 // 208\n        })()(index || 0);                                                                                             // 208\n      }, base.options.initialDelay);                                                                                  // 228\n    };                                                                                                                // 229\n                                                                                                                      //\n    base.stop = function () {                                                                                         // 231\n      if (base.timeoutRun) {                                                                                          // 232\n        clearInterval(base.timeoutRun);                                                                               // 233\n        base.timeoutRun = null;                                                                                       // 234\n      }                                                                                                               // 235\n    };                                                                                                                // 236\n                                                                                                                      //\n    base.init();                                                                                                      // 238\n  };                                                                                                                  // 239\n                                                                                                                      //\n  $.fn.textillate = function (settings, args) {                                                                       // 241\n    return this.each(function () {                                                                                    // 242\n      var $this = $(this),                                                                                            // 243\n          data = $this.data('textillate'),                                                                            // 243\n          options = $.extend(true, {}, $.fn.textillate.defaults, getData(this), (typeof settings === \"undefined\" ? \"undefined\" : _typeof(settings)) == 'object' && settings);\n                                                                                                                      //\n      if (!data) {                                                                                                    // 247\n        $this.data('textillate', data = new Textillate(this, options));                                               // 248\n      } else if (typeof settings == 'string') {                                                                       // 249\n        data[settings].apply(data, [].concat(args));                                                                  // 250\n      } else {                                                                                                        // 251\n        data.setOptions.call(data, options);                                                                          // 252\n      }                                                                                                               // 253\n    });                                                                                                               // 254\n  };                                                                                                                  // 255\n                                                                                                                      //\n  $.fn.textillate.defaults = {                                                                                        // 257\n    selector: '.texts',                                                                                               // 258\n    loop: false,                                                                                                      // 259\n    minDisplayTime: 2000,                                                                                             // 260\n    initialDelay: 0,                                                                                                  // 261\n    \"in\": {                                                                                                           // 262\n      effect: 'fadeInLeftBig',                                                                                        // 263\n      delayScale: 1.5,                                                                                                // 264\n      delay: 50,                                                                                                      // 265\n      sync: false,                                                                                                    // 266\n      reverse: false,                                                                                                 // 267\n      shuffle: false,                                                                                                 // 268\n      callback: function () {                                                                                         // 269\n        function callback() {}                                                                                        // 269\n                                                                                                                      //\n        return callback;                                                                                              // 269\n      }()                                                                                                             // 269\n    },                                                                                                                // 262\n    out: {                                                                                                            // 271\n      effect: 'hinge',                                                                                                // 272\n      delayScale: 1.5,                                                                                                // 273\n      delay: 50,                                                                                                      // 274\n      sync: false,                                                                                                    // 275\n      reverse: false,                                                                                                 // 276\n      shuffle: false,                                                                                                 // 277\n      callback: function () {                                                                                         // 278\n        function callback() {}                                                                                        // 278\n                                                                                                                      //\n        return callback;                                                                                              // 278\n      }()                                                                                                             // 278\n    },                                                                                                                // 271\n    autoStart: true,                                                                                                  // 280\n    inEffects: [],                                                                                                    // 281\n    outEffects: ['hinge'],                                                                                            // 282\n    callback: function () {                                                                                           // 283\n      function callback() {}                                                                                          // 283\n                                                                                                                      //\n      return callback;                                                                                                // 283\n    }(),                                                                                                              // 283\n    type: 'char'                                                                                                      // 284\n  };                                                                                                                  // 257\n})(jQuery);                                                                                                           // 287\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"utilities.js\":function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/utilities.js                                                                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({validateAnswer:function(){return validateAnswer},timer:function(){return timer}});function validateAnswer(answer, acroletters) {\n  var acrolength = acroletters.length;                                                                                // 2\n  var theAnswer = answer.replace(/(\\s+)/g, \" \");                                                                      // 3\n  var answersplit = theAnswer.split(\" \");                                                                             // 4\n  var answerlength = answersplit.length;                                                                              // 5\n                                                                                                                      //\n  if (theAnswer === [\"\"] || theAnswer === [\"\", \"\"]) {                                                                 // 7\n    return 1; // answer fail code 1 (\"Not feeling inspired?\")                                                         // 8\n  }                                                                                                                   // 9\n  if (acrolength !== answerlength) {                                                                                  // 10\n    return 2; // answer fail code 2 (\"Incorrect answer length...\")                                                    // 11\n  }                                                                                                                   // 12\n  for (var i = 0; i < acrolength; i++) {                                                                              // 13\n    if (answersplit[i][0].toUpperCase() !== acroletters[i]) {                                                         // 14\n      return 3; // answer fail code 3 (\"Check your letters...\")                                                       // 15\n    }                                                                                                                 // 16\n  }                                                                                                                   // 17\n  return theAnswer;                                                                                                   // 18\n}                                                                                                                     // 19\n                                                                                                                      //\nfunction timer(seconds, container) {                                                                                  // 21\n  $(\".\" + container).text(\":\" + seconds);                                                                             // 22\n  $(\".\" + container).css(\"display\", \"inline-block\");                                                                  // 23\n                                                                                                                      //\n  setTimeout(function () {                                                                                            // 25\n    var count = seconds;                                                                                              // 26\n    var counter = setInterval(tock, 1000);                                                                            // 27\n                                                                                                                      //\n    function tock() {                                                                                                 // 29\n      count = count - 1;                                                                                              // 30\n      if (count <= 0) {                                                                                               // 31\n        clearInterval(counter);                                                                                       // 32\n        playtimerflag = \"notrunning\";                                                                                 // 33\n        return;                                                                                                       // 34\n      }                                                                                                               // 35\n                                                                                                                      //\n      $(\".\" + container).text(\":\" + count);                                                                           // 37\n      if (count < 6) {                                                                                                // 38\n        $(\".\" + container).css(\"color\", \"red\");                                                                       // 39\n      }                                                                                                               // 40\n    }                                                                                                                 // 41\n  }, 4000);                                                                                                           // 42\n}                                                                                                                     // 43\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.jsx\":[\"react\",\"meteor/meteor\",\"react-dom\",\"meteor/momentjs:moment\",\"../imports/startup/accounts-config.js\",\"./utilities.js\",\"./jquery.lettering.js\",\"./jquery.textillate.js\",\"../imports/ui/App.jsx\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// client/main.jsx                                                                                                    //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar React;module.import('react',{\"default\":function(v){React=v}});var Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var render;module.import('react-dom',{\"render\":function(v){render=v}});var moment;module.import('meteor/momentjs:moment',{\"moment\":function(v){moment=v}});module.import('../imports/startup/accounts-config.js');module.import('./utilities.js');module.import('./jquery.lettering.js');module.import('./jquery.textillate.js');var App;module.import('../imports/ui/App.jsx',{\"default\":function(v){App=v}});\n                                                                                                                      // 2\n                                                                                                                      // 3\n                                                                                                                      // 4\n                                                                                                                      //\n                                                                                                                      // 6\n                                                                                                                      // 7\n                                                                                                                      // 8\n                                                                                                                      // 9\n                                                                                                                      // 10\n                                                                                                                      //\nMeteor.startup(function () {                                                                                          // 12\n  render(React.createElement(App, null), document.getElementById('render-target'));                                   // 13\n});                                                                                                                   // 14\n                                                                                                                      //\nMeteor.subscribe(\"userData\");                                                                                         // 16\n                                                                                                                      //\n// DB room setup                                                                                                      //\n// db.rooms.insert({ room_id: \"FamilyRoom\", displayName: \"Family Room\", family: true, round: 0, subround: \"Waiting for players\" });\n// db.rooms.insert({ room_id: \"HotTub\", displayName: \"Hot Tub\", family: false, round: 0, subround: \"Waiting for players\" });\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"imports\":{\"api\":{\"chats.js\":[\"meteor/mongo\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/api/chats.js                                                                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({Chats:function(){return Chats}});var Mongo;module.import('meteor/mongo',{\"Mongo\":function(v){Mongo=v}});\n                                                                                                                      //\nvar Chats = new Mongo.Collection('chats');                                                                            // 3\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"gamedata.js\":[\"meteor/meteor\",\"meteor/mongo\",\"meteor/check\",\"../api/rooms.js\",\"../api/games.js\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/api/gamedata.js                                                                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({Gamedata:function(){return Gamedata}});var Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var Mongo;module.import('meteor/mongo',{\"Mongo\":function(v){Mongo=v}});var check;module.import('meteor/check',{\"check\":function(v){check=v}});var Rooms;module.import('../api/rooms.js',{\"Rooms\":function(v){Rooms=v}});var Games;module.import('../api/games.js',{\"Games\":function(v){Games=v}});\n                                                                                                                      // 2\n                                                                                                                      // 3\n                                                                                                                      //\n                                                                                                                      // 5\n                                                                                                                      // 6\nvar Gamedata = new Mongo.Collection('gamedata');                                                                      // 7\n                                                                                                                      //\nMeteor.methods({                                                                                                      // 9\n  'gamedata.postAnswer': function () {                                                                                // 10\n    function gamedataPostAnswer(roomId, userId, answer) {                                                             // 9\n      var submitAnswerTime = new Date();                                                                              // 11\n      Gamedata.update({ room_id: roomId, user_id: userId }, {                                                         // 12\n        $set: { answer: answer,                                                                                       // 13\n          submitAnswerTime: submitAnswerTime }                                                                        // 14\n      });                                                                                                             // 12\n      var countStarted = Games.findOne({ room_id: roomId }).playStartTime;                                            // 16\n      var finalSubmitTime = (submitAnswerTime - countStarted) / 1000;                                                 // 17\n      Gamedata.update({ room_id: roomId, user_id: userId }, {                                                         // 18\n        $set: { finalAnswerTime: finalSubmitTime }                                                                    // 19\n      });                                                                                                             // 18\n    }                                                                                                                 // 21\n                                                                                                                      //\n    return gamedataPostAnswer;                                                                                        // 9\n  }()                                                                                                                 // 9\n});                                                                                                                   // 9\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"games.js\":[\"meteor/meteor\",\"meteor/mongo\",\"meteor/check\",\"react-dom\",\"../api/rooms.js\",\"../api/gamedata.js\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/api/games.js                                                                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({Games:function(){return Games}});var Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var Mongo;module.import('meteor/mongo',{\"Mongo\":function(v){Mongo=v}});var check;module.import('meteor/check',{\"check\":function(v){check=v}});var ReactDOM;module.import('react-dom',{\"default\":function(v){ReactDOM=v}});var Rooms;module.import('../api/rooms.js',{\"Rooms\":function(v){Rooms=v}});var Gamedata;module.import('../api/gamedata.js',{\"Gamedata\":function(v){Gamedata=v}});\n                                                                                                                      // 2\n                                                                                                                      // 3\n                                                                                                                      // 4\n                                                                                                                      //\n                                                                                                                      // 6\n                                                                                                                      // 7\nvar Games = new Mongo.Collection('games');                                                                            // 8\n                                                                                                                      //\n// game config                                                                                                        //\nacroLettersPool = \"AAAAAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBBBBBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCDDDDDDDDDDDDDDDDDDDDDDDDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFFFFFFFFFFFFFFFFFFFFFFFFGGGGGGGGGGGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHIIIIIIIIIIIIIIIIIIIIIIJJJJJKKKKKKLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOPPPPPPPPPPPPPPPPPPPPPPPPQQQQRRRRRRRRRRRRRRRRRRSSSSSSSSSSSSSSSSSSSSSSSSTTTTTTTTTTTTTTTTTTTTTTTTUUUUUUUVVVVVVVVVVVVWWWWWWWWWWWWXYYYYYYYYYYYYZZZZ\";\n                                                                                                                      //\nacroCategories = [\"General\", \"Sports\", \"Food\", \"Movies\", \"Television\", \"History\", \"Music\", \"Art\", \"Animals\", \"Science\", \"Politics\", \"Fashion\", \"Books\", \"Travel\", \"Celebrities\", \"Romance\", \"Technology\", \"Family\", \"School\", \"Nature\", \"Health\", \"Current Events\", \"Work\", \"Give Some Advice\", \"Definitions\", \"Sayings\", \"Exercise/Fitness\", \"Baby's First Sentence\", \"My Greatest Fear\", \"In the Year 3000\", \"Weird Laws\", \"I Was Late Because...\", \"Odd College Majors\", \"My Biggest Secret\", \"New Ice Cream Flavors\", \"Bad Restaurant Names\", \"I Got Fired Because...\", \"Odd Product Slogans\", \"Bad Habits\", \"Science Fiction\", \"Strange Trends\", \"Embarrassing Moments\", \"CAVEMAN SAY...\", \"Superhero/villain Names\", \"Horror Movie Titles\", \"In a Perfect World...\", \"Short Poetry\", \"New Year's Resolutions\", \"My Dream Last Night\", \"Odd Tombstone Messages\", \"Awful First Dates\", \"Odd Holiday Customs\", \"The Holidays\", \"Short Ghost Stories\", \"... Said No One Ever\", \"Fairy/Folk Tales\"];\n                                                                                                                      //\nroundsToPlay = 8;                                                                                                     // 25\nroundTimes = [50, 60, 60, 80, 50, 60, 60, 80];                                                                        // 26\nroundAcroLength = [3, 4, 5, 6, 3, 4, 5, 6];                                                                           // 27\nreadyTimer = {};                                                                                                      // 28\nplayTimer = {};                                                                                                       // 29\nplayStartTimer = {};                                                                                                  // 30\nvoteTimer = {};                                                                                                       // 31\nresultsTimer = {};                                                                                                    // 32\nfinalTimer = {};                                                                                                      // 33\n                                                                                                                      //\n////////////                                                                                                          //\n                                                                                                                      //\nMeteor.methods({                                                                                                      // 38\n  'games.init': function () {                                                                                         // 39\n    function gamesInit(roomId) {                                                                                      // 38\n      if (Games.find({ room_id: roomId }).fetch().length === 0) {                                                     // 40\n        //always make sure updates only happen once                                                                   //\n        readyTimer = {};                                                                                              // 41\n        playTimer = {};                                                                                               // 42\n        playStartTimer = {};                                                                                          // 43\n        voteTimer = {};                                                                                               // 44\n        resultsTimer = {};                                                                                            // 45\n        finalTimer = {};                                                                                              // 46\n        var roundletters;                                                                                             // 47\n        var acroPoolLength = acroLettersPool.length;                                                                  // 48\n        var catPoolLength = acroCategories.length;                                                                    // 49\n        var acroPlayArray = [];                                                                                       // 50\n        var acroCatArray = [];                                                                                        // 51\n        for (var i = 0; i < roundsToPlay; i++) {                                                                      // 52\n          var acroToPlay = \"\";                                                                                        // 53\n          for (var j = 0; j < roundAcroLength[i]; j++) {                                                              // 54\n            acroToPlay = acroToPlay + acroLettersPool[Math.floor(Math.random() * acroPoolLength)];                    // 55\n          }                                                                                                           // 56\n          acroPlayArray.push(acroToPlay);                                                                             // 57\n          acroCatArray.push(acroCategories[Math.floor(Math.random() * catPoolLength)]);                               // 58\n        }                                                                                                             // 59\n        Games.insert({                                                                                                // 60\n          room_id: roomId,                                                                                            // 61\n          roundletters: acroPlayArray,                                                                                // 62\n          roundcategories: acroCatArray,                                                                              // 63\n          roundtimes: roundTimes                                                                                      // 64\n        });                                                                                                           // 60\n        Rooms.update({ room_id: roomId }, {                                                                           // 66\n          $set: { round: 1, subround: \"Get ready\" }                                                                   // 67\n        });                                                                                                           // 66\n      }                                                                                                               // 69\n    }                                                                                                                 // 70\n                                                                                                                      //\n    return gamesInit;                                                                                                 // 38\n  }(),                                                                                                                // 38\n  'games.getready': function () {                                                                                     // 72\n    function gamesGetready(roomId) {                                                                                  // 38\n      if (!readyTimer[roomId]) {                                                                                      // 73\n        // one timer only                                                                                             //\n        readyTimer[roomId] = Meteor.setTimeout(function () {                                                          // 74\n          if (Gamedata.find({ room_id: roomId }).fetch().length === 0) {                                              // 75\n            Meteor.call('games.reset', roomId);                                                                       // 76\n          } else {                                                                                                    // 77\n            Rooms.update({ room_id: roomId }, {                                                                       // 78\n              $set: { subround: \"Play\" }                                                                              // 79\n            });                                                                                                       // 78\n          }                                                                                                           // 81\n          delete readyTimer[roomId];                                                                                  // 82\n        }, 3500);                                                                                                     // 83\n      }                                                                                                               // 84\n    }                                                                                                                 // 85\n                                                                                                                      //\n    return gamesGetready;                                                                                             // 38\n  }(),                                                                                                                // 38\n  'games.play': function () {                                                                                         // 87\n    function gamesPlay(roomId, roundtime) {                                                                           // 38\n      if (!playTimer[roomId]) {                                                                                       // 88\n        // one timer only                                                                                             //\n        var numberOfLetters = roundAcroLength[Rooms.findOne({ room_id: roomId }).round - 1];                          // 89\n        Games.update({ room_id: roomId }, {                                                                           // 90\n          $set: { turnLetters: true }                                                                                 // 91\n        });                                                                                                           // 90\n        playTimer[roomId] = Meteor.setTimeout(function () {                                                           // 93\n          if (Gamedata.find({ room_id: roomId }).fetch().length === 0) {                                              // 94\n            Meteor.call('games.reset', roomId);                                                                       // 95\n          } else {                                                                                                    // 96\n            Rooms.update({ room_id: roomId }, {                                                                       // 97\n              $set: { subround: \"Vote\" }                                                                              // 98\n            });                                                                                                       // 97\n          }                                                                                                           // 100\n          delete playTimer[roomId];                                                                                   // 101\n        }, roundtime * 1000 + numberOfLetters * 1000 + 4000);                                                         // 102\n      }                                                                                                               // 103\n      if (!playStartTimer[roomId]) {                                                                                  // 104\n        playStartTimer[roomId] = Meteor.setTimeout(function () {                                                      // 105\n          Games.update({ room_id: roomId }, {                                                                         // 106\n            $set: { playStartAnswering: true,                                                                         // 107\n              timerSeconds: roundtime }                                                                               // 108\n          });                                                                                                         // 106\n          timer(roundtime, roomId, \"playtimerstate\");                                                                 // 110\n        }, numberOfLetters * 1000 + 2000);                                                                            // 111\n      }                                                                                                               // 112\n    }                                                                                                                 // 113\n                                                                                                                      //\n    return gamesPlay;                                                                                                 // 38\n  }(),                                                                                                                // 38\n  'games.vote': function () {                                                                                         // 115\n    function gamesVote(roomId) {                                                                                      // 38\n      delete playStartTimer[roomId];                                                                                  // 116\n      Games.update({ room_id: roomId }, {                                                                             // 117\n        $set: { playStartAnswering: false }                                                                           // 118\n      });                                                                                                             // 117\n      if (!voteTimer[roomId]) {                                                                                       // 120\n        // one timer only                                                                                             //\n        voteTimer[roomId] = Meteor.setTimeout(function () {                                                           // 121\n          if (Gamedata.find({ room_id: roomId }).fetch().length === 0) {                                              // 122\n            Meteor.call('games.reset', roomId);                                                                       // 123\n          } else {                                                                                                    // 124\n            Rooms.update({ room_id: roomId }, {                                                                       // 125\n              $set: { subround: \"Results\" }                                                                           // 126\n            });                                                                                                       // 125\n          }                                                                                                           // 128\n          delete voteTimer[roomId];                                                                                   // 129\n        }, 35000);                                                                                                    // 130\n      }                                                                                                               // 131\n    }                                                                                                                 // 132\n                                                                                                                      //\n    return gamesVote;                                                                                                 // 38\n  }(),                                                                                                                // 38\n  'games.results': function () {                                                                                      // 134\n    function gamesResults(roomId) {                                                                                   // 38\n      if (!resultsTimer[roomId]) {                                                                                    // 135\n        // one timer only                                                                                             //\n        var currentRound = Rooms.findOne({ room_id: roomId }).round;                                                  // 136\n        if (currentRound === roundsToPlay) {                                                                          // 137\n          resultsTimer[roomId] = Meteor.setTimeout(function () {                                                      // 138\n            if (Gamedata.find({ room_id: roomId }).fetch().length < 2) {                                              // 139\n              // end game after results if not enough players                                                         //\n              delete resultsTimer[roomId];                                                                            // 140\n              Meteor.call('games.reset', roomId);                                                                     // 141\n            } else {                                                                                                  // 142\n              Rooms.update({ room_id: roomId }, {                                                                     // 143\n                $set: { subround: \"Final results\" }                                                                   // 144\n              });                                                                                                     // 143\n            }                                                                                                         // 146\n            delete resultsTimer[roomId];                                                                              // 147\n          }, 22000);                                                                                                  // 148\n        } else {                                                                                                      // 149\n          resultsTimer[roomId] = Meteor.setTimeout(function () {                                                      // 150\n            if (Gamedata.find({ room_id: roomId }).fetch().length < 2) {                                              // 151\n              // end game after results if not enough players                                                         //\n              delete resultsTimer[roomId];                                                                            // 152\n              Meteor.call('games.reset', roomId);                                                                     // 153\n            } else {                                                                                                  // 154\n              Rooms.update({ room_id: roomId }, {                                                                     // 155\n                $set: { round: currentRound + 1,                                                                      // 156\n                  subround: \"Get ready\" }                                                                             // 157\n              });                                                                                                     // 155\n            }                                                                                                         // 159\n            delete resultsTimer[roomId];                                                                              // 160\n          }, 22000);                                                                                                  // 161\n        }                                                                                                             // 162\n      }                                                                                                               // 163\n    }                                                                                                                 // 164\n                                                                                                                      //\n    return gamesResults;                                                                                              // 38\n  }(),                                                                                                                // 38\n  'games.finalresults': function () {                                                                                 // 166\n    function gamesFinalresults(roomId) {                                                                              // 38\n      if (!finalTimer[roomId]) {                                                                                      // 167\n        // one timer only                                                                                             //\n        finalTimer[roomId] = Meteor.setTimeout(function () {                                                          // 168\n          if (Gamedata.find({ room_id: roomId }).fetch().length < 2) {                                                // 169\n            // end game after results if not enough players                                                           //\n            delete finalTimer[roomId];                                                                                // 170\n            Meteor.call('games.reset', roomId);                                                                       // 171\n          } else {                                                                                                    // 172\n            // set up for new game                                                                                    //\n            Games.remove({ room_id: roomId });                                                                        // 173\n            Meteor.call('games.init', roomId);                                                                        // 174\n          }                                                                                                           // 175\n          delete finalTimer[roomId];                                                                                  // 176\n        }, 25000);                                                                                                    // 177\n      }                                                                                                               // 178\n      readyTimer = {};                                                                                                // 179\n      playTimer = {};                                                                                                 // 180\n      playStartTimer = {};                                                                                            // 181\n      voteTimer = {};                                                                                                 // 182\n      resultsTimer = {};                                                                                              // 183\n    }                                                                                                                 // 184\n                                                                                                                      //\n    return gamesFinalresults;                                                                                         // 38\n  }(),                                                                                                                // 38\n  'games.reset': function () {                                                                                        // 186\n    function gamesReset(roomId) {                                                                                     // 38\n      Games.remove({ room_id: roomId });                                                                              // 187\n      Gamedata.remove({ room_id: roomId });                                                                           // 188\n      Rooms.update({ room_id: roomId }, {                                                                             // 189\n        $set: { round: 0,                                                                                             // 190\n          subround: \"Waiting for players\" }                                                                           // 191\n      });                                                                                                             // 189\n      readyTimer = {};                                                                                                // 193\n      playTimer = {};                                                                                                 // 194\n      playStartTimer = {};                                                                                            // 195\n      voteTimer = {};                                                                                                 // 196\n      resultsTimer = {};                                                                                              // 197\n    }                                                                                                                 // 198\n                                                                                                                      //\n    return gamesReset;                                                                                                // 38\n  }(),                                                                                                                // 38\n  'games.letterFlipFlagOff': function () {                                                                            // 200\n    function gamesLetterFlipFlagOff(roomId) {                                                                         // 38\n      Games.update({ room_id: roomId }, {                                                                             // 201\n        $set: { turnLetters: false }                                                                                  // 202\n      });                                                                                                             // 201\n    }                                                                                                                 // 204\n                                                                                                                      //\n    return gamesLetterFlipFlagOff;                                                                                    // 38\n  }()                                                                                                                 // 38\n});                                                                                                                   // 38\n                                                                                                                      //\nfunction timer(seconds, roomId, statetoactivate) {                                                                    // 208\n                                                                                                                      //\n  Meteor.setTimeout(function () {                                                                                     // 210\n    var countdownStartTime = new Date();                                                                              // 211\n    if (statetoactivate === \"playtimerstate\") {                                                                       // 212\n      Games.update({ room_id: roomId }, {                                                                             // 213\n        $set: { playStartTime: countdownStartTime,                                                                    // 214\n          showAnswerForm: true }                                                                                      // 215\n      });                                                                                                             // 213\n    } else {                                                                                                          // 217\n      Games.update({ room_id: roomId }, {                                                                             // 218\n        $set: { voteStartTime: countdownStartTime }                                                                   // 219\n      });                                                                                                             // 218\n    }                                                                                                                 // 221\n    var count = seconds;                                                                                              // 222\n    var counter = Meteor.setInterval(tock, 1000);                                                                     // 223\n                                                                                                                      //\n    function tock() {                                                                                                 // 225\n      count = count - 1;                                                                                              // 226\n      if (count < 0) {                                                                                                // 227\n        Meteor.clearInterval(counter);                                                                                // 228\n        Games.update({ room_id: roomId }, {                                                                           // 229\n          $set: { showAnswerForm: false }                                                                             // 230\n        });                                                                                                           // 229\n        return;                                                                                                       // 232\n      }                                                                                                               // 233\n      Games.update({ room_id: roomId }, {                                                                             // 234\n        $set: { timerSeconds: count }                                                                                 // 235\n      });                                                                                                             // 234\n    }                                                                                                                 // 237\n  }, 2000);                                                                                                           // 238\n}                                                                                                                     // 239\n                                                                                                                      //\n// Games.find({ room_id: roomId }).remove({});                                                                        //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"messages.js\":[\"meteor/meteor\",\"meteor/mongo\",\"meteor/check\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/api/messages.js                                                                                            //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({Messages:function(){return Messages}});var Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var Mongo;module.import('meteor/mongo',{\"Mongo\":function(v){Mongo=v}});var check;module.import('meteor/check',{\"check\":function(v){check=v}});\n                                                                                                                      // 2\n                                                                                                                      // 3\n                                                                                                                      //\nvar Messages = new Mongo.Collection('messages');                                                                      // 5\n                                                                                                                      //\nMeteor.methods({                                                                                                      // 7\n  'messages.msgPlayer': function () {                                                                                 // 8\n    function messagesMsgPlayer(roomId, name, verb, roomName, className) {                                             // 7\n      Messages.insert({                                                                                               // 9\n        user_id: \"<PartyHost>\",                                                                                       // 10\n        room_id: roomId,                                                                                              // 11\n        message: name + verb + roomName,                                                                              // 12\n        messageClass: className,                                                                                      // 13\n        createdAt: new Date()                                                                                         // 14\n      });                                                                                                             // 9\n    }                                                                                                                 // 16\n                                                                                                                      //\n    return messagesMsgPlayer;                                                                                         // 7\n  }(),                                                                                                                // 7\n  'messages.postMessage': function () {                                                                               // 18\n    function messagesPostMessage(name, roomId, message) {                                                             // 7\n      Messages.insert({                                                                                               // 19\n        user_id: name,                                                                                                // 20\n        room_id: roomId,                                                                                              // 21\n        message: message,                                                                                             // 22\n        createdAt: new Date() });                                                                                     // 23\n    }                                                                                                                 // 24\n                                                                                                                      //\n    return messagesPostMessage;                                                                                       // 7\n  }(),                                                                                                                // 7\n  'messages.deleteOld': function () {                                                                                 // 26\n    function messagesDeleteOld(messageId) {                                                                           // 7\n      Messages.remove({ _id: messageId });                                                                            // 27\n    }                                                                                                                 // 28\n                                                                                                                      //\n    return messagesDeleteOld;                                                                                         // 7\n  }()                                                                                                                 // 7\n});                                                                                                                   // 7\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"rooms.js\":[\"meteor/meteor\",\"meteor/mongo\",\"meteor/check\",\"../api/gamedata.js\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/api/rooms.js                                                                                               //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({Rooms:function(){return Rooms}});var Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var Mongo;module.import('meteor/mongo',{\"Mongo\":function(v){Mongo=v}});var check;module.import('meteor/check',{\"check\":function(v){check=v}});var Gamedata;module.import('../api/gamedata.js',{\"Gamedata\":function(v){Gamedata=v}});\n                                                                                                                      // 2\n                                                                                                                      // 3\n                                                                                                                      //\nvar Rooms = new Mongo.Collection('rooms');                                                                            // 5\n                                                                                                                      // 6\n                                                                                                                      //\nMeteor.methods({                                                                                                      // 8\n  'rooms.addPlayer': function () {                                                                                    // 9\n    function roomsAddPlayer(roomId, playerAdding) {                                                                   // 8\n      if (!Gamedata.findOne({ room_id: roomId, user_id: playerAdding })) {                                            // 10\n        Gamedata.insert({                                                                                             // 11\n          room_id: roomId,                                                                                            // 12\n          user_id: playerAdding,                                                                                      // 13\n          score: 0                                                                                                    // 14\n        });                                                                                                           // 11\n      }                                                                                                               // 16\n    }                                                                                                                 // 17\n                                                                                                                      //\n    return roomsAddPlayer;                                                                                            // 8\n  }(),                                                                                                                // 8\n  'rooms.removePlayer': function () {                                                                                 // 19\n    function roomsRemovePlayer(roomId, playerRemoving) {                                                              // 8\n      Gamedata.remove({ room_id: roomId, user_id: playerRemoving });                                                  // 20\n    }                                                                                                                 // 21\n                                                                                                                      //\n    return roomsRemovePlayer;                                                                                         // 8\n  }()                                                                                                                 // 8\n});                                                                                                                   // 8\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"startup\":{\"accounts-config.js\":[\"meteor/accounts-base\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/startup/accounts-config.js                                                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar Accounts;module.import('meteor/accounts-base',{\"Accounts\":function(v){Accounts=v}});                              // 1\n                                                                                                                      //\nAccounts.ui.config({                                                                                                  // 3\n    passwordSignupFields: 'USERNAME_AND_EMAIL'                                                                        // 4\n});                                                                                                                   // 3\n                                                                                                                      //\nAccounts.onLogin(function (user) {                                                                                    // 7\n    $(\".mainScreen\").show();                                                                                          // 8\n    //App.showPrivate();                                                                                              //\n});                                                                                                                   // 10\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"ui\":{\"AccountsUIWrapper.jsx\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",\"react\",\"react-dom\",\"meteor/templating\",\"meteor/blaze\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/AccountsUIWrapper.jsx                                                                                   //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{\"default\":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{\"default\":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{\"default\":function(v){_inherits=v}});var React,Component;module.import('react',{\"default\":function(v){React=v},\"Component\":function(v){Component=v}});var ReactDOM;module.import('react-dom',{\"default\":function(v){ReactDOM=v}});var Template;module.import('meteor/templating',{\"Template\":function(v){Template=v}});var Blaze;module.import('meteor/blaze',{\"Blaze\":function(v){Blaze=v}});\n                                                                                                                      //\n                                                                                                                      //\n                                                                                                                      // 1\n                                                                                                                      // 2\n                                                                                                                      // 3\n                                                                                                                      // 4\n                                                                                                                      //\nvar AccountsUIWrapper = function (_Component) {                                                                       //\n  _inherits(AccountsUIWrapper, _Component);                                                                           //\n                                                                                                                      //\n  function AccountsUIWrapper() {                                                                                      //\n    _classCallCheck(this, AccountsUIWrapper);                                                                         //\n                                                                                                                      //\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));                                       //\n  }                                                                                                                   //\n                                                                                                                      //\n  AccountsUIWrapper.prototype.componentDidMount = function () {                                                       //\n    function componentDidMount() {                                                                                    //\n      // Use Meteor Blaze to render login buttons                                                                     //\n      this.view = Blaze.render(Template.loginButtons, ReactDOM.findDOMNode(this.refs.container));                     // 9\n    }                                                                                                                 // 11\n                                                                                                                      //\n    return componentDidMount;                                                                                         //\n  }();                                                                                                                //\n                                                                                                                      //\n  AccountsUIWrapper.prototype.componentWillUnmount = function () {                                                    //\n    function componentWillUnmount() {                                                                                 //\n      // Clean up Blaze view                                                                                          //\n      Blaze.remove(this.view);                                                                                        // 14\n    }                                                                                                                 // 15\n                                                                                                                      //\n    return componentWillUnmount;                                                                                      //\n  }();                                                                                                                //\n                                                                                                                      //\n  AccountsUIWrapper.prototype.render = function () {                                                                  //\n    function render() {                                                                                               //\n      // Just render a placeholder container that will be filled in                                                   //\n      return React.createElement('span', { ref: 'container' });                                                       // 18\n    }                                                                                                                 // 19\n                                                                                                                      //\n    return render;                                                                                                    //\n  }();                                                                                                                //\n                                                                                                                      //\n  return AccountsUIWrapper;                                                                                           //\n}(Component);                                                                                                         //\n                                                                                                                      //\nmodule.export(\"default\",exports.default=(AccountsUIWrapper));                                                         //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"App.jsx\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",\"react\",\"./AccountsUIWrapper.jsx\",\"meteor/react-meteor-data\",\"meteor/reactive-var\",\"../api/rooms.js\",\"../api/chats.js\",\"../api/messages.js\",\"../api/games.js\",\"../api/gamedata.js\",\"./Room.jsx\",\"./Chat.jsx\",\"./Game.jsx\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/App.jsx                                                                                                 //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nmodule.export({gameRoomIdSelected:function(){return gameRoomIdSelected}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{\"default\":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{\"default\":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{\"default\":function(v){_inherits=v}});var React,Component;module.import('react',{\"default\":function(v){React=v},\"Component\":function(v){Component=v}});var AccountsUIWrapper;module.import('./AccountsUIWrapper.jsx',{\"default\":function(v){AccountsUIWrapper=v}});var createContainer;module.import('meteor/react-meteor-data',{\"createContainer\":function(v){createContainer=v}});var ReactiveVar;module.import('meteor/reactive-var',{\"ReactiveVar\":function(v){ReactiveVar=v}});var Rooms;module.import('../api/rooms.js',{\"Rooms\":function(v){Rooms=v}});var Chats;module.import('../api/chats.js',{\"Chats\":function(v){Chats=v}});var Messages;module.import('../api/messages.js',{\"Messages\":function(v){Messages=v}});var Games;module.import('../api/games.js',{\"Games\":function(v){Games=v}});var Gamedata;module.import('../api/gamedata.js',{\"Gamedata\":function(v){Gamedata=v}});var Room;module.import('./Room.jsx',{\"default\":function(v){Room=v}});var Chat;module.import('./Chat.jsx',{\"default\":function(v){Chat=v}});var Game;module.import('./Game.jsx',{\"default\":function(v){Game=v}});\n                                                                                                                      //\n                                                                                                                      //\n                                                                                                                      // 1\n                                                                                                                      // 2\n                                                                                                                      // 3\n                                                                                                                      // 4\nvar gameRoomIdSelected = new ReactiveVar(\"\");                                                                         // 5\n                                                                                                                      //\n                                                                                                                      // 7\n                                                                                                                      // 8\n                                                                                                                      // 9\n                                                                                                                      // 10\n                                                                                                                      // 11\n                                                                                                                      //\n                                                                                                                      // 13\n                                                                                                                      // 14\n                                                                                                                      // 15\n                                                                                                                      //\n// App component - represents the whole app                                                                           //\n                                                                                                                      //\nvar App = function (_Component) {                                                                                     //\n  _inherits(App, _Component);                                                                                         //\n                                                                                                                      //\n  function App() {                                                                                                    //\n    _classCallCheck(this, App);                                                                                       //\n                                                                                                                      //\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));                                       //\n  }                                                                                                                   //\n                                                                                                                      //\n  App.prototype.userRouting = function () {                                                                           //\n    function userRouting() {                                                                                          //\n      if (this.props.currentUser) {                                                                                   // 23\n        $(\".frontSignin\").hide();                                                                                     // 24\n      } else {                                                                                                        // 25\n        $(\".frontSignin\").show();                                                                                     // 26\n        $(\".mainScreen, .stats, .chat, .settings\").hide();                                                            // 27\n      }                                                                                                               // 28\n      $(\".acroparty\").show();                                                                                         // 29\n    }                                                                                                                 // 30\n                                                                                                                      //\n    return userRouting;                                                                                               //\n  }();                                                                                                                //\n                                                                                                                      //\n  // rooms                                                                                                            //\n                                                                                                                      //\n                                                                                                                      //\n  App.prototype.gotoRoom = function () {                                                                              //\n    function gotoRoom(e) {                                                                                            //\n      var theroom = $(e.target).attr(\"data-room\");                                                                    // 34\n      gameRoomIdSelected.set(theroom);                                                                                // 35\n      var roomToJoin = Rooms.findOne({ room_id: theroom });                                                           // 36\n      Meteor.call('rooms.addPlayer', gameRoomIdSelected.get(), this.props.currentUser.username);                      // 37\n      $(\".mainScreen, .popup\").hide();                                                                                // 38\n      $(\".chat\").attr(\"id\", theroom).show();                                                                          // 39\n      var enteringRoomVerb = [\" appears in the \", \" saunters into the \", \" walks into the \", \" struts into the \", \" sprints into the \", \" apparates into the \", \" materializes in the \", \" mysteriously arises inside the \", \" seems to have entered our \", \" ridiculously enters the \", \" crashed through the window into the \", \" is suddenly in the \", \" scoots on in to the \", \" politely enters the \"];\n      var randomVerb = enteringRoomVerb[Math.floor(Math.random() * enteringRoomVerb.length)];                         // 45\n      Meteor.call('messages.msgPlayer', gameRoomIdSelected.get(), this.props.currentUser.username, randomVerb, Rooms.findOne({ room_id: gameRoomIdSelected.get() }).displayName + \"...\");\n    }                                                                                                                 // 48\n                                                                                                                      //\n    return gotoRoom;                                                                                                  //\n  }();                                                                                                                //\n                                                                                                                      //\n  App.prototype.renderRooms = function () {                                                                           //\n    function renderRooms() {                                                                                          //\n      var _this2 = this;                                                                                              // 49\n                                                                                                                      //\n      return this.props.rooms.map(function (room) {                                                                   // 50\n        return React.createElement(Room, { key: room._id, room: room, updateRoom: _this2.gotoRoom.bind(_this2) });    // 50\n      });                                                                                                             // 50\n    }                                                                                                                 // 53\n                                                                                                                      //\n    return renderRooms;                                                                                               //\n  }();                                                                                                                //\n                                                                                                                      //\n  App.prototype.renderRoomId = function () {                                                                          //\n    function renderRoomId() {                                                                                         //\n      return gameRoomIdSelected.get();                                                                                // 55\n    }                                                                                                                 // 56\n                                                                                                                      //\n    return renderRoomId;                                                                                              //\n  }();                                                                                                                //\n                                                                                                                      //\n  App.prototype.roomName = function () {                                                                              //\n    function roomName() {                                                                                             //\n      if (this.props.selectedRoom) {                                                                                  // 58\n        var theRoomName = this.props.selectedRoom.displayName;                                                        // 59\n      } else {                                                                                                        // 60\n        var theRoomName = \"\";                                                                                         // 61\n      }                                                                                                               // 62\n      return theRoomName;                                                                                             // 63\n    }                                                                                                                 // 64\n                                                                                                                      //\n    return roomName;                                                                                                  //\n  }();                                                                                                                //\n                                                                                                                      //\n  App.prototype.exitRoom = function () {                                                                              //\n    function exitRoom(e) {                                                                                            //\n      var exitingRoomVerb = [\" leaves the room\", \" runs out of the room\", \" walks out of the room\", \" vanishes\", \" disappears\", \" backs out of the room slowly\", \" suddenly dematerializes\", \" scurries out of the room\", \" rushes out of here\", \" bids everyone a fond farewell\", \" leaps out the window\", \" takes off\", \" silently slips out of the room\", \" graciously exits the scene\", \" politely goes elsewhere\", \" backflips out of here\"];\n      var randomExitVerb = exitingRoomVerb[Math.floor(Math.random() * exitingRoomVerb.length)];                       // 73\n      Meteor.call('messages.msgPlayer', gameRoomIdSelected.get(), this.props.currentUser.username, randomExitVerb, \"...\", \"leavingMessage\");\n      Meteor.call('rooms.removePlayer', this.props.selectedRoom.room_id, this.props.currentUser.username);            // 76\n      $(\".popup\").hide();                                                                                             // 77\n      $(\"#\" + gameRoomIdSelected.get()).hide();                                                                       // 78\n      gameRoomIdSelected.set(\"\");                                                                                     // 79\n      $(\".chat\").removeAttr(\"id\");                                                                                    // 80\n      $(\".mainScreen\").show();                                                                                        // 81\n    }                                                                                                                 // 82\n                                                                                                                      //\n    return exitRoom;                                                                                                  //\n  }();                                                                                                                //\n                                                                                                                      //\n  // stats                                                                                                            //\n                                                                                                                      //\n                                                                                                                      //\n  App.prototype.closePopup = function () {                                                                            //\n    function closePopup(e) {                                                                                          //\n      $(\".popup\").hide();                                                                                             // 86\n    }                                                                                                                 // 87\n                                                                                                                      //\n    return closePopup;                                                                                                //\n  }();                                                                                                                //\n                                                                                                                      //\n  App.prototype.openStats = function () {                                                                             //\n    function openStats(e) {                                                                                           //\n      $(\".settings\").hide();                                                                                          // 90\n      $(\".stats\").show();                                                                                             // 91\n    }                                                                                                                 // 92\n                                                                                                                      //\n    return openStats;                                                                                                 //\n  }();                                                                                                                //\n                                                                                                                      //\n  App.prototype.renderUsername = function () {                                                                        //\n    function renderUsername() {                                                                                       //\n      if (this.props.currentUser) {                                                                                   // 95\n        if (this.props.currentUser.username) {                                                                        // 96\n          return React.createElement(                                                                                 // 97\n            'span',                                                                                                   // 97\n            null,                                                                                                     // 97\n            this.props.currentUser.username                                                                           // 97\n          );                                                                                                          // 97\n        } else {                                                                                                      // 98\n          return \"\";                                                                                                  // 99\n        }                                                                                                             // 100\n      } else {                                                                                                        // 101\n        return \"\";                                                                                                    // 102\n      }                                                                                                               // 103\n    }                                                                                                                 // 104\n                                                                                                                      //\n    return renderUsername;                                                                                            //\n  }();                                                                                                                //\n                                                                                                                      //\n  App.prototype.renderLifePoints = function () {                                                                      //\n    function renderLifePoints() {                                                                                     //\n      // this.props.currentUser ? <span>{ this.props.currentUser.stats.lifetimePoints }</span> : '';                  //\n      if (this.props.currentUser) {                                                                                   // 108\n        if (this.props.currentUser.stats) {                                                                           // 109\n          return React.createElement(                                                                                 // 110\n            'span',                                                                                                   // 110\n            null,                                                                                                     // 110\n            this.props.currentUser.stats.lifetimePoints                                                               // 110\n          );                                                                                                          // 110\n        } else {                                                                                                      // 111\n          return \"\";                                                                                                  // 112\n        }                                                                                                             // 113\n      } else {                                                                                                        // 114\n        return \"\";                                                                                                    // 115\n      }                                                                                                               // 116\n    }                                                                                                                 // 117\n                                                                                                                      //\n    return renderLifePoints;                                                                                          //\n  }();                                                                                                                //\n                                                                                                                      //\n  //settings                                                                                                          //\n                                                                                                                      //\n                                                                                                                      //\n  App.prototype.openSettings = function () {                                                                          //\n    function openSettings(e) {                                                                                        //\n      $(\".stats\").hide();                                                                                             // 121\n      $(\".settings\").show();                                                                                          // 122\n    }                                                                                                                 // 123\n                                                                                                                      //\n    return openSettings;                                                                                              //\n  }();                                                                                                                //\n                                                                                                                      //\n  App.prototype.render = function () {                                                                                //\n    function render() {                                                                                               //\n      return React.createElement(                                                                                     // 126\n        'div',                                                                                                        // 128\n        { className: 'acroparty' },                                                                                   // 128\n        this.userRouting(),                                                                                           // 129\n        React.createElement(                                                                                          // 130\n          'section',                                                                                                  // 130\n          { className: 'frontSignin', style: { \"display\": \"none\" } },                                                 // 130\n          React.createElement(                                                                                        // 131\n            'h1',                                                                                                     // 131\n            null,                                                                                                     // 131\n            'Welcome to AcroParty!'                                                                                   // 131\n          ),                                                                                                          // 131\n          React.createElement(AccountsUIWrapper, null)                                                                // 132\n        ),                                                                                                            // 130\n        React.createElement(                                                                                          // 135\n          'section',                                                                                                  // 135\n          { className: 'mainScreen' },                                                                                // 135\n          React.createElement(                                                                                        // 136\n            'header',                                                                                                 // 136\n            null,                                                                                                     // 136\n            React.createElement(                                                                                      // 137\n              'h1',                                                                                                   // 137\n              null,                                                                                                   // 137\n              'AcroParty'                                                                                             // 137\n            )                                                                                                         // 137\n          ),                                                                                                          // 136\n          React.createElement(                                                                                        // 139\n            'div',                                                                                                    // 139\n            { className: 'welcomeText' },                                                                             // 139\n            'Welcome, ',                                                                                              // 139\n            this.renderUsername(),                                                                                    // 140\n            '! Please select a room to start playing...'                                                              // 139\n          ),                                                                                                          // 139\n          React.createElement(                                                                                        // 142\n            'div',                                                                                                    // 142\n            { className: 'roomList' },                                                                                // 142\n            React.createElement(                                                                                      // 143\n              'div',                                                                                                  // 143\n              { className: 'roomListTitle' },                                                                         // 143\n              'Rooms'                                                                                                 // 143\n            ),                                                                                                        // 143\n            this.renderRooms()                                                                                        // 144\n          ),                                                                                                          // 142\n          React.createElement(                                                                                        // 146\n            'div',                                                                                                    // 146\n            { className: 'mainButtons' },                                                                             // 146\n            React.createElement(                                                                                      // 147\n              'button',                                                                                               // 147\n              { className: 'mainButton', onClick: this.openStats.bind(this) },                                        // 147\n              'Stats'                                                                                                 // 147\n            ),                                                                                                        // 147\n            React.createElement(                                                                                      // 148\n              'button',                                                                                               // 148\n              { className: 'mainButton', onClick: this.openSettings.bind(this) },                                     // 148\n              'Settings'                                                                                              // 148\n            )                                                                                                         // 148\n          )                                                                                                           // 146\n        ),                                                                                                            // 135\n        React.createElement(                                                                                          // 152\n          'section',                                                                                                  // 152\n          { className: 'chat' },                                                                                      // 152\n          React.createElement(                                                                                        // 153\n            'section',                                                                                                // 153\n            { className: 'gamePlay' },                                                                                // 153\n            React.createElement(Game, { roomId: this.renderRoomId(), roomName: this.roomName() })                     // 154\n          ),                                                                                                          // 153\n          React.createElement(Chat, { clickStats: this.openStats.bind(this), clickSettings: this.openSettings.bind(this),\n            roomName: this.roomName(), exitRoom: this.exitRoom.bind(this),                                            // 158\n            roomId: this.renderRoomId() })                                                                            // 159\n        ),                                                                                                            // 152\n        React.createElement(                                                                                          // 162\n          'section',                                                                                                  // 162\n          { className: 'stats popup' },                                                                               // 162\n          React.createElement(                                                                                        // 163\n            'div',                                                                                                    // 163\n            null,                                                                                                     // 163\n            'Life wins is ',                                                                                          // 163\n            this.renderLifePoints()                                                                                   // 163\n          ),                                                                                                          // 163\n          React.createElement(                                                                                        // 164\n            'button',                                                                                                 // 164\n            { className: 'popupButton', onClick: this.closePopup.bind(this) },                                        // 164\n            'Close'                                                                                                   // 164\n          )                                                                                                           // 164\n        ),                                                                                                            // 162\n        React.createElement(                                                                                          // 167\n          'section',                                                                                                  // 167\n          { className: 'settings popup' },                                                                            // 167\n          React.createElement(AccountsUIWrapper, null),                                                               // 168\n          React.createElement(                                                                                        // 169\n            'button',                                                                                                 // 169\n            { className: 'popupButton', onClick: this.closePopup.bind(this) },                                        // 169\n            'Close'                                                                                                   // 169\n          )                                                                                                           // 169\n        )                                                                                                             // 167\n      );                                                                                                              // 128\n    }                                                                                                                 // 175\n                                                                                                                      //\n    return render;                                                                                                    //\n  }();                                                                                                                //\n                                                                                                                      //\n  return App;                                                                                                         //\n}(Component);                                                                                                         //\n                                                                                                                      //\nmodule.export(\"default\",exports.default=(App));                                                                       //\n                                                                                                                      //\n                                                                                                                      //\nmodule.export(\"default\",exports.default=(createContainer(function () {                                                // 178\n  //var userRoom = Meteor.user().currentRoom;                                                                         //\n  return {                                                                                                            // 180\n    currentUser: Meteor.user(),                                                                                       // 181\n    rooms: Rooms.find({}).fetch(),                                                                                    // 182\n    selectedRoom: Rooms.findOne({ room_id: gameRoomIdSelected.get() }),                                               // 183\n    gamedata: Gamedata.find({}).fetch()                                                                               // 184\n  };                                                                                                                  // 180\n}, App)));                                                                                                            // 186\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"Chat.jsx\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",\"react\",\"react-dom\",\"meteor/react-meteor-data\",\"./App.jsx\",\"../api/messages.js\",\"../api/gamedata.js\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/Chat.jsx                                                                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{\"default\":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{\"default\":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{\"default\":function(v){_inherits=v}});var React,Component,PropTypes;module.import('react',{\"default\":function(v){React=v},\"Component\":function(v){Component=v},\"PropTypes\":function(v){PropTypes=v}});var ReactDOM;module.import('react-dom',{\"default\":function(v){ReactDOM=v}});var createContainer;module.import('meteor/react-meteor-data',{\"createContainer\":function(v){createContainer=v}});var gameRoomIdSelected;module.import('./App.jsx',{\"gameRoomIdSelected\":function(v){gameRoomIdSelected=v}});var Messages;module.import('../api/messages.js',{\"Messages\":function(v){Messages=v}});var Gamedata;module.import('../api/gamedata.js',{\"Gamedata\":function(v){Gamedata=v}});\n                                                                                                                      //\n                                                                                                                      //\n                                                                                                                      // 1\n                                                                                                                      // 2\n                                                                                                                      // 3\n                                                                                                                      // 4\n                                                                                                                      //\n                                                                                                                      // 6\n                                                                                                                      // 7\n                                                                                                                      //\nvar ListMessages = function (_Component) {                                                                            //\n  _inherits(ListMessages, _Component);                                                                                //\n                                                                                                                      //\n  function ListMessages() {                                                                                           //\n    _classCallCheck(this, ListMessages);                                                                              //\n                                                                                                                      //\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));                                       //\n  }                                                                                                                   //\n                                                                                                                      //\n  ListMessages.prototype.componentDidMount = function () {                                                            //\n    function componentDidMount() {                                                                                    //\n      var $this = $(ReactDOM.findDOMNode(this));                                                                      // 11\n      $(\".messagesRead\")[0].scrollTop = $(\".messagesRead\")[0].scrollHeight;                                           // 12\n    }                                                                                                                 // 13\n                                                                                                                      //\n    return componentDidMount;                                                                                         //\n  }();                                                                                                                //\n                                                                                                                      //\n  ListMessages.prototype.render = function () {                                                                       //\n    function render() {                                                                                               //\n      return React.createElement(                                                                                     // 15\n        'li',                                                                                                         // 15\n        { className: (this.props.author === \"<PartyHost>\" ? \"hostMessage\" : \"\") + (this.props.exitClass ? \" \" + this.props.exitClass : \"\") },\n        React.createElement(                                                                                          // 17\n          'span',                                                                                                     // 17\n          { className: 'authorMessage' },                                                                             // 17\n          React.createElement(                                                                                        // 17\n            'span',                                                                                                   // 17\n            { className: 'messageAuthor' },                                                                           // 17\n            this.props.author,                                                                                        // 17\n            ':'                                                                                                       // 17\n          ),                                                                                                          // 17\n          ' ',                                                                                                        // 17\n          this.props.message                                                                                          // 17\n        ),                                                                                                            // 17\n        React.createElement('span', { className: 'messageTime', 'data-livestamp': this.props.timestamp })             // 18\n      );                                                                                                              // 15\n    }                                                                                                                 // 20\n                                                                                                                      //\n    return render;                                                                                                    //\n  }();                                                                                                                //\n                                                                                                                      //\n  return ListMessages;                                                                                                //\n}(Component);                                                                                                         //\n                                                                                                                      //\nmodule.export(\"default\",exports.default=(ListMessages));                                                              //\n                                                                                                                      //\nvar ListItemPlayer = function (_Component2) {                                                                         //\n  _inherits(ListItemPlayer, _Component2);                                                                             //\n                                                                                                                      //\n  function ListItemPlayer() {                                                                                         //\n    _classCallCheck(this, ListItemPlayer);                                                                            //\n                                                                                                                      //\n    return _possibleConstructorReturn(this, _Component2.apply(this, arguments));                                      //\n  }                                                                                                                   //\n                                                                                                                      //\n  ListItemPlayer.prototype.render = function () {                                                                     //\n    function render() {                                                                                               //\n      return React.createElement(                                                                                     // 25\n        'li',                                                                                                         // 25\n        { className: 'playerInList', 'data-playerInList': this.props.name },                                          // 25\n        this.props.name,                                                                                              // 25\n        React.createElement(                                                                                          // 26\n          'span',                                                                                                     // 26\n          { className: 'scoresRight' },                                                                               // 26\n          this.props.score                                                                                            // 26\n        )                                                                                                             // 26\n      );                                                                                                              // 25\n    }                                                                                                                 // 27\n                                                                                                                      //\n    return render;                                                                                                    //\n  }();                                                                                                                //\n                                                                                                                      //\n  return ListItemPlayer;                                                                                              //\n}(Component);                                                                                                         //\n                                                                                                                      //\nmodule.export(\"default\",exports.default=(ListItemPlayer));                                                            //\n                                                                                                                      //\nvar Chat = function (_Component3) {                                                                                   //\n  _inherits(Chat, _Component3);                                                                                       //\n                                                                                                                      //\n  function Chat() {                                                                                                   //\n    _classCallCheck(this, Chat);                                                                                      //\n                                                                                                                      //\n    return _possibleConstructorReturn(this, _Component3.apply(this, arguments));                                      //\n  }                                                                                                                   //\n                                                                                                                      //\n  Chat.prototype.listPlayers = function () {                                                                          //\n    function listPlayers() {                                                                                          //\n      var playerListArray = [];                                                                                       // 32\n      this.props.roomPlayers.forEach(function () {                                                                    // 33\n        playerListArray.push(this.user_id);                                                                           // 34\n      });                                                                                                             // 35\n      var playerListItems = playerListArray.map(function (name) {                                                     // 36\n        return React.createElement(                                                                                   // 37\n          'li',                                                                                                       // 37\n          null,                                                                                                       // 37\n          'name'                                                                                                      // 37\n        );                                                                                                            // 37\n      });                                                                                                             // 38\n      return playerListItems;                                                                                         // 39\n    }                                                                                                                 // 40\n                                                                                                                      //\n    return listPlayers;                                                                                               //\n  }();                                                                                                                //\n                                                                                                                      //\n  Chat.prototype.sendMessage = function () {                                                                          //\n    function sendMessage(event) {                                                                                     //\n      event.preventDefault();                                                                                         // 43\n      var message = ReactDOM.findDOMNode(this.refs.messageInput).value.trim();                                        // 44\n      if (message === \"\") {                                                                                           // 45\n        return;                                                                                                       // 45\n      } // blank messages don't send                                                                                  // 45\n      Meteor.call('messages.postMessage', this.props.currentUser.username, gameRoomIdSelected.get(), message);        // 46\n      ReactDOM.findDOMNode(this.refs.messageInput).value = '';                                                        // 47\n      // delete old messages in room                                                                                  //\n      if (this.props.roomMessages.length > 150) {                                                                     // 49\n        // 200 chat messages per room                                                                                 //\n        var indexToTrim = this.props.roomMessages.length - 150;                                                       // 50\n        var oldestMessageTime = this.props.roomMessages[indexToTrim].createdAt;                                       // 51\n        var messagesToDelete = Messages.find({                                                                        // 52\n          room_id: gameRoomIdSelected.get(),                                                                          // 53\n          createdAt: { $lt: oldestMessageTime }                                                                       // 54\n        }).fetch();                                                                                                   // 52\n        messagesToDelete.forEach(function (message) {                                                                 // 56\n          Meteor.call('messages.deleteOld', message._id);                                                             // 57\n        });                                                                                                           // 58\n      }                                                                                                               // 59\n    }                                                                                                                 // 60\n                                                                                                                      //\n    return sendMessage;                                                                                               //\n  }();                                                                                                                //\n                                                                                                                      //\n  Chat.prototype.renderMessages = function () {                                                                       //\n    function renderMessages() {                                                                                       //\n      if (this.props.roomMessages) {                                                                                  // 63\n        return this.props.roomMessages.map(function (message) {                                                       // 64\n          return React.createElement(ListMessages, { key: message._id, author: message.user_id, message: message.message,\n            timestamp: message.createdAt, exitClass: message.messageClass });                                         // 66\n        });                                                                                                           // 64\n      } else {                                                                                                        // 68\n        return \"\";                                                                                                    // 69\n      }                                                                                                               // 70\n    }                                                                                                                 // 71\n                                                                                                                      //\n    return renderMessages;                                                                                            //\n  }();                                                                                                                //\n                                                                                                                      //\n  Chat.prototype.render = function () {                                                                               //\n    function render() {                                                                                               //\n      return React.createElement(                                                                                     // 74\n        'div',                                                                                                        // 75\n        { className: 'chatArea' },                                                                                    // 75\n        React.createElement(                                                                                          // 76\n          'div',                                                                                                      // 76\n          { className: 'listAndInfo' },                                                                               // 76\n          React.createElement(                                                                                        // 77\n            'div',                                                                                                    // 77\n            { className: 'playerList' },                                                                              // 77\n            React.createElement(                                                                                      // 78\n              'div',                                                                                                  // 78\n              { className: 'bigRoomName' },                                                                           // 78\n              React.createElement(                                                                                    // 78\n                'span',                                                                                               // 78\n                null,                                                                                                 // 78\n                this.props.roomName                                                                                   // 78\n              )                                                                                                       // 78\n            ),                                                                                                        // 78\n            React.createElement(                                                                                      // 79\n              'ul',                                                                                                   // 79\n              { className: 'playerNameList' },                                                                        // 79\n              React.createElement(                                                                                    // 79\n                'u',                                                                                                  // 79\n                null,                                                                                                 // 79\n                'Players'                                                                                             // 79\n              ),                                                                                                      // 79\n              React.createElement(                                                                                    // 79\n                'span',                                                                                               // 79\n                { className: 'scoresRight' },                                                                         // 79\n                React.createElement(                                                                                  // 79\n                  'u',                                                                                                // 79\n                  null,                                                                                               // 79\n                  'Scores'                                                                                            // 79\n                )                                                                                                     // 79\n              ),                                                                                                      // 79\n              this.props.roomPlayers.map(function (player) {                                                          // 80\n                return React.createElement(ListItemPlayer, { key: player.user_id, name: player.user_id, score: player.score });\n              })                                                                                                      // 80\n            )                                                                                                         // 79\n          ),                                                                                                          // 77\n          React.createElement(                                                                                        // 85\n            'div',                                                                                                    // 85\n            { className: 'chatMenuButtons' },                                                                         // 85\n            React.createElement(                                                                                      // 86\n              'button',                                                                                               // 86\n              { className: 'mainButton', onClick: this.props.clickStats },                                            // 86\n              'Stats'                                                                                                 // 86\n            ),                                                                                                        // 86\n            React.createElement(                                                                                      // 87\n              'button',                                                                                               // 87\n              { className: 'mainButton', onClick: this.props.clickSettings },                                         // 87\n              'Settings'                                                                                              // 87\n            ),                                                                                                        // 87\n            React.createElement(                                                                                      // 88\n              'button',                                                                                               // 88\n              { className: 'mainButton', onClick: this.props.exitRoom },                                              // 88\n              'Exit Room'                                                                                             // 88\n            )                                                                                                         // 88\n          )                                                                                                           // 85\n        ),                                                                                                            // 76\n        React.createElement(                                                                                          // 91\n          'div',                                                                                                      // 91\n          { className: 'messagesArea' },                                                                              // 91\n          React.createElement(                                                                                        // 92\n            'div',                                                                                                    // 92\n            { className: 'messagesRead' },                                                                            // 92\n            this.renderMessages()                                                                                     // 93\n          ),                                                                                                          // 92\n          React.createElement(                                                                                        // 95\n            'div',                                                                                                    // 95\n            { className: 'messagesSendArea' },                                                                        // 95\n            React.createElement(                                                                                      // 96\n              'button',                                                                                               // 96\n              { className: 'mobile openPlayerList' },                                                                 // 96\n              'Plyrs'                                                                                                 // 96\n            ),                                                                                                        // 96\n            React.createElement(                                                                                      // 97\n              'form',                                                                                                 // 97\n              { onSubmit: this.sendMessage.bind(this) },                                                              // 97\n              React.createElement('input', { type: 'text', ref: 'messageInput', className: 'messageEnter', placeholder: 'Enter chat here...',\n                maxLength: '100' }),                                                                                  // 99\n              React.createElement(                                                                                    // 100\n                'button',                                                                                             // 100\n                { className: 'messageSend', onClick: this.sendMessage.bind(this) },                                   // 100\n                'Send'                                                                                                // 100\n              )                                                                                                       // 100\n            ),                                                                                                        // 97\n            React.createElement(                                                                                      // 102\n              'button',                                                                                               // 102\n              { className: 'mobile openChatMenu' },                                                                   // 102\n              'Menu'                                                                                                  // 102\n            )                                                                                                         // 102\n          )                                                                                                           // 95\n        )                                                                                                             // 91\n      );                                                                                                              // 75\n    }                                                                                                                 // 107\n                                                                                                                      //\n    return render;                                                                                                    //\n  }();                                                                                                                //\n                                                                                                                      //\n  return Chat;                                                                                                        //\n}(Component);                                                                                                         //\n                                                                                                                      //\n// Chat.propTypes = {                                                                                                 //\n// This component gets the room to display through a React prop.                                                      //\n// We can use propTypes to indicate it is required                                                                    //\n//   chat: PropTypes.object.isRequired,                                                                               //\n// };                                                                                                                 //\n                                                                                                                      //\nmodule.export(\"default\",exports.default=(Chat));                                                                      //\nmodule.export(\"default\",exports.default=(createContainer(function () {                                                // 116\n  return {                                                                                                            // 117\n    currentUser: Meteor.user(),                                                                                       // 118\n    roomMessages: Messages.find({ room_id: gameRoomIdSelected.get() }, { sort: { createdAt: 1 } }).fetch(),           // 119\n    roomPlayers: Gamedata.find({ room_id: gameRoomIdSelected.get() }, { sort: { score: -1 } }).fetch()                // 120\n  };                                                                                                                  // 117\n}, Chat)));                                                                                                           // 122\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"Game.jsx\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",\"react\",\"react-dom\",\"meteor/react-meteor-data\",\"./App.jsx\",\"/client/utilities.js\",\"../api/rooms.js\",\"../api/games.js\",\"../api/gamedata.js\",\"./Room.jsx\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/Game.jsx                                                                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{\"default\":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{\"default\":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{\"default\":function(v){_inherits=v}});var React,Component,PropTypes;module.import('react',{\"default\":function(v){React=v},\"Component\":function(v){Component=v},\"PropTypes\":function(v){PropTypes=v}});var ReactDOM;module.import('react-dom',{\"default\":function(v){ReactDOM=v}});var createContainer;module.import('meteor/react-meteor-data',{\"createContainer\":function(v){createContainer=v}});var gameRoomIdSelected;module.import('./App.jsx',{\"gameRoomIdSelected\":function(v){gameRoomIdSelected=v}});var validateAnswer;module.import('/client/utilities.js',{\"validateAnswer\":function(v){validateAnswer=v}});var Rooms;module.import('../api/rooms.js',{\"Rooms\":function(v){Rooms=v}});var Games;module.import('../api/games.js',{\"Games\":function(v){Games=v}});var Gamedata;module.import('../api/gamedata.js',{\"Gamedata\":function(v){Gamedata=v}});var Room;module.import('./Room.jsx',{\"default\":function(v){Room=v}});\n                                                                                                                      //\n                                                                                                                      //\n                                                                                                                      // 1\n                                                                                                                      // 2\n                                                                                                                      // 3\n                                                                                                                      // 4\n                                                                                                                      // 5\n                                                                                                                      //\n                                                                                                                      // 7\n                                                                                                                      // 8\n                                                                                                                      // 9\n                                                                                                                      // 10\n                                                                                                                      //\nvar Game = function (_Component) {                                                                                    //\n  _inherits(Game, _Component);                                                                                        //\n                                                                                                                      //\n  function Game() {                                                                                                   //\n    _classCallCheck(this, Game);                                                                                      //\n                                                                                                                      //\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));                                       //\n  }                                                                                                                   //\n                                                                                                                      //\n  Game.prototype.sendAnswer = function () {                                                                           //\n    function sendAnswer(event) {                                                                                      //\n      event.preventDefault();                                                                                         // 14\n      var answer = ReactDOM.findDOMNode(this.refs.answerInput).value.trim();                                          // 15\n      var roundNumber = Rooms.findOne({ room_id: gameRoomIdSelected.get() }).round;                                   // 16\n      var acroLetters = Games.findOne({ room_id: gameRoomIdSelected.get() }).roundletters[roundNumber - 1];           // 17\n      var checkedAnswer = validateAnswer(answer, acroLetters);                                                        // 18\n      if (checkedAnswer === 1) {                                                                                      // 19\n        var failMessage = \"Not feeling inspired?\";                                                                    // 20\n        $(\".submittedInfo\").css(\"color\", \"red\");                                                                      // 21\n        $(\".submittedInfo\").text(failMessage);                                                                        // 22\n      } else if (checkedAnswer === 2) {                                                                               // 23\n        var failMessage = \"Your acro should have \" + acroLetters.length + \" words...\";                                // 24\n        $(\".submittedInfo\").css(\"color\", \"red\");                                                                      // 25\n        $(\".submittedInfo\").text(failMessage);                                                                        // 26\n      } else if (checkedAnswer === 3) {                                                                               // 27\n        var failMessage = \"Check your letters...\";                                                                    // 28\n        $(\".submittedInfo\").css(\"color\", \"red\");                                                                      // 29\n        $(\".submittedInfo\").text(failMessage);                                                                        // 30\n      } else {                                                                                                        // 31\n        $(\".submittedInfo\").css(\"color\", \"green\");                                                                    // 32\n        Meteor.call('gamedata.postAnswer', gameRoomIdSelected.get(), this.props.currentUser.username, checkedAnswer);\n        var submitTime = Gamedata.findOne({ room_id: gameRoomIdSelected.get(), user_id: this.props.currentUser.username }).finalAnswerTime;\n        $(\".submittedInfo\").text(\"Submitted: \" + submitTime + \"s\");                                                   // 35\n      }                                                                                                               // 36\n    }                                                                                                                 // 37\n                                                                                                                      //\n    return sendAnswer;                                                                                                //\n  }();                                                                                                                //\n                                                                                                                      //\n  Game.prototype.render = function () {                                                                               //\n    function render() {                                                                                               //\n      if (this.props.selectedRoom) {                                                                                  // 40\n        var currentRound = this.props.selectedRoom.round;                                                             // 41\n        var currentSubround = this.props.selectedRoom.subround;                                                       // 42\n        if (currentSubround === \"Waiting for players\") {                                                              // 43\n          console.log(this.props.gamedata.length);                                                                    // 44\n          if (this.props.gamedata.length < 2) {                                                                       // 45\n            // number of players needed to start game                                                                 //\n            $(\".gamestate\").hide();                                                                                   // 46\n            $(\".waitingForPlayers\").show();                                                                           // 47\n          } else {                                                                                                    // 48\n            Meteor.call('games.init', gameRoomIdSelected.get());                                                      // 49\n          }                                                                                                           // 50\n        } else {                                                                                                      // 51\n          $(\".gamestate\").hide();                                                                                     // 52\n          if (currentSubround === \"Waiting for players\") {                                                            // 53\n            Meteor.call('games.init', gameRoomIdSelected.get());                                                      // 54\n          } else if (currentSubround === \"Get ready\") {                                                               // 55\n            $(\".gamestate\").hide();                                                                                   // 56\n            $(\".getReady\").show();                                                                                    // 57\n            $(\".submittedInfo\").text(\"\");                                                                             // 58\n            $(\".answerEnter\").value = \"\";                                                                             // 59\n            Meteor.call('games.getready', gameRoomIdSelected.get());                                                  // 60\n          } else if (currentSubround === \"Play\") {                                                                    // 61\n            $(\".gamestate\").hide();                                                                                   // 62\n            $(\".play\").show();                                                                                        // 63\n            // flip the letters                                                                                       //\n            if (this.props.gameInfo.turnLetters === true) {                                                           // 65\n              $(\".currentLetters\").textillate({                                                                       // 66\n                selector: '.texts',                                                                                   // 67\n                initialDelay: 0,                                                                                      // 68\n                autoStart: true,                                                                                      // 69\n                'in': {                                                                                               // 70\n                  effect: 'flipInY',                                                                                  // 71\n                  delayScale: 1.5,                                                                                    // 72\n                  delay: 800                                                                                          // 73\n                },                                                                                                    // 70\n                callback: function () {                                                                               // 75\n                  function callback() {                                                                               // 75\n                    //Meteor.call('games.letterFlipFlagOff', gameRoomIdSelected.get());                               //\n                  }                                                                                                   // 77\n                                                                                                                      //\n                  return callback;                                                                                    // 75\n                }(),                                                                                                  // 75\n                type: 'char'                                                                                          // 78\n              });                                                                                                     // 66\n            }                                                                                                         // 80\n            var roundSeconds = this.props.gameInfo.roundtimes[currentRound - 1];                                      // 81\n            Meteor.call('games.play', gameRoomIdSelected.get(), roundSeconds);                                        // 82\n            if (this.props.gameInfo.playStartAnswering === true) {                                                    // 83\n              $(\".gameTimer\").css(\"visibility\", \"visible\");                                                           // 84\n            } else {                                                                                                  // 85\n              $(\".gameTimer\").css(\"visibility\", \"hidden\");                                                            // 86\n            }                                                                                                         // 87\n            if (this.props.gameInfo.showAnswerForm === true) {                                                        // 88\n              $(\".answerForm\").css(\"visibility\", \"visible\");                                                          // 89\n            } else {                                                                                                  // 90\n              $(\".answerForm\").css(\"visibility\", \"hidden\").val(\"\");                                                   // 91\n            }                                                                                                         // 92\n          } else if (currentSubround === \"Vote\") {                                                                    // 93\n            $(\".gamestate\").hide();                                                                                   // 94\n            $(\".vote\").show();                                                                                        // 95\n            Meteor.call('games.vote', gameRoomIdSelected.get());                                                      // 96\n          } else if (currentSubround === \"Results\") {                                                                 // 97\n            $(\".gamestate\").hide();                                                                                   // 98\n            $(\".results\").show();                                                                                     // 99\n            Meteor.call('games.results', gameRoomIdSelected.get());                                                   // 100\n          } else if (currentSubround === \"Final results\") {                                                           // 101\n            $(\".gamestate\").hide();                                                                                   // 102\n            $(\".finalresults\").show();                                                                                // 103\n            Meteor.call('games.finalresults', gameRoomIdSelected.get());                                              // 104\n          }                                                                                                           // 105\n        }                                                                                                             // 106\n      }                                                                                                               // 107\n      return React.createElement(                                                                                     // 108\n        'div',                                                                                                        // 109\n        null,                                                                                                         // 109\n        React.createElement(                                                                                          // 110\n          'div',                                                                                                      // 110\n          { className: 'gamestate waitingForPlayers' },                                                               // 110\n          React.createElement(                                                                                        // 111\n            'div',                                                                                                    // 111\n            null,                                                                                                     // 111\n            'Waiting for at least 3 players...'                                                                       // 111\n          )                                                                                                           // 111\n        ),                                                                                                            // 110\n        React.createElement(                                                                                          // 113\n          'div',                                                                                                      // 113\n          { className: 'gamestate getReady' },                                                                        // 113\n          React.createElement(                                                                                        // 114\n            'div',                                                                                                    // 114\n            { className: 'gameTop' },                                                                                 // 114\n            React.createElement(                                                                                      // 115\n              'div',                                                                                                  // 115\n              { className: 'roundInfo' },                                                                             // 115\n              'Round ',                                                                                               // 115\n              this.props.selectedRoom ? this.props.selectedRoom.round : \"\",                                           // 116\n              ' of ',                                                                                                 // 115\n              this.props.gameInfo ? this.props.gameInfo.roundletters.length : \"\"                                      // 117\n            ),                                                                                                        // 115\n            React.createElement('div', { className: 'gameTimer' })                                                    // 119\n          ),                                                                                                          // 114\n          React.createElement(                                                                                        // 121\n            'div',                                                                                                    // 121\n            { className: 'gameMiddle' },                                                                              // 121\n            React.createElement(                                                                                      // 122\n              'div',                                                                                                  // 122\n              { className: 'getReadyText' },                                                                          // 122\n              'Get ready...'                                                                                          // 122\n            )                                                                                                         // 122\n          )                                                                                                           // 121\n        ),                                                                                                            // 113\n        React.createElement(                                                                                          // 125\n          'div',                                                                                                      // 125\n          { className: 'gamestate play' },                                                                            // 125\n          React.createElement(                                                                                        // 126\n            'div',                                                                                                    // 126\n            { className: 'gameTop' },                                                                                 // 126\n            React.createElement(                                                                                      // 127\n              'div',                                                                                                  // 127\n              { className: 'roundInfo' },                                                                             // 127\n              'Round ',                                                                                               // 127\n              this.props.selectedRoom ? this.props.selectedRoom.round : \"\",                                           // 128\n              ' of ',                                                                                                 // 127\n              this.props.gameInfo ? this.props.gameInfo.roundletters.length : \"\"                                      // 129\n            ),                                                                                                        // 127\n            React.createElement(                                                                                      // 131\n              'div',                                                                                                  // 131\n              { className: 'gameTimer' },                                                                             // 131\n              this.props.gameInfo ? this.props.gameInfo.timerSeconds : 0                                              // 131\n            )                                                                                                         // 131\n          ),                                                                                                          // 126\n          React.createElement(                                                                                        // 133\n            'div',                                                                                                    // 133\n            { className: 'gameMiddle' },                                                                              // 133\n            React.createElement(                                                                                      // 134\n              'div',                                                                                                  // 134\n              { className: 'numberSubmitted' },                                                                       // 134\n              '0 of 3 Answers Submitted'                                                                              // 134\n            ),                                                                                                        // 134\n            React.createElement(                                                                                      // 135\n              'div',                                                                                                  // 135\n              { className: 'categoryAndLetters' },                                                                    // 135\n              React.createElement(                                                                                    // 136\n                'div',                                                                                                // 136\n                { className: 'currentCat' },                                                                          // 136\n                React.createElement(                                                                                  // 136\n                  'span',                                                                                             // 136\n                  { className: 'catWord' },                                                                           // 136\n                  'Category:'                                                                                         // 136\n                ),                                                                                                    // 136\n                ' ',                                                                                                  // 136\n                this.props.gameInfo ? this.props.gameInfo.roundcategories[currentRound - 1] : \"\"                      // 136\n              ),                                                                                                      // 136\n              React.createElement(                                                                                    // 137\n                'div',                                                                                                // 137\n                { className: 'currentLetters' },                                                                      // 137\n                this.props.gameInfo ? this.props.gameInfo.roundletters[currentRound - 1] : \"\"                         // 137\n              )                                                                                                       // 137\n            ),                                                                                                        // 135\n            React.createElement('div', { className: 'submittedInfo' })                                                // 139\n          ),                                                                                                          // 133\n          React.createElement(                                                                                        // 141\n            'div',                                                                                                    // 141\n            { className: 'gameBottom' },                                                                              // 141\n            React.createElement(                                                                                      // 142\n              'form',                                                                                                 // 142\n              { className: 'answerForm' },                                                                            // 142\n              React.createElement('input', { type: 'text', ref: 'answerInput', className: 'answerEnter', placeholder: 'Enter acro here...',\n                maxLength: '70' }),                                                                                   // 144\n              React.createElement(                                                                                    // 145\n                'button',                                                                                             // 145\n                { className: 'answerSend', onClick: this.sendAnswer.bind(this) },                                     // 145\n                'Play'                                                                                                // 145\n              )                                                                                                       // 145\n            )                                                                                                         // 142\n          )                                                                                                           // 141\n        ),                                                                                                            // 125\n        React.createElement(                                                                                          // 150\n          'div',                                                                                                      // 150\n          { className: 'gamestate vote' },                                                                            // 150\n          'Now vote!'                                                                                                 // 150\n        ),                                                                                                            // 150\n        React.createElement(                                                                                          // 153\n          'div',                                                                                                      // 153\n          { className: 'gamestate results' },                                                                         // 153\n          'The results!'                                                                                              // 153\n        ),                                                                                                            // 153\n        React.createElement(                                                                                          // 156\n          'div',                                                                                                      // 156\n          { className: 'gamestate finalresults' },                                                                    // 156\n          'Final game results!'                                                                                       // 156\n        )                                                                                                             // 156\n      );                                                                                                              // 109\n    }                                                                                                                 // 162\n                                                                                                                      //\n    return render;                                                                                                    //\n  }();                                                                                                                //\n                                                                                                                      //\n  return Game;                                                                                                        //\n}(Component);                                                                                                         //\n                                                                                                                      //\nmodule.export(\"default\",exports.default=(Game));                                                                      //\n                                                                                                                      //\n                                                                                                                      //\nmodule.export(\"default\",exports.default=(createContainer(function () {                                                // 165\n  //var userRoom = Meteor.user().currentRoom;                                                                         //\n  return {                                                                                                            // 167\n    currentUser: Meteor.user(),                                                                                       // 168\n    selectedRoom: Rooms.findOne({ room_id: gameRoomIdSelected.get() }),                                               // 169\n    gameInfo: Games.findOne({ room_id: gameRoomIdSelected.get() }) ? Games.findOne({ room_id: gameRoomIdSelected.get() }) : \"\",\n    gamedata: Gamedata.find({ room_id: gameRoomIdSelected.get() }).fetch()                                            // 171\n  };                                                                                                                  // 167\n}, Game)));                                                                                                           // 173\n                                                                                                                      //\n// Game.propTypes = {                                                                                                 //\n//   // This component gets the game to display through a React prop.                                                 //\n//   // We can use propTypes to indicate it is required                                                               //\n//   game: PropTypes.object.isRequired,                                                                               //\n// };                                                                                                                 //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"Room.jsx\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",\"react\",\"../api/gamedata.js\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                    //\n// imports/ui/Room.jsx                                                                                                //\n//                                                                                                                    //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                      //\nvar _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{\"default\":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{\"default\":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{\"default\":function(v){_inherits=v}});var React,Component,PropTypes;module.import('react',{\"default\":function(v){React=v},\"Component\":function(v){Component=v},\"PropTypes\":function(v){PropTypes=v}});var Gamedata;module.import('../api/gamedata.js',{\"Gamedata\":function(v){Gamedata=v}});\n                                                                                                                      //\n                                                                                                                      //\n                                                                                                                      // 1\n                                                                                                                      // 2\n                                                                                                                      //\n// Room component - represents a single room item                                                                     //\n                                                                                                                      //\nvar Room = function (_Component) {                                                                                    //\n  _inherits(Room, _Component);                                                                                        //\n                                                                                                                      //\n  function Room() {                                                                                                   //\n    _classCallCheck(this, Room);                                                                                      //\n                                                                                                                      //\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));                                       //\n  }                                                                                                                   //\n                                                                                                                      //\n  Room.prototype.render = function () {                                                                               //\n    function render() {                                                                                               //\n      return React.createElement(                                                                                     // 7\n        'li',                                                                                                         // 7\n        null,                                                                                                         // 7\n        React.createElement(                                                                                          // 7\n          'button',                                                                                                   // 7\n          { className: 'roomSelect', 'data-room': this.props.room.room_id, onClick: this.props.updateRoom },          // 7\n          'Join'                                                                                                      // 7\n        ),                                                                                                            // 7\n        React.createElement(                                                                                          // 8\n          'span',                                                                                                     // 8\n          { className: 'roomlistTitle' },                                                                             // 8\n          this.props.room.displayName                                                                                 // 8\n        ),                                                                                                            // 8\n        React.createElement(                                                                                          // 9\n          'span',                                                                                                     // 9\n          { className: 'roomlistRound' },                                                                             // 9\n          ' Rnd: ',                                                                                                   // 9\n          this.props.room.round                                                                                       // 9\n        ),                                                                                                            // 9\n        React.createElement(                                                                                          // 10\n          'span',                                                                                                     // 10\n          { className: 'roomlistSubround' },                                                                          // 10\n          ' (',                                                                                                       // 10\n          this.props.room.subround,                                                                                   // 10\n          ')'                                                                                                         // 10\n        ),                                                                                                            // 10\n        React.createElement(                                                                                          // 11\n          'span',                                                                                                     // 11\n          { className: 'roomlistPlayers' },                                                                           // 11\n          ' Players: ',                                                                                               // 11\n          Gamedata.find({ room_id: this.props.room.room_id }).fetch().length                                          // 11\n        )                                                                                                             // 11\n      );                                                                                                              // 7\n    }                                                                                                                 // 13\n                                                                                                                      //\n    return render;                                                                                                    //\n  }();                                                                                                                //\n                                                                                                                      //\n  return Room;                                                                                                        //\n}(Component);                                                                                                         //\n                                                                                                                      //\nmodule.export(\"default\",exports.default=(Room));                                                                      //\n                                                                                                                      //\n                                                                                                                      //\nRoom.propTypes = {                                                                                                    // 16\n  // This component gets the room to display through a React prop.                                                    //\n  // We can use propTypes to indicate it is required                                                                  //\n  room: PropTypes.object.isRequired                                                                                   // 19\n};                                                                                                                    // 16\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}}},{\"extensions\":[\".js\",\".json\",\".html\",\".jsx\",\".css\"]});\nrequire(\"./client/template.main.js\");\nrequire(\"./client/jquery.lettering.js\");\nrequire(\"./client/jquery.textillate.js\");\nrequire(\"./client/utilities.js\");\nrequire(\"./client/main.jsx\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/client/template.main.js","/client/jquery.lettering.js","/client/jquery.textillate.js","/client/utilities.js","/client/main.jsx","/imports/api/chats.js","/imports/api/gamedata.js","/imports/api/games.js","/imports/api/messages.js","/imports/api/rooms.js","/imports/startup/accounts-config.js","/imports/ui/AccountsUIWrapper.jsx","/imports/ui/App.jsx","/imports/ui/Chat.jsx","/imports/ui/Game.jsx","/imports/ui/Room.jsx"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.Raw('<div id=\"render-target\"></div>');\n}));\nMeteor.startup(Template.body.renderToDocument);\n","/*global jQuery */\n/*!\n* Lettering.JS 0.7.0\n*\n* Copyright 2010, Dave Rupert http://daverupert.com\n* Released under the WTFPL license\n* http://sam.zoy.org/wtfpl/\n*\n* Thanks to Paul Irish - http://paulirish.com - for the feedback.\n*\n* Date: Mon Sep 20 17:14:00 2010 -0600\n*/\n(function($){\n  function injector(t, splitter, klass, after) {\n    var text = t.text()\n    , a = text.split(splitter)\n    , inject = '';\n    if (a.length) {\n      $(a).each(function(i, item) {\n        inject += '<span class=\"'+klass+(i+1)+'\" aria-hidden=\"true\">'+item+'</span>'+after;\n      });\n      t.attr('aria-label',text)\n      .empty()\n      .append(inject)\n\n    }\n  }\n\n\n  var methods = {\n    init : function() {\n\n      return this.each(function() {\n        injector($(this), '', 'char', '');\n      });\n\n    },\n\n    words : function() {\n\n      return this.each(function() {\n        injector($(this), ' ', 'word', ' ');\n      });\n\n    },\n\n    lines : function() {\n\n      return this.each(function() {\n        var r = \"eefec303079ad17405c889e092e105b0\";\n        // Because it's hard to split a <br/> tag consistently across browsers,\n        // (*ahem* IE *ahem*), we replace all <br/> instances with an md5 hash\n        // (of the word \"split\").  If you're trying to use this plugin on that\n        // md5 hash string, it will fail because you're being ridiculous.\n        injector($(this).children(\"br\").replaceWith(r).end(), r, 'line', '');\n      });\n\n    }\n  };\n\n  $.fn.lettering = function( method ) {\n    // Method calling logic\n    if ( method && methods[method] ) {\n      return methods[ method ].apply( this, [].slice.call( arguments, 1 ));\n    } else if ( method === 'letters' || ! method ) {\n      return methods.init.apply( this, [].slice.call( arguments, 0 ) ); // always pass an array\n    }\n    $.error( 'Method ' +  method + ' does not exist on jQuery.lettering' );\n    return this;\n  };\n\n})(jQuery);\n","/*\n * textillate.js\n * http://jschr.github.com/textillate\n * MIT licensed\n *\n * Copyright (C) 2012-2013 Jordan Schroter\n */\n\n(function ($) {\n  \"use strict\";\n\n  function isInEffect (effect) {\n    return /In/.test(effect) || $.inArray(effect, $.fn.textillate.defaults.inEffects) >= 0;\n  };\n\n  function isOutEffect (effect) {\n    return /Out/.test(effect) || $.inArray(effect, $.fn.textillate.defaults.outEffects) >= 0;\n  };\n\n\n  function stringToBoolean(str) {\n    if (str !== \"true\" && str !== \"false\") return str;\n    return (str === \"true\");\n  };\n\n  // custom get data api method\n  function getData (node) {\n    var attrs = node.attributes || []\n      , data = {};\n\n    if (!attrs.length) return data;\n\n    $.each(attrs, function (i, attr) {\n      var nodeName = attr.nodeName.replace(/delayscale/, 'delayScale');\n      if (/^data-in-*/.test(nodeName)) {\n        data.in = data.in || {};\n        data.in[nodeName.replace(/data-in-/, '')] = stringToBoolean(attr.nodeValue);\n      } else if (/^data-out-*/.test(nodeName)) {\n        data.out = data.out || {};\n        data.out[nodeName.replace(/data-out-/, '')] =stringToBoolean(attr.nodeValue);\n      } else if (/^data-*/.test(nodeName)) {\n        data[nodeName.replace(/data-/, '')] = stringToBoolean(attr.nodeValue);\n      }\n    })\n\n    return data;\n  }\n\n  function shuffle (o) {\n      for (var j, x, i = o.length; i; j = parseInt(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);\n      return o;\n  }\n\n  function animate ($t, effect, cb) {\n    $t.addClass('animated ' + effect)\n      .css('visibility', 'visible')\n      .show();\n\n    $t.one('webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend', function () {\n        $t.removeClass('animated ' + effect);\n        cb && cb();\n    });\n  }\n\n  function animateTokens ($tokens, options, cb) {\n    var that = this\n      , count = $tokens.length;\n\n    if (!count) {\n      cb && cb();\n      return;\n    }\n\n    if (options.shuffle) $tokens = shuffle($tokens);\n    if (options.reverse) $tokens = $tokens.toArray().reverse();\n\n    $.each($tokens, function (i, t) {\n      var $token = $(t);\n\n      function complete () {\n        if (isInEffect(options.effect)) {\n          $token.css('visibility', 'visible');\n        } else if (isOutEffect(options.effect)) {\n          $token.css('visibility', 'hidden');\n        }\n        count -= 1;\n        if (!count && cb) cb();\n      }\n\n      var delay = options.sync ? options.delay : options.delay * i * options.delayScale;\n\n      $token.text() ?\n        setTimeout(function () { animate($token, options.effect, complete) }, delay) :\n        complete();\n    });\n  };\n\n  var Textillate = function (element, options) {\n    var base = this\n      , $element = $(element);\n\n    base.init = function () {\n      base.$texts = $element.find(options.selector);\n\n      if (!base.$texts.length) {\n        base.$texts = $('<ul class=\"texts\"><li>' + $element.html() + '</li></ul>');\n        $element.html(base.$texts);\n      }\n\n      base.$texts.hide();\n\n      base.$current = $('<span>')\n        .html(base.$texts.find(':first-child').html())\n        .prependTo($element);\n\n      if (isInEffect(options.in.effect)) {\n        base.$current.css('visibility', 'hidden');\n      } else if (isOutEffect(options.out.effect)) {\n        base.$current.css('visibility', 'visible');\n      }\n\n      base.setOptions(options);\n\n      base.timeoutRun = null;\n\n      setTimeout(function () {\n        base.options.autoStart && base.start();\n      }, base.options.initialDelay)\n    };\n\n    base.setOptions = function (options) {\n      base.options = options;\n    };\n\n    base.triggerEvent = function (name) {\n      var e = $.Event(name + '.tlt');\n      $element.trigger(e, base);\n      return e;\n    };\n\n    base.in = function (index, cb) {\n      index = index || 0;\n\n      var $elem = base.$texts.find(':nth-child(' + ((index||0) + 1) + ')')\n        , options = $.extend(true, {}, base.options, $elem.length ? getData($elem[0]) : {})\n        , $tokens;\n\n      $elem.addClass('current');\n\n      base.triggerEvent('inAnimationBegin');\n\n      base.$current\n        .html($elem.html())\n        .lettering('words');\n\n      // split words to individual characters if token type is set to 'char'\n      if (base.options.type == \"char\") {\n        base.$current.find('[class^=\"word\"]')\n            .css({\n              'display': 'inline-block',\n              // fix for poor ios performance\n              '-webkit-transform': 'translate3d(0,0,0)',\n              '-moz-transform': 'translate3d(0,0,0)',\n              '-o-transform': 'translate3d(0,0,0)',\n              'transform': 'translate3d(0,0,0)'\n            })\n            .each(function () { $(this).lettering() });\n      }\n\n      $tokens = base.$current\n        .find('[class^=\"' + base.options.type + '\"]')\n        .css('display', 'inline-block');\n\n      if (isInEffect(options.in.effect)) {\n        $tokens.css('visibility', 'hidden');\n      } else if (isOutEffect(options.in.effect)) {\n        $tokens.css('visibility', 'visible');\n      }\n\n      base.currentIndex = index;\n\n      animateTokens($tokens, options.in, function () {\n        base.triggerEvent('inAnimationEnd');\n        if (options.in.callback) options.in.callback();\n        if (cb) cb(base);\n      });\n    };\n\n    base.out = function (cb) {\n      var $elem = base.$texts.find(':nth-child(' + ((base.currentIndex||0) + 1) + ')')\n        , $tokens = base.$current.find('[class^=\"' + base.options.type + '\"]')\n        , options = $.extend(true, {}, base.options, $elem.length ? getData($elem[0]) : {})\n\n      base.triggerEvent('outAnimationBegin');\n\n      animateTokens($tokens, options.out, function () {\n        $elem.removeClass('current');\n        base.triggerEvent('outAnimationEnd');\n        if (options.out.callback) options.out.callback();\n        if (cb) cb(base);\n      });\n    };\n\n    base.start = function (index) {\n      setTimeout(function () {\n        base.triggerEvent('start');\n\n      (function run (index) {\n        base.in(index, function () {\n          var length = base.$texts.children().length;\n\n          index += 1;\n\n          if (!base.options.loop && index >= length) {\n            if (base.options.callback) base.options.callback();\n            base.triggerEvent('end');\n          } else {\n            index = index % length;\n\n            base.timeoutRun = setTimeout(function () {\n              base.out(function () {\n                run(index)\n              });\n            }, base.options.minDisplayTime);\n          }\n        });\n      }(index || 0));\n      }, base.options.initialDelay);\n    };\n\n    base.stop = function () {\n      if (base.timeoutRun) {\n        clearInterval(base.timeoutRun);\n        base.timeoutRun = null;\n      }\n    };\n\n    base.init();\n  }\n\n  $.fn.textillate = function (settings, args) {\n    return this.each(function () {\n      var $this = $(this)\n        , data = $this.data('textillate')\n        , options = $.extend(true, {}, $.fn.textillate.defaults, getData(this), typeof settings == 'object' && settings);\n\n      if (!data) {\n        $this.data('textillate', (data = new Textillate(this, options)));\n      } else if (typeof settings == 'string') {\n        data[settings].apply(data, [].concat(args));\n      } else {\n        data.setOptions.call(data, options);\n      }\n    })\n  };\n\n  $.fn.textillate.defaults = {\n    selector: '.texts',\n    loop: false,\n    minDisplayTime: 2000,\n    initialDelay: 0,\n    in: {\n      effect: 'fadeInLeftBig',\n      delayScale: 1.5,\n      delay: 50,\n      sync: false,\n      reverse: false,\n      shuffle: false,\n      callback: function () {}\n    },\n    out: {\n      effect: 'hinge',\n      delayScale: 1.5,\n      delay: 50,\n      sync: false,\n      reverse: false,\n      shuffle: false,\n      callback: function () {}\n    },\n    autoStart: true,\n    inEffects: [],\n    outEffects: [ 'hinge' ],\n    callback: function () {},\n    type: 'char'\n  };\n\n}(jQuery));\n","export function validateAnswer(answer, acroletters) {\n  var acrolength = acroletters.length;\n  var theAnswer = answer.replace(/(\\s+)/g, \" \");\n  var answersplit = theAnswer.split(\" \");\n  var answerlength = answersplit.length;\n\n  if (theAnswer === [\"\"] || theAnswer === [\"\", \"\"]) {\n    return 1 // answer fail code 1 (\"Not feeling inspired?\")\n  }\n  if (acrolength !== answerlength) {\n    return 2  // answer fail code 2 (\"Incorrect answer length...\")\n  }\n  for (var i = 0; i < acrolength; i++) {\n    if (answersplit[i][0].toUpperCase() !== acroletters[i]) {\n      return 3 // answer fail code 3 (\"Check your letters...\")\n    }\n  }\n  return theAnswer\n}\n\nexport function timer(seconds, container) {\n  $(\".\" + container).text(\":\" + seconds);\n  $(\".\" + container).css(\"display\", \"inline-block\");\n\n  setTimeout(function() {\n    var count = seconds;\n    var counter = setInterval(tock, 1000);\n\n    function tock() {\n      count=count-1;\n      if (count <= 0) {\n         clearInterval(counter);\n         playtimerflag = \"notrunning\"\n         return;\n      }\n\n      $(\".\" + container).text(\":\" + count);\n      if (count < 6) {\n        $(\".\" + container).css(\"color\", \"red\");\n      }\n    }\n  }, 4000);\n}\n","import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\nimport { moment } from 'meteor/momentjs:moment';\n\nimport '../imports/startup/accounts-config.js';\nimport './utilities.js';\nimport './jquery.lettering.js';\nimport './jquery.textillate.js';\nimport App from '../imports/ui/App.jsx';\n\nMeteor.startup(() => {\n  render(<App />, document.getElementById('render-target'));\n});\n\nMeteor.subscribe(\"userData\");\n\n// DB room setup\n// db.rooms.insert({ room_id: \"FamilyRoom\", displayName: \"Family Room\", family: true, round: 0, subround: \"Waiting for players\" });\n// db.rooms.insert({ room_id: \"HotTub\", displayName: \"Hot Tub\", family: false, round: 0, subround: \"Waiting for players\" });\n\n\n","import { Mongo } from 'meteor/mongo';\n\nexport const Chats = new Mongo.Collection('chats');\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nimport { Rooms } from '../api/rooms.js';\nimport { Games } from '../api/games.js';\nexport const Gamedata = new Mongo.Collection('gamedata');\n\nMeteor.methods({\n  'gamedata.postAnswer'(roomId, userId, answer) {\n    var submitAnswerTime = new Date();\n    Gamedata.update({room_id: roomId, user_id: userId}, {\n      $set: { answer: answer,\n              submitAnswerTime: submitAnswerTime },\n    });\n    var countStarted = Games.findOne({room_id: roomId}).playStartTime\n    var finalSubmitTime = (submitAnswerTime - countStarted) / 1000;\n    Gamedata.update({room_id: roomId, user_id: userId}, {\n      $set: { finalAnswerTime: finalSubmitTime },\n    });\n  },\n\n  // 'rooms.removePlayer'(roomId, playerRemoving) {\n  //   Rooms.update(roomId, {\n  //     $pull: { players:  playerRemoving\n  //   }}, {multi: true})\n  // }\n\n})\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\nimport ReactDOM from 'react-dom';\n\nimport { Rooms } from '../api/rooms.js';\nimport { Gamedata } from '../api/gamedata.js';\nexport const Games = new Mongo.Collection('games');\n\n// game config\nacroLettersPool = \"AAAAAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBBBBBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCDDDDDDDDDDDDDDDDDDDDDDDDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFFFFFFFFFFFFFFFFFFFFFFFFGGGGGGGGGGGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHIIIIIIIIIIIIIIIIIIIIIIJJJJJKKKKKKLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOPPPPPPPPPPPPPPPPPPPPPPPPQQQQRRRRRRRRRRRRRRRRRRSSSSSSSSSSSSSSSSSSSSSSSSTTTTTTTTTTTTTTTTTTTTTTTTUUUUUUUVVVVVVVVVVVVWWWWWWWWWWWWXYYYYYYYYYYYYZZZZ\";\n\nacroCategories = [\"General\", \"Sports\", \"Food\", \"Movies\", \"Television\", \"History\", \"Music\", \"Art\", \"Animals\",\n                  \"Science\", \"Politics\", \"Fashion\", \"Books\", \"Travel\", \"Celebrities\", \"Romance\", \"Technology\",\n                  \"Family\", \"School\", \"Nature\", \"Health\", \"Current Events\", \"Work\", \"Give Some Advice\",\n                  \"Definitions\", \"Sayings\", \"Exercise/Fitness\", \"Baby's First Sentence\", \"My Greatest Fear\",\n                  \"In the Year 3000\", \"Weird Laws\", \"I Was Late Because...\", \"Odd College Majors\",\n                  \"My Biggest Secret\", \"New Ice Cream Flavors\", \"Bad Restaurant Names\",\n                  \"I Got Fired Because...\", \"Odd Product Slogans\", \"Bad Habits\", \"Science Fiction\",\n                  \"Strange Trends\", \"Embarrassing Moments\", \"CAVEMAN SAY...\", \"Superhero/villain Names\",\n                  \"Horror Movie Titles\", \"In a Perfect World...\", \"Short Poetry\", \"New Year's Resolutions\",\n                  \"My Dream Last Night\", \"Odd Tombstone Messages\", \"Awful First Dates\", \"Odd Holiday Customs\",\n                  \"The Holidays\", \"Short Ghost Stories\", \"... Said No One Ever\", \"Fairy/Folk Tales\"]\n\nroundsToPlay = 8;\nroundTimes = [50, 60, 60, 80, 50, 60, 60 ,80]\nroundAcroLength = [3, 4, 5, 6, 3, 4, 5, 6]\nreadyTimer = {}\nplayTimer = {}\nplayStartTimer = {}\nvoteTimer = {}\nresultsTimer = {}\nfinalTimer = {}\n\n\n////////////\n\nMeteor.methods({\n  'games.init'(roomId) {\n    if (Games.find({ room_id: roomId }).fetch().length === 0) { //always make sure updates only happen once\n      readyTimer = {}\n      playTimer = {}\n      playStartTimer = {}\n      voteTimer = {}\n      resultsTimer = {}\n      finalTimer = {}\n      var roundletters;\n      var acroPoolLength = acroLettersPool.length;\n      var catPoolLength = acroCategories.length;\n      var acroPlayArray = [];\n      var acroCatArray = [];\n      for (var i = 0; i < roundsToPlay; i++) {\n        var acroToPlay = \"\";\n        for (var j = 0; j < roundAcroLength[i]; j++) {\n          acroToPlay = acroToPlay + acroLettersPool[Math.floor(Math.random() * acroPoolLength)]\n        }\n        acroPlayArray.push(acroToPlay);\n        acroCatArray.push(acroCategories[Math.floor(Math.random() * catPoolLength)])\n      }\n      Games.insert({\n        room_id: roomId,\n        roundletters: acroPlayArray,\n        roundcategories: acroCatArray,\n        roundtimes: roundTimes\n      });\n      Rooms.update({room_id: roomId}, {\n        $set: { round: 1 , subround: \"Get ready\" },\n      });\n    }\n  },\n\n  'games.getready'(roomId) {\n    if (!readyTimer[roomId]) { // one timer only\n      readyTimer[roomId] = Meteor.setTimeout(function() {\n        if (Gamedata.find({room_id: roomId}).fetch().length === 0) {\n          Meteor.call('games.reset', roomId );\n        } else {\n          Rooms.update({room_id: roomId}, {\n            $set: { subround: \"Play\" },\n          });\n        }\n        delete readyTimer[roomId];\n      }, 3500);\n    }\n  },\n\n  'games.play'(roomId, roundtime) {\n    if (!playTimer[roomId]) { // one timer only\n      var numberOfLetters = roundAcroLength[Rooms.findOne({room_id: roomId}).round - 1]\n      Games.update({room_id: roomId}, {\n        $set: { turnLetters: true }\n      })\n      playTimer[roomId] = Meteor.setTimeout(function() {\n        if (Gamedata.find({room_id: roomId}).fetch().length === 0) {\n          Meteor.call('games.reset', roomId );\n        } else {\n          Rooms.update({room_id: roomId}, {\n            $set: { subround: \"Vote\" },\n          });\n        }\n        delete playTimer[roomId];\n      }, (roundtime * 1000) + (numberOfLetters * 1000) + 4000);\n    }\n    if (!playStartTimer[roomId]) {\n      playStartTimer[roomId] = Meteor.setTimeout(function() {\n        Games.update({room_id: roomId}, {\n          $set: { playStartAnswering: true,\n                  timerSeconds: roundtime }\n        })\n        timer(roundtime, roomId, \"playtimerstate\");\n      }, (numberOfLetters * 1000) + 2000)\n    }\n  },\n\n  'games.vote'(roomId) {\n    delete playStartTimer[roomId]\n    Games.update({room_id: roomId}, {\n      $set: { playStartAnswering: false }\n    })\n    if (!voteTimer[roomId]) { // one timer only\n      voteTimer[roomId] = Meteor.setTimeout(function() {\n        if (Gamedata.find({room_id: roomId}).fetch().length === 0) {\n          Meteor.call('games.reset', roomId );\n        } else {\n          Rooms.update({room_id: roomId}, {\n            $set: { subround: \"Results\" },\n          });\n        }\n        delete voteTimer[roomId];\n      }, 35000);\n    }\n  },\n\n  'games.results'(roomId) {\n    if (!resultsTimer[roomId]) { // one timer only\n      var currentRound = Rooms.findOne({room_id: roomId}).round;\n      if (currentRound === roundsToPlay) {\n        resultsTimer[roomId] = Meteor.setTimeout(function() {\n          if (Gamedata.find({room_id: roomId}).fetch().length < 2) { // end game after results if not enough players\n            delete resultsTimer[roomId];\n            Meteor.call('games.reset', roomId );\n          } else {\n            Rooms.update({room_id: roomId}, {\n              $set: { subround: \"Final results\" },\n            });\n          }\n          delete resultsTimer[roomId];\n        }, 22000);\n      } else {\n        resultsTimer[roomId] = Meteor.setTimeout(function() {\n          if (Gamedata.find({room_id: roomId}).fetch().length < 2) { // end game after results if not enough players\n            delete resultsTimer[roomId];\n            Meteor.call('games.reset', roomId );\n          } else {\n            Rooms.update({room_id: roomId}, {\n              $set: { round: currentRound + 1,\n                      subround: \"Get ready\" },\n            });\n          }\n          delete resultsTimer[roomId]\n        }, 22000);\n      }\n    }\n  },\n\n  'games.finalresults'(roomId) {\n    if (!finalTimer[roomId]) { // one timer only\n      finalTimer[roomId] = Meteor.setTimeout(function() {\n        if (Gamedata.find({room_id: roomId}).fetch().length < 2) { // end game after results if not enough players\n          delete finalTimer[roomId];\n          Meteor.call('games.reset', roomId );\n        } else { // set up for new game\n          Games.remove({ room_id: roomId });\n          Meteor.call('games.init', roomId );\n        }\n        delete finalTimer[roomId];\n      }, 25000);\n    }\n    readyTimer = {}\n    playTimer = {}\n    playStartTimer = {}\n    voteTimer = {}\n    resultsTimer = {}\n  },\n\n  'games.reset'(roomId) {\n    Games.remove({ room_id: roomId });\n    Gamedata.remove({ room_id: roomId });\n    Rooms.update({room_id: roomId}, {\n      $set: { round: 0,\n              subround: \"Waiting for players\" },\n    });\n    readyTimer = {}\n    playTimer = {}\n    playStartTimer = {}\n    voteTimer = {}\n    resultsTimer = {}\n  },\n\n  'games.letterFlipFlagOff'(roomId) {\n    Games.update({room_id: roomId}, {\n      $set: { turnLetters: false }\n    })\n  }\n\n})\n\nfunction timer(seconds, roomId, statetoactivate) {\n\n  Meteor.setTimeout(function() {\n    var countdownStartTime = new Date();\n    if (statetoactivate === \"playtimerstate\") {\n      Games.update({room_id: roomId}, {\n        $set: { playStartTime:countdownStartTime,\n                showAnswerForm: true }\n      })\n    } else {\n      Games.update({room_id: roomId}, {\n        $set: { voteStartTime:countdownStartTime }\n      })\n    }\n    var count = seconds;\n    var counter = Meteor.setInterval(tock, 1000);\n\n    function tock() {\n      count=count-1;\n      if (count < 0) {\n         Meteor.clearInterval(counter);\n         Games.update({room_id: roomId}, {\n            $set: { showAnswerForm: false }\n          })\n         return;\n      }\n      Games.update({room_id: roomId}, {\n        $set: { timerSeconds: count }\n      })\n    }\n  }, 2000);\n}\n\n    // Games.find({ room_id: roomId }).remove({});\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nexport const Messages = new Mongo.Collection('messages');\n\nMeteor.methods({\n  'messages.msgPlayer'(roomId, name, verb, roomName, className) {\n    Messages.insert({\n      user_id: \"<PartyHost>\",\n      room_id: roomId,\n      message: name + verb + roomName,\n      messageClass: className,\n      createdAt: new Date()\n    });\n  },\n\n  'messages.postMessage'(name, roomId, message) {\n    Messages.insert({\n      user_id: name,\n      room_id: roomId,\n      message: message,\n      createdAt: new Date() });\n  },\n\n  'messages.deleteOld'(messageId) {\n    Messages.remove({ _id : messageId});\n  }\n\n})\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nexport const Rooms = new Mongo.Collection('rooms');\nimport { Gamedata } from '../api/gamedata.js';\n\nMeteor.methods({\n  'rooms.addPlayer'(roomId, playerAdding) {\n    if (!Gamedata.findOne({room_id: roomId, user_id: playerAdding})) {\n      Gamedata.insert({\n        room_id: roomId,\n        user_id: playerAdding,\n        score: 0 ,\n      });\n    }\n  },\n\n  'rooms.removePlayer'(roomId, playerRemoving) {\n    Gamedata.remove({room_id: roomId, user_id: playerRemoving});\n  }\n\n})\n","import { Accounts } from 'meteor/accounts-base';\n\nAccounts.ui.config({\n  passwordSignupFields: 'USERNAME_AND_EMAIL',\n});\n\nAccounts.onLogin(function(user){\n    $(\".mainScreen\").show();\n    //App.showPrivate();\n});\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Template } from 'meteor/templating';\nimport { Blaze } from 'meteor/blaze';\n\nexport default class AccountsUIWrapper extends Component {\n  componentDidMount() {\n    // Use Meteor Blaze to render login buttons\n    this.view = Blaze.render(Template.loginButtons,\n      ReactDOM.findDOMNode(this.refs.container));\n  }\n  componentWillUnmount() {\n    // Clean up Blaze view\n    Blaze.remove(this.view);\n  }\n  render() {\n    // Just render a placeholder container that will be filled in\n    return <span ref=\"container\" />;\n  }\n}\n","import React, { Component } from 'react';\nimport AccountsUIWrapper from './AccountsUIWrapper.jsx';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport { ReactiveVar } from 'meteor/reactive-var';\nexport var gameRoomIdSelected = new ReactiveVar(\"\");\n\nimport { Rooms } from '../api/rooms.js';\nimport { Chats } from '../api/chats.js';\nimport { Messages } from '../api/messages.js';\nimport { Games } from '../api/games.js';\nimport { Gamedata } from '../api/gamedata.js';\n\nimport Room from './Room.jsx';\nimport Chat from './Chat.jsx';\nimport Game from './Game.jsx';\n\n\n\n// App component - represents the whole app\nexport default class App extends Component {\n\n  userRouting() {\n    if (this.props.currentUser) {\n      $(\".frontSignin\").hide();\n    } else {\n      $(\".frontSignin\").show();\n      $(\".mainScreen, .stats, .chat, .settings\").hide();\n    }\n    $(\".acroparty\").show()\n  }\n\n  // rooms\n  gotoRoom(e) {\n    var theroom = $(e.target).attr(\"data-room\")\n    gameRoomIdSelected.set(theroom);\n    var roomToJoin =  Rooms.findOne({ room_id: theroom })\n    Meteor.call('rooms.addPlayer', gameRoomIdSelected.get(), this.props.currentUser.username)\n    $(\".mainScreen, .popup\").hide();\n    $(\".chat\").attr(\"id\", theroom).show();\n    var enteringRoomVerb = [\" appears in the \", \" saunters into the \", \" walks into the \", \" struts into the \",\n                            \" sprints into the \", \" apparates into the \", \" materializes in the \",\n                            \" mysteriously arises inside the \", \" seems to have entered our \",\n                            \" ridiculously enters the \", \" crashed through the window into the \",\n                            \" is suddenly in the \", \" scoots on in to the \", \" politely enters the \"]\n    var randomVerb = enteringRoomVerb[Math.floor(Math.random() * enteringRoomVerb.length)]\n    Meteor.call('messages.msgPlayer', gameRoomIdSelected.get(), this.props.currentUser.username, randomVerb,\n      Rooms.findOne({ room_id: gameRoomIdSelected.get() }).displayName + \"...\")\n  }\n  renderRooms() {\n    return this.props.rooms.map((room) => (\n      <Room key={room._id} room={room} updateRoom={this.gotoRoom.bind(this)} />\n    ));\n  }\n  renderRoomId() {\n    return gameRoomIdSelected.get();\n  }\n  roomName() {\n    if (this.props.selectedRoom) {\n      var theRoomName = this.props.selectedRoom.displayName;\n    } else {\n      var theRoomName = \"\"\n    }\n    return theRoomName\n  }\n\n  exitRoom(e) {\n    var exitingRoomVerb = [\" leaves the room\", \" runs out of the room\", \" walks out of the room\",\n                            \" vanishes\", \" disappears\", \" backs out of the room slowly\",\n                            \" suddenly dematerializes\", \" scurries out of the room\",\n                            \" rushes out of here\", \" bids everyone a fond farewell\",\n                            \" leaps out the window\", \" takes off\", \" silently slips out of the room\",\n                            \" graciously exits the scene\", \" politely goes elsewhere\", \" backflips out of here\"]\n    var randomExitVerb = exitingRoomVerb[Math.floor(Math.random() * exitingRoomVerb.length)]\n    Meteor.call('messages.msgPlayer', gameRoomIdSelected.get(), this.props.currentUser.username, randomExitVerb,\n      \"...\", \"leavingMessage\")\n    Meteor.call('rooms.removePlayer', this.props.selectedRoom.room_id, this.props.currentUser.username)\n    $(\".popup\").hide();\n    $(\"#\" + gameRoomIdSelected.get()).hide();\n    gameRoomIdSelected.set(\"\");\n    $(\".chat\").removeAttr(\"id\");\n    $(\".mainScreen\").show();\n  }\n\n  // stats\n  closePopup(e) {\n    $(\".popup\").hide();\n  }\n\n  openStats(e) {\n    $(\".settings\").hide();\n    $(\".stats\").show();\n  }\n\n  renderUsername() {\n    if (this.props.currentUser) {\n      if (this.props.currentUser.username) {\n        return  <span>{ this.props.currentUser.username }</span>;\n      } else {\n        return \"\";\n      }\n    } else {\n      return \"\";\n    }\n  }\n\n  renderLifePoints() {\n    // this.props.currentUser ? <span>{ this.props.currentUser.stats.lifetimePoints }</span> : '';\n    if (this.props.currentUser) {\n      if (this.props.currentUser.stats) {\n        return  <span>{ this.props.currentUser.stats.lifetimePoints }</span>;\n      } else {\n        return \"\";\n      }\n    } else {\n      return \"\";\n    }\n  }\n\n  //settings\n  openSettings(e) {\n    $(\".stats\").hide();\n    $(\".settings\").show();\n  }\n\n  render() {\n    return (\n\n      <div className=\"acroparty\">\n        {this.userRouting()}\n        <section className=\"frontSignin\" style={{\"display\" : \"none\"}}>\n          <h1>Welcome to AcroParty!</h1>\n          <AccountsUIWrapper />\n        </section>\n\n        <section className=\"mainScreen\">\n          <header>\n            <h1>AcroParty</h1>\n          </header>\n          <div className=\"welcomeText\">\n            Welcome, { this.renderUsername() }! Please select a room to start playing...\n          </div>\n          <div className=\"roomList\">\n            <div className=\"roomListTitle\">Rooms</div>\n            { this.renderRooms() }\n          </div>\n          <div className=\"mainButtons\">\n            <button className=\"mainButton\" onClick={this.openStats.bind(this)}>Stats</button>\n            <button className=\"mainButton\" onClick={this.openSettings.bind(this)}>Settings</button>\n          </div>\n        </section>\n\n        <section className=\"chat\">\n          <section className=\"gamePlay\">\n            <Game roomId={this.renderRoomId()} roomName={this.roomName()} />\n          </section>\n\n          <Chat clickStats={this.openStats.bind(this)} clickSettings={this.openSettings.bind(this)}\n                roomName={this.roomName()} exitRoom={this.exitRoom.bind(this)}\n                roomId={this.renderRoomId()} />\n        </section>\n\n        <section className=\"stats popup\">\n          <div>Life wins is { this.renderLifePoints() }</div>\n          <button className=\"popupButton\" onClick={this.closePopup.bind(this)}>Close</button>\n        </section>\n\n        <section className=\"settings popup\">\n          <AccountsUIWrapper />\n          <button className=\"popupButton\" onClick={this.closePopup.bind(this)}>Close</button>\n        </section>\n\n\n      </div>\n    );\n  }\n}\n\nexport default createContainer(() => {\n  //var userRoom = Meteor.user().currentRoom;\n  return {\n    currentUser: Meteor.user(),\n    rooms: Rooms.find({}).fetch(),\n    selectedRoom: Rooms.findOne({ room_id: gameRoomIdSelected.get() }),\n    gamedata: Gamedata.find({}).fetch()\n  };\n}, App);\n\n","import React, { Component, PropTypes } from 'react';\nimport ReactDOM from 'react-dom';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport { gameRoomIdSelected } from './App.jsx'\n\nimport { Messages } from '../api/messages.js';\nimport { Gamedata } from '../api/gamedata.js';\n\nexport default class ListMessages extends Component {\n  componentDidMount() {\n    var $this = $(ReactDOM.findDOMNode(this));\n    $(\".messagesRead\")[0].scrollTop = $(\".messagesRead\")[0].scrollHeight;\n  }\n  render() {\n    return <li className={(this.props.author === \"<PartyHost>\" ? \"hostMessage\" : \"\") +\n            (this.props.exitClass ? \" \" + this.props.exitClass : \"\")}>\n            <span className=\"authorMessage\"><span className=\"messageAuthor\">{this.props.author}:</span> {this.props.message}</span>\n            <span className=\"messageTime\" data-livestamp={this.props.timestamp}></span>\n           </li>\n  }\n}\n\nexport default class ListItemPlayer extends Component {\n  render() {\n    return <li className=\"playerInList\" data-playerInList={this.props.name}>{this.props.name}\n    <span className=\"scoresRight\">{this.props.score}</span></li>;\n  }\n}\n\nexport default class Chat extends Component {\n  listPlayers() {\n    var playerListArray = [];\n    this.props.roomPlayers.forEach(function() {\n      playerListArray.push(this.user_id)\n    })\n    var playerListItems = playerListArray.map(function(name) {\n      return <li>name</li>\n    });\n    return playerListItems\n  }\n\n  sendMessage(event) {\n    event.preventDefault();\n    const message = ReactDOM.findDOMNode(this.refs.messageInput).value.trim();\n    if (message === \"\") {return} // blank messages don't send\n    Meteor.call('messages.postMessage', this.props.currentUser.username, gameRoomIdSelected.get(), message);\n    ReactDOM.findDOMNode(this.refs.messageInput).value = '';\n    // delete old messages in room\n    if (this.props.roomMessages.length > 150) { // 200 chat messages per room\n      var indexToTrim = this.props.roomMessages.length - 150;\n      var oldestMessageTime = this.props.roomMessages[indexToTrim].createdAt;\n      var messagesToDelete = Messages.find({\n        room_id : gameRoomIdSelected.get(),\n        createdAt: { $lt: oldestMessageTime }\n      }).fetch();\n      messagesToDelete.forEach(function(message) {\n        Meteor.call('messages.deleteOld', message._id);\n      });\n    }\n  }\n\n  renderMessages() {\n    if (this.props.roomMessages) {\n      return this.props.roomMessages.map((message) => (\n        <ListMessages key={message._id} author={message.user_id} message={message.message}\n                      timestamp={message.createdAt} exitClass={message.messageClass}/>\n      ));\n    } else {\n      return \"\";\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"chatArea\">\n        <div className=\"listAndInfo\">\n          <div className=\"playerList\">\n            <div className=\"bigRoomName\"><span>{this.props.roomName}</span></div>\n            <ul className=\"playerNameList\"><u>Players</u><span className=\"scoresRight\"><u>Scores</u></span>\n              {this.props.roomPlayers.map((player) => (\n                <ListItemPlayer key={player.user_id} name={player.user_id} score={player.score} />\n              ))}\n            </ul>\n          </div>\n          <div className=\"chatMenuButtons\">\n            <button className=\"mainButton\" onClick={this.props.clickStats}>Stats</button>\n            <button className=\"mainButton\" onClick={this.props.clickSettings}>Settings</button>\n            <button className=\"mainButton\" onClick={this.props.exitRoom}>Exit Room</button>\n          </div>\n        </div>\n        <div className=\"messagesArea\">\n          <div className=\"messagesRead\">\n            {this.renderMessages()}\n          </div>\n          <div className=\"messagesSendArea\">\n            <button className=\"mobile openPlayerList\">Plyrs</button>\n            <form onSubmit={this.sendMessage.bind(this)}>\n              <input type=\"text\" ref=\"messageInput\" className=\"messageEnter\" placeholder=\"Enter chat here...\"\n                maxLength=\"100\"></input>\n              <button className=\"messageSend\" onClick={this.sendMessage.bind(this)}>Send</button>\n            </form>\n            <button className=\"mobile openChatMenu\">Menu</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Chat.propTypes = {\n  // This component gets the room to display through a React prop.\n  // We can use propTypes to indicate it is required\n//   chat: PropTypes.object.isRequired,\n// };\n\nexport default createContainer(() => {\n  return {\n    currentUser: Meteor.user(),\n    roomMessages: Messages.find({ room_id: gameRoomIdSelected.get() }, { sort: { createdAt: 1 } }).fetch(),\n    roomPlayers: Gamedata.find({ room_id: gameRoomIdSelected.get() }, {sort: { score: -1 } }).fetch()\n  };\n}, Chat);\n","import React, { Component, PropTypes } from 'react';\nimport ReactDOM from 'react-dom';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport { gameRoomIdSelected } from './App.jsx'\nimport {validateAnswer} from '/client/utilities.js';\n\nimport { Rooms } from '../api/rooms.js';\nimport { Games } from '../api/games.js';\nimport { Gamedata } from '../api/gamedata.js';\nimport Room from './Room.jsx';\n\nexport default class Game extends Component {\n  sendAnswer(event) {\n    event.preventDefault();\n    const answer = ReactDOM.findDOMNode(this.refs.answerInput).value.trim();\n    const roundNumber = Rooms.findOne({room_id: gameRoomIdSelected.get()}).round;\n    const acroLetters = Games.findOne({room_id: gameRoomIdSelected.get()}).roundletters[roundNumber - 1];\n    var checkedAnswer = validateAnswer(answer, acroLetters);\n    if (checkedAnswer === 1) {\n      var failMessage = \"Not feeling inspired?\"\n      $(\".submittedInfo\").css(\"color\", \"red\");\n      $(\".submittedInfo\").text(failMessage)\n    } else if (checkedAnswer === 2) {\n      var failMessage = \"Your acro should have \" + acroLetters.length + \" words...\"\n      $(\".submittedInfo\").css(\"color\", \"red\");\n      $(\".submittedInfo\").text(failMessage)\n    } else if (checkedAnswer === 3) {\n      var failMessage = \"Check your letters...\"\n      $(\".submittedInfo\").css(\"color\", \"red\");\n      $(\".submittedInfo\").text(failMessage)\n    } else {\n      $(\".submittedInfo\").css(\"color\", \"green\");\n      Meteor.call('gamedata.postAnswer', gameRoomIdSelected.get(), this.props.currentUser.username, checkedAnswer);\n      var submitTime = Gamedata.findOne({room_id: gameRoomIdSelected.get(), user_id: this.props.currentUser.username}).finalAnswerTime\n      $(\".submittedInfo\").text(\"Submitted: \" + submitTime + \"s\");\n    }\n  }\n\n  render() {\n    if (this.props.selectedRoom) {\n      var currentRound = this.props.selectedRoom.round;\n      var currentSubround = this.props.selectedRoom.subround;\n      if (currentSubround === \"Waiting for players\") {\n        console.log(this.props.gamedata.length)\n        if (this.props.gamedata.length < 2) { // number of players needed to start game\n          $(\".gamestate\").hide();\n          $(\".waitingForPlayers\").show();\n        } else {\n          Meteor.call('games.init', gameRoomIdSelected.get(), );\n        }\n      } else {\n        $(\".gamestate\").hide();\n        if (currentSubround === \"Waiting for players\") {\n          Meteor.call('games.init', gameRoomIdSelected.get(), );\n        } else if (currentSubround === \"Get ready\") {\n          $(\".gamestate\").hide();\n          $(\".getReady\").show();\n          $(\".submittedInfo\").text(\"\")\n          $(\".answerEnter\").value = \"\";\n          Meteor.call('games.getready', gameRoomIdSelected.get(), );\n        } else if (currentSubround === \"Play\") {\n          $(\".gamestate\").hide();\n          $(\".play\").show();\n          // flip the letters\n          if (this.props.gameInfo.turnLetters === true) {\n            $(\".currentLetters\").textillate({\n              selector: '.texts',\n              initialDelay: 0,\n              autoStart: true,\n              in: {\n                effect: 'flipInY',\n                delayScale: 1.5,\n                delay: 800,\n              },\n              callback: function () {\n                //Meteor.call('games.letterFlipFlagOff', gameRoomIdSelected.get());\n              },\n              type: 'char'\n            });\n          }\n          var roundSeconds = this.props.gameInfo.roundtimes[currentRound - 1];\n          Meteor.call('games.play', gameRoomIdSelected.get(), roundSeconds);\n          if (this.props.gameInfo.playStartAnswering === true) {\n            $(\".gameTimer\").css(\"visibility\", \"visible\");\n          } else {\n            $(\".gameTimer\").css(\"visibility\", \"hidden\");\n          }\n          if (this.props.gameInfo.showAnswerForm === true) {\n            $(\".answerForm\").css(\"visibility\", \"visible\");\n          } else {\n            $(\".answerForm\").css(\"visibility\", \"hidden\").val(\"\");\n          }\n        } else if (currentSubround === \"Vote\") {\n          $(\".gamestate\").hide();\n          $(\".vote\").show();\n          Meteor.call('games.vote', gameRoomIdSelected.get());\n        } else if (currentSubround === \"Results\") {\n          $(\".gamestate\").hide();\n          $(\".results\").show();\n          Meteor.call('games.results', gameRoomIdSelected.get());\n        } else if (currentSubround === \"Final results\") {\n          $(\".gamestate\").hide();\n          $(\".finalresults\").show();\n          Meteor.call('games.finalresults', gameRoomIdSelected.get());\n        }\n      }\n    }\n    return (\n      <div>\n        <div className=\"gamestate waitingForPlayers\">\n          <div>Waiting for at least 3 players...</div>\n        </div>\n        <div className=\"gamestate getReady\">\n          <div className=\"gameTop\">\n            <div className=\"roundInfo\">\n              Round {this.props.selectedRoom ? this.props.selectedRoom.round : \"\"} of&nbsp;\n              {this.props.gameInfo ? this.props.gameInfo.roundletters.length : \"\"}\n            </div>\n            <div className=\"gameTimer\"></div>\n          </div>\n          <div className=\"gameMiddle\">\n            <div className=\"getReadyText\">Get ready...</div>\n          </div>\n        </div>\n        <div className=\"gamestate play\">\n          <div className=\"gameTop\">\n            <div className=\"roundInfo\">\n              Round {this.props.selectedRoom ? this.props.selectedRoom.round : \"\"} of&nbsp;\n              {this.props.gameInfo ? this.props.gameInfo.roundletters.length : \"\"}\n            </div>\n            <div className=\"gameTimer\">{this.props.gameInfo ? this.props.gameInfo.timerSeconds : 0}</div>\n          </div>\n          <div className=\"gameMiddle\">\n            <div className=\"numberSubmitted\">0 of 3 Answers Submitted</div>\n            <div className=\"categoryAndLetters\">\n              <div className=\"currentCat\"><span className=\"catWord\">Category:</span> {this.props.gameInfo ? this.props.gameInfo.roundcategories[currentRound - 1] : \"\"}</div>\n              <div className=\"currentLetters\">{this.props.gameInfo ? this.props.gameInfo.roundletters[currentRound - 1] : \"\"}</div>\n            </div>\n            <div className=\"submittedInfo\"></div>\n          </div>\n          <div className=\"gameBottom\">\n            <form className=\"answerForm\">\n              <input type=\"text\" ref=\"answerInput\" className=\"answerEnter\" placeholder=\"Enter acro here...\"\n                maxLength=\"70\"></input>\n              <button className=\"answerSend\" onClick={this.sendAnswer.bind(this)}>Play</button>\n            </form>\n          </div>\n\n        </div>\n        <div className=\"gamestate vote\">\n          Now vote!\n        </div>\n        <div className=\"gamestate results\">\n          The results!\n        </div>\n        <div className=\"gamestate finalresults\">\n          Final game results!\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default createContainer(() => {\n  //var userRoom = Meteor.user().currentRoom;\n  return {\n    currentUser: Meteor.user(),\n    selectedRoom: Rooms.findOne({ room_id: gameRoomIdSelected.get() }),\n    gameInfo: Games.findOne({room_id: gameRoomIdSelected.get()}) ? Games.findOne({room_id: gameRoomIdSelected.get()}) : \"\",\n    gamedata: Gamedata.find({room_id: gameRoomIdSelected.get()}).fetch(),\n  };\n}, Game);\n\n// Game.propTypes = {\n//   // This component gets the game to display through a React prop.\n//   // We can use propTypes to indicate it is required\n//   game: PropTypes.object.isRequired,\n// };\n","import React, { Component, PropTypes } from 'react';\nimport { Gamedata } from '../api/gamedata.js';\n\n// Room component - represents a single room item\nexport default class Room extends Component {\n  render() {\n    return (<li><button className=\"roomSelect\" data-room={this.props.room.room_id} onClick={this.props.updateRoom}>Join</button>\n        <span className=\"roomlistTitle\">{this.props.room.displayName}</span>\n        <span className=\"roomlistRound\"> Rnd: {this.props.room.round}</span>\n        <span className=\"roomlistSubround\"> ({this.props.room.subround})</span>\n        <span className=\"roomlistPlayers\"> Players: {Gamedata.find({room_id: this.props.room.room_id }).fetch().length}</span></li>\n    );\n  }\n}\n\nRoom.propTypes = {\n  // This component gets the room to display through a React prop.\n  // We can use propTypes to indicate it is required\n  room: PropTypes.object.isRequired,\n};\n\n"]}}]