[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nAccounts = Package['accounts-base'].Accounts;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nmoment = Package['momentjs:moment'].moment;\nlivestamp = Package['copleykj:livestamp'].livestamp;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"template.main.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                 //\n// client/template.main.js                                                                                         //\n//                                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                   //\n                                                                                                                   // 1\nTemplate.body.addContent((function() {                                                                             // 2\n  var view = this;                                                                                                 // 3\n  return HTML.Raw('<div id=\"render-target\"></div>');                                                               // 4\n}));                                                                                                               // 5\nMeteor.startup(Template.body.renderToDocument);                                                                    // 6\n                                                                                                                   // 7\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"utilities.js\":function(){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                 //\n// client/utilities.js                                                                                             //\n//                                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                   //\n                                                                                                                   //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"main.jsx\":[\"react\",\"meteor/meteor\",\"react-dom\",\"meteor/momentjs:moment\",\"../imports/startup/accounts-config.js\",\"./utilities.js\",\"../imports/ui/App.jsx\",function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                 //\n// client/main.jsx                                                                                                 //\n//                                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                   //\nvar React;module.import('react',{\"default\":function(v){React=v}});var Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var render;module.import('react-dom',{\"render\":function(v){render=v}});var moment;module.import('meteor/momentjs:moment',{\"moment\":function(v){moment=v}});module.import('../imports/startup/accounts-config.js');module.import('./utilities.js');var App;module.import('../imports/ui/App.jsx',{\"default\":function(v){App=v}});\n                                                                                                                   // 2\n                                                                                                                   // 3\n                                                                                                                   // 4\n                                                                                                                   //\n                                                                                                                   // 6\n                                                                                                                   // 7\n                                                                                                                   // 8\n                                                                                                                   //\nMeteor.startup(function () {                                                                                       // 10\n  render(React.createElement(App, null), document.getElementById('render-target'));                                // 11\n});                                                                                                                // 12\n                                                                                                                   //\nMeteor.subscribe(\"userData\");                                                                                      // 14\n                                                                                                                   //\n// DB room setup                                                                                                   //\n// db.rooms.insert({ room_id: \"FamilyRoom\", displayName: \"Family Room\", family: true, round: 0, subround: \"Waiting for players\", players: [] });\n// db.rooms.insert({ room_id: \"HotTub\", displayName: \"Hot Tub\", family: false, round: 0, subround: \"Waiting for players\", players: [] });\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"imports\":{\"api\":{\"chats.js\":[\"meteor/mongo\",function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                 //\n// imports/api/chats.js                                                                                            //\n//                                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                   //\nmodule.export({Chats:function(){return Chats}});var Mongo;module.import('meteor/mongo',{\"Mongo\":function(v){Mongo=v}});\n                                                                                                                   //\nvar Chats = new Mongo.Collection('chats');                                                                         // 3\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"games.js\":[\"meteor/meteor\",\"meteor/mongo\",\"meteor/check\",\"../api/rooms.js\",function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                 //\n// imports/api/games.js                                                                                            //\n//                                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                   //\nmodule.export({Games:function(){return Games}});var Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var Mongo;module.import('meteor/mongo',{\"Mongo\":function(v){Mongo=v}});var check;module.import('meteor/check',{\"check\":function(v){check=v}});var Rooms;module.import('../api/rooms.js',{\"Rooms\":function(v){Rooms=v}});\n                                                                                                                   // 2\n                                                                                                                   // 3\n                                                                                                                   //\n                                                                                                                   // 5\nvar Games = new Mongo.Collection('games');                                                                         // 6\n                                                                                                                   //\n// game config                                                                                                     //\nacroLettersPool = \"AAAAAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBBBBBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCDDDDDDDDDDDDDDDDDDDDDDDDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFFFFFFFFFFFFFFFFFFFFFFFFGGGGGGGGGGGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHIIIIIIIIIIIIIIIIIIIIIIJJJJJKKKKKKLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOPPPPPPPPPPPPPPPPPPPPPPPPQQQQRRRRRRRRRRRRRRRRRRSSSSSSSSSSSSSSSSSSSSSSSSTTTTTTTTTTTTTTTTTTTTTTTTUUUUUUUVVVVVVVVVVVVWWWWWWWWWWWWXYYYYYYYYYYYYZZZZ\";\n                                                                                                                   //\nacroCategories = [\"General\", \"Sports\", \"Food\", \"Movies\", \"Television\", \"History\", \"Music\", \"Art\", \"Animals\", \"Science\", \"Politics\", \"Fashion\", \"Books\", \"Travel\", \"Celebrities\", \"Romance\", \"Technology\", \"Family\", \"School\", \"Nature\", \"Health\", \"Current Events\", \"Work\", \"Give Some Advice\", \"Definitions\", \"Sayings\", \"Exercise/Fitness\", \"Baby's First Sentence\", \"My Greatest Fear\", \"In the Year 3000\", \"Weird Laws\", \"I Was Late Because...\", \"Odd College Majors\", \"My Biggest Secret\", \"New Ice Cream Flavors\", \"Bad Restaurant Names\", \"I Got Fired Because...\", \"Odd Product Slogans\", \"Bad Habits\", \"Science Fiction\", \"Strange Trends\", \"Embarrassing Moments\", \"CAVEMAN SAY...\", \"Superhero/villain Names\", \"Horror Movie Titles\", \"In a Perfect World...\", \"Short Poetry\", \"New Year's Resolutions\", \"My Dream Last Night\", \"Odd Tombstone Messages\", \"Awful First Dates\", \"Odd Holiday Customs\", \"The Holidays\", \"Short Ghost Stories\", \"... Said No One Ever\", \"Fairy/Folk Tales\"];\n                                                                                                                   //\nroundsToPlay = 8;                                                                                                  // 23\nroundTimes = [50, 60, 60, 80, 50, 60, 60, 80];                                                                     // 24\nroundAcroLength = [3, 4, 5, 6, 3, 4, 5, 6];                                                                        // 25\n                                                                                                                   //\n////////////                                                                                                       //\n                                                                                                                   //\nMeteor.methods({                                                                                                   // 29\n  'games.init': function () {                                                                                      // 30\n    function gamesInit(roomId) {                                                                                   // 29\n      if (Games.find({ room_id: roomId }).fetch().length === 0) {                                                  // 31\n        var roundletters;                                                                                          // 32\n        var acroPoolLength = acroLettersPool.length;                                                               // 33\n        var catPoolLength = acroCategories.length;                                                                 // 34\n        var acroPlayArray = [];                                                                                    // 35\n        var acroCatArray = [];                                                                                     // 36\n        for (var i = 0; i < roundsToPlay; i++) {                                                                   // 37\n          var acroToPlay = \"\";                                                                                     // 38\n          for (var j = 0; j < roundAcroLength[i]; j++) {                                                           // 39\n            acroToPlay = acroToPlay + acroLettersPool[Math.floor(Math.random() * acroPoolLength)];                 // 40\n          }                                                                                                        // 41\n          acroPlayArray.push(acroToPlay);                                                                          // 42\n          acroCatArray.push(acroCategories[Math.floor(Math.random() * catPoolLength)]);                            // 43\n        }                                                                                                          // 44\n        Games.insert({                                                                                             // 45\n          room_id: roomId,                                                                                         // 46\n          roundletters: acroPlayArray,                                                                             // 47\n          roundcategories: acroCatArray,                                                                           // 48\n          roundtimes: roundTimes                                                                                   // 49\n        });                                                                                                        // 45\n        Rooms.update({ room_id: roomId }, {                                                                        // 51\n          $set: { round: 1, subround: \"Get ready\" }                                                                // 52\n        });                                                                                                        // 51\n      }                                                                                                            // 55\n    }                                                                                                              // 56\n                                                                                                                   //\n    return gamesInit;                                                                                              // 29\n  }(),                                                                                                             // 29\n  'games.getready': function () {                                                                                  // 58\n    function gamesGetready(roomId) {}                                                                              // 29\n                                                                                                                   //\n    return gamesGetready;                                                                                          // 29\n  }()                                                                                                              // 29\n});                                                                                                                // 29\n                                                                                                                   //\n// Games.find({ room_id: roomId }).remove({});                                                                     //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"messages.js\":[\"meteor/meteor\",\"meteor/mongo\",\"meteor/check\",function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                 //\n// imports/api/messages.js                                                                                         //\n//                                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                   //\nmodule.export({Messages:function(){return Messages}});var Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var Mongo;module.import('meteor/mongo',{\"Mongo\":function(v){Mongo=v}});var check;module.import('meteor/check',{\"check\":function(v){check=v}});\n                                                                                                                   // 2\n                                                                                                                   // 3\n                                                                                                                   //\nvar Messages = new Mongo.Collection('messages');                                                                   // 5\n                                                                                                                   //\nMeteor.methods({                                                                                                   // 7\n  'messages.msgPlayer': function () {                                                                              // 8\n    function messagesMsgPlayer(roomId, name, verb, roomName) {                                                     // 7\n      Messages.insert({                                                                                            // 9\n        user_id: \"<PartyHost>\",                                                                                    // 10\n        room_id: roomId,                                                                                           // 11\n        message: name + verb + roomName,                                                                           // 12\n        createdAt: new Date()                                                                                      // 13\n      });                                                                                                          // 9\n    }                                                                                                              // 15\n                                                                                                                   //\n    return messagesMsgPlayer;                                                                                      // 7\n  }(),                                                                                                             // 7\n  'messages.postMessage': function () {                                                                            // 17\n    function messagesPostMessage(name, roomId, message) {                                                          // 7\n      Messages.insert({                                                                                            // 18\n        user_id: name,                                                                                             // 19\n        room_id: roomId,                                                                                           // 20\n        message: message,                                                                                          // 21\n        createdAt: new Date() });                                                                                  // 22\n    }                                                                                                              // 23\n                                                                                                                   //\n    return messagesPostMessage;                                                                                    // 7\n  }(),                                                                                                             // 7\n  'messages.deleteOld': function () {                                                                              // 25\n    function messagesDeleteOld(messageId) {                                                                        // 7\n      Messages.remove({ _id: messageId });                                                                         // 26\n    }                                                                                                              // 27\n                                                                                                                   //\n    return messagesDeleteOld;                                                                                      // 7\n  }()                                                                                                              // 7\n});                                                                                                                // 7\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"rooms.js\":[\"meteor/meteor\",\"meteor/mongo\",\"meteor/check\",function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                 //\n// imports/api/rooms.js                                                                                            //\n//                                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                   //\nmodule.export({Rooms:function(){return Rooms}});var Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var Mongo;module.import('meteor/mongo',{\"Mongo\":function(v){Mongo=v}});var check;module.import('meteor/check',{\"check\":function(v){check=v}});\n                                                                                                                   // 2\n                                                                                                                   // 3\n                                                                                                                   //\nvar Rooms = new Mongo.Collection('rooms');                                                                         // 5\n                                                                                                                   //\nMeteor.methods({                                                                                                   // 7\n  'rooms.addPlayer': function () {                                                                                 // 8\n    function roomsAddPlayer(roomId, playerAdding) {                                                                // 7\n      Rooms.update(roomId, {                                                                                       // 9\n        $addToSet: { players: playerAdding }                                                                       // 10\n      });                                                                                                          // 9\n    }                                                                                                              // 12\n                                                                                                                   //\n    return roomsAddPlayer;                                                                                         // 7\n  }(),                                                                                                             // 7\n  'rooms.removePlayer': function () {                                                                              // 14\n    function roomsRemovePlayer(roomId, playerRemoving) {                                                           // 7\n      Rooms.update(roomId, {                                                                                       // 15\n        $pull: { players: playerRemoving                                                                           // 16\n        } }, { multi: true });                                                                                     // 16\n    }                                                                                                              // 18\n                                                                                                                   //\n    return roomsRemovePlayer;                                                                                      // 7\n  }()                                                                                                              // 7\n});                                                                                                                // 7\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"startup\":{\"accounts-config.js\":[\"meteor/accounts-base\",function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                 //\n// imports/startup/accounts-config.js                                                                              //\n//                                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                   //\nvar Accounts;module.import('meteor/accounts-base',{\"Accounts\":function(v){Accounts=v}});                           // 1\n                                                                                                                   //\nAccounts.ui.config({                                                                                               // 3\n    passwordSignupFields: 'USERNAME_AND_EMAIL'                                                                     // 4\n});                                                                                                                // 3\n                                                                                                                   //\nAccounts.onLogin(function (user) {                                                                                 // 7\n    $(\".mainScreen\").show();                                                                                       // 8\n    //App.showPrivate();                                                                                           //\n});                                                                                                                // 10\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]},\"ui\":{\"AccountsUIWrapper.jsx\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",\"react\",\"react-dom\",\"meteor/templating\",\"meteor/blaze\",function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                 //\n// imports/ui/AccountsUIWrapper.jsx                                                                                //\n//                                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                   //\nvar _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{\"default\":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{\"default\":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{\"default\":function(v){_inherits=v}});var React,Component;module.import('react',{\"default\":function(v){React=v},\"Component\":function(v){Component=v}});var ReactDOM;module.import('react-dom',{\"default\":function(v){ReactDOM=v}});var Template;module.import('meteor/templating',{\"Template\":function(v){Template=v}});var Blaze;module.import('meteor/blaze',{\"Blaze\":function(v){Blaze=v}});\n                                                                                                                   //\n                                                                                                                   //\n                                                                                                                   // 1\n                                                                                                                   // 2\n                                                                                                                   // 3\n                                                                                                                   // 4\n                                                                                                                   //\nvar AccountsUIWrapper = function (_Component) {                                                                    //\n  _inherits(AccountsUIWrapper, _Component);                                                                        //\n                                                                                                                   //\n  function AccountsUIWrapper() {                                                                                   //\n    _classCallCheck(this, AccountsUIWrapper);                                                                      //\n                                                                                                                   //\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));                                    //\n  }                                                                                                                //\n                                                                                                                   //\n  AccountsUIWrapper.prototype.componentDidMount = function () {                                                    //\n    function componentDidMount() {                                                                                 //\n      // Use Meteor Blaze to render login buttons                                                                  //\n      this.view = Blaze.render(Template.loginButtons, ReactDOM.findDOMNode(this.refs.container));                  // 9\n    }                                                                                                              // 11\n                                                                                                                   //\n    return componentDidMount;                                                                                      //\n  }();                                                                                                             //\n                                                                                                                   //\n  AccountsUIWrapper.prototype.componentWillUnmount = function () {                                                 //\n    function componentWillUnmount() {                                                                              //\n      // Clean up Blaze view                                                                                       //\n      Blaze.remove(this.view);                                                                                     // 14\n    }                                                                                                              // 15\n                                                                                                                   //\n    return componentWillUnmount;                                                                                   //\n  }();                                                                                                             //\n                                                                                                                   //\n  AccountsUIWrapper.prototype.render = function () {                                                               //\n    function render() {                                                                                            //\n      // Just render a placeholder container that will be filled in                                                //\n      return React.createElement('span', { ref: 'container' });                                                    // 18\n    }                                                                                                              // 19\n                                                                                                                   //\n    return render;                                                                                                 //\n  }();                                                                                                             //\n                                                                                                                   //\n  return AccountsUIWrapper;                                                                                        //\n}(Component);                                                                                                      //\n                                                                                                                   //\nmodule.export(\"default\",exports.default=(AccountsUIWrapper));                                                      //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"App.jsx\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",\"react\",\"./AccountsUIWrapper.jsx\",\"meteor/react-meteor-data\",\"meteor/reactive-var\",\"../api/rooms.js\",\"../api/chats.js\",\"../api/messages.js\",\"../api/games.js\",\"./Room.jsx\",\"./Chat.jsx\",\"./Game.jsx\",function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                 //\n// imports/ui/App.jsx                                                                                              //\n//                                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                   //\nmodule.export({gameRoomIdSelected:function(){return gameRoomIdSelected}});var _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{\"default\":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{\"default\":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{\"default\":function(v){_inherits=v}});var React,Component;module.import('react',{\"default\":function(v){React=v},\"Component\":function(v){Component=v}});var AccountsUIWrapper;module.import('./AccountsUIWrapper.jsx',{\"default\":function(v){AccountsUIWrapper=v}});var createContainer;module.import('meteor/react-meteor-data',{\"createContainer\":function(v){createContainer=v}});var ReactiveVar;module.import('meteor/reactive-var',{\"ReactiveVar\":function(v){ReactiveVar=v}});var Rooms;module.import('../api/rooms.js',{\"Rooms\":function(v){Rooms=v}});var Chats;module.import('../api/chats.js',{\"Chats\":function(v){Chats=v}});var Messages;module.import('../api/messages.js',{\"Messages\":function(v){Messages=v}});var Games;module.import('../api/games.js',{\"Games\":function(v){Games=v}});var Room;module.import('./Room.jsx',{\"default\":function(v){Room=v}});var Chat;module.import('./Chat.jsx',{\"default\":function(v){Chat=v}});var Game;module.import('./Game.jsx',{\"default\":function(v){Game=v}});\n                                                                                                                   //\n                                                                                                                   //\n                                                                                                                   // 1\n                                                                                                                   // 2\n                                                                                                                   // 3\n                                                                                                                   // 4\nvar gameRoomIdSelected = new ReactiveVar(\"\");                                                                      // 5\n                                                                                                                   //\n                                                                                                                   // 7\n                                                                                                                   // 8\n                                                                                                                   // 9\n                                                                                                                   // 10\n                                                                                                                   //\n                                                                                                                   // 12\n                                                                                                                   // 13\n                                                                                                                   // 14\n                                                                                                                   //\n// App component - represents the whole app                                                                        //\n                                                                                                                   //\nvar App = function (_Component) {                                                                                  //\n  _inherits(App, _Component);                                                                                      //\n                                                                                                                   //\n  function App() {                                                                                                 //\n    _classCallCheck(this, App);                                                                                    //\n                                                                                                                   //\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));                                    //\n  }                                                                                                                //\n                                                                                                                   //\n  App.prototype.userRouting = function () {                                                                        //\n    function userRouting() {                                                                                       //\n      if (this.props.currentUser) {                                                                                // 22\n        $(\".frontSignin\").hide();                                                                                  // 23\n      } else {                                                                                                     // 24\n        $(\".frontSignin\").show();                                                                                  // 25\n        $(\".mainScreen, .stats, .chat, .settings\").hide();                                                         // 26\n      }                                                                                                            // 27\n      $(\".acroparty\").show();                                                                                      // 28\n    }                                                                                                              // 29\n                                                                                                                   //\n    return userRouting;                                                                                            //\n  }();                                                                                                             //\n                                                                                                                   //\n  // rooms                                                                                                         //\n                                                                                                                   //\n                                                                                                                   //\n  App.prototype.gotoRoom = function () {                                                                           //\n    function gotoRoom(e) {                                                                                         //\n      var theroom = $(e.target).attr(\"data-room\");                                                                 // 33\n      gameRoomIdSelected.set(theroom);                                                                             // 34\n      var roomToJoin = Rooms.findOne({ room_id: theroom });                                                        // 35\n      Meteor.call('rooms.addPlayer', roomToJoin._id, this.props.currentUser.username);                             // 36\n      $(\".mainScreen, .popup\").hide();                                                                             // 37\n      $(\".chat\").attr(\"id\", theroom).show();                                                                       // 38\n      var enteringRoomVerb = [\" appears in the \", \" saunters into the \", \" walks into the \", \" struts into the \", \" sprints into the \", \" apparates into the \", \" materializes in the \", \" mysteriously arises inside the \", \" seems to have entered our \", \" ridiculously enters the \", \" crashed through the window into the \", \" is suddenly in the \", \" scoots on in to the \", \" politely enters the \"];\n      var randomVerb = enteringRoomVerb[Math.floor(Math.random() * enteringRoomVerb.length)];                      // 44\n      Meteor.call('messages.msgPlayer', gameRoomIdSelected.get(), this.props.currentUser.username, randomVerb, Rooms.findOne({ room_id: gameRoomIdSelected.get() }).displayName + \"...\");\n    }                                                                                                              // 47\n                                                                                                                   //\n    return gotoRoom;                                                                                               //\n  }();                                                                                                             //\n                                                                                                                   //\n  App.prototype.renderRooms = function () {                                                                        //\n    function renderRooms() {                                                                                       //\n      var _this2 = this;                                                                                           // 48\n                                                                                                                   //\n      return this.props.rooms.map(function (room) {                                                                // 49\n        return React.createElement(Room, { key: room._id, room: room, updateRoom: _this2.gotoRoom.bind(_this2) });\n      });                                                                                                          // 49\n    }                                                                                                              // 52\n                                                                                                                   //\n    return renderRooms;                                                                                            //\n  }();                                                                                                             //\n                                                                                                                   //\n  App.prototype.renderRoomId = function () {                                                                       //\n    function renderRoomId() {                                                                                      //\n      return gameRoomIdSelected.get();                                                                             // 54\n      // return this.props.currentUser.currentRoom                                                                 //\n    }                                                                                                              // 56\n                                                                                                                   //\n    return renderRoomId;                                                                                           //\n  }();                                                                                                             //\n                                                                                                                   //\n  App.prototype.roomName = function () {                                                                           //\n    function roomName() {                                                                                          //\n      if (this.props.selectedRoom) {                                                                               // 58\n        var theRoomName = this.props.selectedRoom.displayName;                                                     // 59\n      } else {                                                                                                     // 60\n        var theRoomName = \"\";                                                                                      // 61\n      }                                                                                                            // 62\n      return theRoomName;                                                                                          // 63\n    }                                                                                                              // 64\n                                                                                                                   //\n    return roomName;                                                                                               //\n  }();                                                                                                             //\n                                                                                                                   //\n  App.prototype.roomPlayers = function () {                                                                        //\n    function roomPlayers() {                                                                                       //\n      if (this.props.selectedRoom) {                                                                               // 66\n        var theRoomPlayers = this.props.selectedRoom.players;                                                      // 67\n      } else {                                                                                                     // 68\n        var theRoomPlayers = [];                                                                                   // 69\n      }                                                                                                            // 70\n      return theRoomPlayers;                                                                                       // 71\n    }                                                                                                              // 72\n                                                                                                                   //\n    return roomPlayers;                                                                                            //\n  }();                                                                                                             //\n                                                                                                                   //\n  App.prototype.exitRoom = function () {                                                                           //\n    function exitRoom(e) {                                                                                         //\n      Meteor.call('rooms.removePlayer', this.props.selectedRoom._id, this.props.currentUser.username);             // 74\n      $(\".popup\").hide();                                                                                          // 75\n      $(\"#\" + gameRoomIdSelected.get()).hide();                                                                    // 76\n      gameRoomIdSelected.set(\"\");                                                                                  // 77\n      $(\".chat\").removeAttr(\"id\");                                                                                 // 78\n      $(\".mainScreen\").show();                                                                                     // 79\n    }                                                                                                              // 80\n                                                                                                                   //\n    return exitRoom;                                                                                               //\n  }();                                                                                                             //\n                                                                                                                   //\n  // stats                                                                                                         //\n                                                                                                                   //\n                                                                                                                   //\n  App.prototype.closePopup = function () {                                                                         //\n    function closePopup(e) {                                                                                       //\n      $(\".popup\").hide();                                                                                          // 84\n    }                                                                                                              // 85\n                                                                                                                   //\n    return closePopup;                                                                                             //\n  }();                                                                                                             //\n                                                                                                                   //\n  App.prototype.openStats = function () {                                                                          //\n    function openStats(e) {                                                                                        //\n      $(\".settings\").hide();                                                                                       // 88\n      $(\".stats\").show();                                                                                          // 89\n    }                                                                                                              // 90\n                                                                                                                   //\n    return openStats;                                                                                              //\n  }();                                                                                                             //\n                                                                                                                   //\n  App.prototype.renderUsername = function () {                                                                     //\n    function renderUsername() {                                                                                    //\n      if (this.props.currentUser) {                                                                                // 93\n        if (this.props.currentUser.username) {                                                                     // 94\n          return React.createElement(                                                                              // 95\n            'span',                                                                                                // 95\n            null,                                                                                                  // 95\n            this.props.currentUser.username                                                                        // 95\n          );                                                                                                       // 95\n        } else {                                                                                                   // 96\n          return \"\";                                                                                               // 97\n        }                                                                                                          // 98\n      } else {                                                                                                     // 99\n        return \"\";                                                                                                 // 100\n      }                                                                                                            // 101\n    }                                                                                                              // 102\n                                                                                                                   //\n    return renderUsername;                                                                                         //\n  }();                                                                                                             //\n                                                                                                                   //\n  App.prototype.renderLifePoints = function () {                                                                   //\n    function renderLifePoints() {                                                                                  //\n      // this.props.currentUser ? <span>{ this.props.currentUser.stats.lifetimePoints }</span> : '';               //\n      if (this.props.currentUser) {                                                                                // 106\n        if (this.props.currentUser.stats) {                                                                        // 107\n          return React.createElement(                                                                              // 108\n            'span',                                                                                                // 108\n            null,                                                                                                  // 108\n            this.props.currentUser.stats.lifetimePoints                                                            // 108\n          );                                                                                                       // 108\n        } else {                                                                                                   // 109\n          return \"\";                                                                                               // 110\n        }                                                                                                          // 111\n      } else {                                                                                                     // 112\n        return \"\";                                                                                                 // 113\n      }                                                                                                            // 114\n    }                                                                                                              // 115\n                                                                                                                   //\n    return renderLifePoints;                                                                                       //\n  }();                                                                                                             //\n                                                                                                                   //\n  //settings                                                                                                       //\n                                                                                                                   //\n                                                                                                                   //\n  App.prototype.openSettings = function () {                                                                       //\n    function openSettings(e) {                                                                                     //\n      $(\".stats\").hide();                                                                                          // 119\n      $(\".settings\").show();                                                                                       // 120\n    }                                                                                                              // 121\n                                                                                                                   //\n    return openSettings;                                                                                           //\n  }();                                                                                                             //\n                                                                                                                   //\n  App.prototype.render = function () {                                                                             //\n    function render() {                                                                                            //\n      return React.createElement(                                                                                  // 124\n        'div',                                                                                                     // 126\n        { className: 'acroparty' },                                                                                // 126\n        this.userRouting(),                                                                                        // 127\n        React.createElement(                                                                                       // 128\n          'section',                                                                                               // 128\n          { className: 'frontSignin', style: { \"display\": \"none\" } },                                              // 128\n          React.createElement(                                                                                     // 129\n            'h1',                                                                                                  // 129\n            null,                                                                                                  // 129\n            'Welcome to AcroParty!'                                                                                // 129\n          ),                                                                                                       // 129\n          React.createElement(AccountsUIWrapper, null)                                                             // 130\n        ),                                                                                                         // 128\n        React.createElement(                                                                                       // 133\n          'section',                                                                                               // 133\n          { className: 'mainScreen' },                                                                             // 133\n          React.createElement(                                                                                     // 134\n            'header',                                                                                              // 134\n            null,                                                                                                  // 134\n            React.createElement(                                                                                   // 135\n              'h1',                                                                                                // 135\n              null,                                                                                                // 135\n              'AcroParty'                                                                                          // 135\n            )                                                                                                      // 135\n          ),                                                                                                       // 134\n          React.createElement(                                                                                     // 137\n            'div',                                                                                                 // 137\n            { className: 'welcomeText' },                                                                          // 137\n            'Welcome, ',                                                                                           // 137\n            this.renderUsername(),                                                                                 // 138\n            '! Please select a room to start playing...'                                                           // 137\n          ),                                                                                                       // 137\n          React.createElement(                                                                                     // 140\n            'div',                                                                                                 // 140\n            { className: 'roomList' },                                                                             // 140\n            React.createElement(                                                                                   // 141\n              'div',                                                                                               // 141\n              { className: 'roomListTitle' },                                                                      // 141\n              'Rooms'                                                                                              // 141\n            ),                                                                                                     // 141\n            this.renderRooms()                                                                                     // 142\n          ),                                                                                                       // 140\n          React.createElement(                                                                                     // 144\n            'div',                                                                                                 // 144\n            { className: 'mainButtons' },                                                                          // 144\n            React.createElement(                                                                                   // 145\n              'button',                                                                                            // 145\n              { className: 'mainButton', onClick: this.openStats.bind(this) },                                     // 145\n              'Stats'                                                                                              // 145\n            ),                                                                                                     // 145\n            React.createElement(                                                                                   // 146\n              'button',                                                                                            // 146\n              { className: 'mainButton', onClick: this.openSettings.bind(this) },                                  // 146\n              'Settings'                                                                                           // 146\n            )                                                                                                      // 146\n          )                                                                                                        // 144\n        ),                                                                                                         // 133\n        React.createElement(                                                                                       // 150\n          'section',                                                                                               // 150\n          { className: 'chat' },                                                                                   // 150\n          React.createElement(                                                                                     // 151\n            'section',                                                                                             // 151\n            { className: 'gamePlay' },                                                                             // 151\n            React.createElement(Game, { roomId: this.renderRoomId(), roomName: this.roomName() })                  // 152\n          ),                                                                                                       // 151\n          React.createElement(Chat, { clickStats: this.openStats.bind(this), clickSettings: this.openSettings.bind(this),\n            roomName: this.roomName(), roomPlayers: this.roomPlayers(), exitRoom: this.exitRoom.bind(this),        // 156\n            roomId: this.renderRoomId() })                                                                         // 157\n        ),                                                                                                         // 150\n        React.createElement(                                                                                       // 160\n          'section',                                                                                               // 160\n          { className: 'stats popup' },                                                                            // 160\n          React.createElement(                                                                                     // 161\n            'div',                                                                                                 // 161\n            null,                                                                                                  // 161\n            'Life wins is ',                                                                                       // 161\n            this.renderLifePoints()                                                                                // 161\n          ),                                                                                                       // 161\n          React.createElement(                                                                                     // 162\n            'button',                                                                                              // 162\n            { className: 'popupButton', onClick: this.closePopup.bind(this) },                                     // 162\n            'Close'                                                                                                // 162\n          )                                                                                                        // 162\n        ),                                                                                                         // 160\n        React.createElement(                                                                                       // 165\n          'section',                                                                                               // 165\n          { className: 'settings popup' },                                                                         // 165\n          React.createElement(AccountsUIWrapper, null),                                                            // 166\n          React.createElement(                                                                                     // 167\n            'button',                                                                                              // 167\n            { className: 'popupButton', onClick: this.closePopup.bind(this) },                                     // 167\n            'Close'                                                                                                // 167\n          )                                                                                                        // 167\n        )                                                                                                          // 165\n      );                                                                                                           // 126\n    }                                                                                                              // 173\n                                                                                                                   //\n    return render;                                                                                                 //\n  }();                                                                                                             //\n                                                                                                                   //\n  return App;                                                                                                      //\n}(Component);                                                                                                      //\n                                                                                                                   //\nmodule.export(\"default\",exports.default=(App));                                                                    //\n                                                                                                                   //\n                                                                                                                   //\nmodule.export(\"default\",exports.default=(createContainer(function () {                                             // 176\n  //var userRoom = Meteor.user().currentRoom;                                                                      //\n  return {                                                                                                         // 178\n    currentUser: Meteor.user(),                                                                                    // 179\n    rooms: Rooms.find({}).fetch(),                                                                                 // 180\n    selectedRoom: Rooms.findOne({ room_id: gameRoomIdSelected.get() })                                             // 181\n  };                                                                                                               // 178\n}, App)));                                                                                                         // 183\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"Chat.jsx\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",\"react\",\"react-dom\",\"meteor/react-meteor-data\",\"./App.jsx\",\"../api/messages.js\",function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                 //\n// imports/ui/Chat.jsx                                                                                             //\n//                                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                   //\nvar _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{\"default\":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{\"default\":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{\"default\":function(v){_inherits=v}});var React,Component,PropTypes;module.import('react',{\"default\":function(v){React=v},\"Component\":function(v){Component=v},\"PropTypes\":function(v){PropTypes=v}});var ReactDOM;module.import('react-dom',{\"default\":function(v){ReactDOM=v}});var createContainer;module.import('meteor/react-meteor-data',{\"createContainer\":function(v){createContainer=v}});var gameRoomIdSelected;module.import('./App.jsx',{\"gameRoomIdSelected\":function(v){gameRoomIdSelected=v}});var Messages;module.import('../api/messages.js',{\"Messages\":function(v){Messages=v}});\n                                                                                                                   //\n                                                                                                                   //\n                                                                                                                   // 1\n                                                                                                                   // 2\n                                                                                                                   // 3\n                                                                                                                   // 4\n                                                                                                                   //\n                                                                                                                   // 6\n                                                                                                                   //\nvar ListMessages = function (_Component) {                                                                         //\n  _inherits(ListMessages, _Component);                                                                             //\n                                                                                                                   //\n  function ListMessages() {                                                                                        //\n    _classCallCheck(this, ListMessages);                                                                           //\n                                                                                                                   //\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));                                    //\n  }                                                                                                                //\n                                                                                                                   //\n  ListMessages.prototype.componentDidMount = function () {                                                         //\n    function componentDidMount() {                                                                                 //\n      var $this = $(ReactDOM.findDOMNode(this));                                                                   // 10\n      $(\".messagesRead\")[0].scrollTop = $(\".messagesRead\")[0].scrollHeight;                                        // 11\n    }                                                                                                              // 12\n                                                                                                                   //\n    return componentDidMount;                                                                                      //\n  }();                                                                                                             //\n                                                                                                                   //\n  ListMessages.prototype.render = function () {                                                                    //\n    function render() {                                                                                            //\n      return React.createElement(                                                                                  // 14\n        'li',                                                                                                      // 14\n        { className: this.props.author === \"<PartyHost>\" ? \"hostMessage\" : \"\" },                                   // 14\n        React.createElement(                                                                                       // 15\n          'span',                                                                                                  // 15\n          { className: 'authorMessage' },                                                                          // 15\n          React.createElement(                                                                                     // 15\n            'span',                                                                                                // 15\n            { className: 'messageAuthor' },                                                                        // 15\n            this.props.author,                                                                                     // 15\n            ':'                                                                                                    // 15\n          ),                                                                                                       // 15\n          ' ',                                                                                                     // 15\n          this.props.message                                                                                       // 15\n        ),                                                                                                         // 15\n        React.createElement('span', { className: 'messageTime', 'data-livestamp': this.props.timestamp })          // 16\n      );                                                                                                           // 14\n    }                                                                                                              // 18\n                                                                                                                   //\n    return render;                                                                                                 //\n  }();                                                                                                             //\n                                                                                                                   //\n  return ListMessages;                                                                                             //\n}(Component);                                                                                                      //\n                                                                                                                   //\nmodule.export(\"default\",exports.default=(ListMessages));                                                           //\n                                                                                                                   //\nvar ListItemPlayer = function (_Component2) {                                                                      //\n  _inherits(ListItemPlayer, _Component2);                                                                          //\n                                                                                                                   //\n  function ListItemPlayer() {                                                                                      //\n    _classCallCheck(this, ListItemPlayer);                                                                         //\n                                                                                                                   //\n    return _possibleConstructorReturn(this, _Component2.apply(this, arguments));                                   //\n  }                                                                                                                //\n                                                                                                                   //\n  ListItemPlayer.prototype.render = function () {                                                                  //\n    function render() {                                                                                            //\n      return React.createElement(                                                                                  // 23\n        'li',                                                                                                      // 23\n        { className: 'playerInList', 'data-playerInList': this.props.data },                                       // 23\n        this.props.data                                                                                            // 23\n      );                                                                                                           // 23\n    }                                                                                                              // 24\n                                                                                                                   //\n    return render;                                                                                                 //\n  }();                                                                                                             //\n                                                                                                                   //\n  return ListItemPlayer;                                                                                           //\n}(Component);                                                                                                      //\n                                                                                                                   //\nmodule.export(\"default\",exports.default=(ListItemPlayer));                                                         //\n                                                                                                                   //\nvar Chat = function (_Component3) {                                                                                //\n  _inherits(Chat, _Component3);                                                                                    //\n                                                                                                                   //\n  function Chat() {                                                                                                //\n    _classCallCheck(this, Chat);                                                                                   //\n                                                                                                                   //\n    return _possibleConstructorReturn(this, _Component3.apply(this, arguments));                                   //\n  }                                                                                                                //\n                                                                                                                   //\n  Chat.prototype.listPlayers = function () {                                                                       //\n    function listPlayers() {                                                                                       //\n      var playerListArray = this.props.roomPlayers;                                                                // 29\n      var playerListItems = playerListArray.map(function (name) {                                                  // 30\n        return React.createElement(                                                                                // 31\n          'li',                                                                                                    // 31\n          null,                                                                                                    // 31\n          'name'                                                                                                   // 31\n        );                                                                                                         // 31\n      });                                                                                                          // 32\n      return playerListItems;                                                                                      // 33\n    }                                                                                                              // 34\n                                                                                                                   //\n    return listPlayers;                                                                                            //\n  }();                                                                                                             //\n                                                                                                                   //\n  Chat.prototype.sendMessage = function () {                                                                       //\n    function sendMessage(event) {                                                                                  //\n      event.preventDefault();                                                                                      // 37\n      var message = ReactDOM.findDOMNode(this.refs.messageInput).value.trim();                                     // 38\n      if (message === \"\") {                                                                                        // 39\n        return;                                                                                                    // 39\n      } // blank messages don't send                                                                               // 39\n      Meteor.call('messages.postMessage', this.props.currentUser.username, gameRoomIdSelected.get(), message);     // 40\n      ReactDOM.findDOMNode(this.refs.messageInput).value = '';                                                     // 41\n      // delete old messages in room                                                                               //\n      if (this.props.roomMessages.length > 200) {                                                                  // 43\n        // 200 chat messages per room                                                                              //\n        var indexToTrim = this.props.roomMessages.length - 200;                                                    // 44\n        var oldestMessageTime = this.props.roomMessages[indexToTrim].createdAt;                                    // 45\n        var messagesToDelete = Messages.find({                                                                     // 46\n          room_id: gameRoomIdSelected.get(),                                                                       // 47\n          createdAt: { $lt: oldestMessageTime }                                                                    // 48\n        }).fetch();                                                                                                // 46\n        messagesToDelete.forEach(function (message) {                                                              // 50\n          Meteor.call('message.deleteOld', message._id);                                                           // 51\n        });                                                                                                        // 52\n      }                                                                                                            // 53\n    }                                                                                                              // 54\n                                                                                                                   //\n    return sendMessage;                                                                                            //\n  }();                                                                                                             //\n                                                                                                                   //\n  Chat.prototype.renderMessages = function () {                                                                    //\n    function renderMessages() {                                                                                    //\n      if (this.props.roomMessages) {                                                                               // 57\n        return this.props.roomMessages.map(function (message) {                                                    // 58\n          return React.createElement(ListMessages, { key: message._id, author: message.user_id, message: message.message,\n            timestamp: message.createdAt });                                                                       // 60\n        });                                                                                                        // 58\n      } else {                                                                                                     // 62\n        return \"\";                                                                                                 // 63\n      }                                                                                                            // 64\n    }                                                                                                              // 65\n                                                                                                                   //\n    return renderMessages;                                                                                         //\n  }();                                                                                                             //\n                                                                                                                   //\n  Chat.prototype.render = function () {                                                                            //\n    function render() {                                                                                            //\n      return React.createElement(                                                                                  // 68\n        'div',                                                                                                     // 69\n        { className: 'chatArea' },                                                                                 // 69\n        React.createElement(                                                                                       // 70\n          'div',                                                                                                   // 70\n          { className: 'listAndInfo' },                                                                            // 70\n          React.createElement(                                                                                     // 71\n            'div',                                                                                                 // 71\n            { className: 'playerList' },                                                                           // 71\n            React.createElement(                                                                                   // 72\n              'div',                                                                                               // 72\n              { className: 'bigRoomName' },                                                                        // 72\n              React.createElement(                                                                                 // 72\n                'span',                                                                                            // 72\n                null,                                                                                              // 72\n                this.props.roomName                                                                                // 72\n              )                                                                                                    // 72\n            ),                                                                                                     // 72\n            React.createElement(                                                                                   // 73\n              'ul',                                                                                                // 73\n              null,                                                                                                // 73\n              React.createElement(                                                                                 // 73\n                'u',                                                                                               // 73\n                null,                                                                                              // 73\n                'Players'                                                                                          // 73\n              ),                                                                                                   // 73\n              this.props.roomPlayers.map(function (name) {                                                         // 74\n                return React.createElement(ListItemPlayer, { key: name, data: name });                             // 74\n              })                                                                                                   // 74\n            )                                                                                                      // 73\n          ),                                                                                                       // 71\n          React.createElement(                                                                                     // 79\n            'div',                                                                                                 // 79\n            { className: 'chatMenuButtons' },                                                                      // 79\n            React.createElement(                                                                                   // 80\n              'button',                                                                                            // 80\n              { className: 'mainButton', onClick: this.props.clickStats },                                         // 80\n              'Stats'                                                                                              // 80\n            ),                                                                                                     // 80\n            React.createElement(                                                                                   // 81\n              'button',                                                                                            // 81\n              { className: 'mainButton', onClick: this.props.clickSettings },                                      // 81\n              'Settings'                                                                                           // 81\n            ),                                                                                                     // 81\n            React.createElement(                                                                                   // 82\n              'button',                                                                                            // 82\n              { className: 'mainButton', onClick: this.props.exitRoom },                                           // 82\n              'Exit Room'                                                                                          // 82\n            )                                                                                                      // 82\n          )                                                                                                        // 79\n        ),                                                                                                         // 70\n        React.createElement(                                                                                       // 85\n          'div',                                                                                                   // 85\n          { className: 'messagesArea' },                                                                           // 85\n          React.createElement(                                                                                     // 86\n            'div',                                                                                                 // 86\n            { className: 'messagesRead' },                                                                         // 86\n            this.renderMessages()                                                                                  // 87\n          ),                                                                                                       // 86\n          React.createElement(                                                                                     // 89\n            'div',                                                                                                 // 89\n            { className: 'messagesSendArea' },                                                                     // 89\n            React.createElement(                                                                                   // 90\n              'button',                                                                                            // 90\n              { className: 'mobile openPlayerList' },                                                              // 90\n              'Plyrs'                                                                                              // 90\n            ),                                                                                                     // 90\n            React.createElement(                                                                                   // 91\n              'form',                                                                                              // 91\n              { onSubmit: this.sendMessage.bind(this) },                                                           // 91\n              React.createElement('input', { type: 'text', ref: 'messageInput', className: 'messageEnter', placeholder: 'Enter chat here...' }),\n              React.createElement(                                                                                 // 93\n                'button',                                                                                          // 93\n                { className: 'messageSend', onClick: this.sendMessage.bind(this) },                                // 93\n                'Send'                                                                                             // 93\n              )                                                                                                    // 93\n            ),                                                                                                     // 91\n            React.createElement(                                                                                   // 95\n              'button',                                                                                            // 95\n              { className: 'mobile openChatMenu' },                                                                // 95\n              'Menu'                                                                                               // 95\n            )                                                                                                      // 95\n          )                                                                                                        // 89\n        )                                                                                                          // 85\n      );                                                                                                           // 69\n    }                                                                                                              // 100\n                                                                                                                   //\n    return render;                                                                                                 //\n  }();                                                                                                             //\n                                                                                                                   //\n  return Chat;                                                                                                     //\n}(Component);                                                                                                      //\n                                                                                                                   //\n// Chat.propTypes = {                                                                                              //\n// This component gets the room to display through a React prop.                                                   //\n// We can use propTypes to indicate it is required                                                                 //\n//   chat: PropTypes.object.isRequired,                                                                            //\n// };                                                                                                              //\n                                                                                                                   //\nmodule.export(\"default\",exports.default=(Chat));                                                                   //\nmodule.export(\"default\",exports.default=(createContainer(function () {                                             // 109\n  return {                                                                                                         // 110\n    currentUser: Meteor.user(),                                                                                    // 111\n    roomMessages: Messages.find({ room_id: gameRoomIdSelected.get() }, { sort: { createdAt: 1 } }).fetch()         // 112\n  };                                                                                                               // 110\n}, Chat)));                                                                                                        // 114\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"Game.jsx\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",\"react\",\"meteor/react-meteor-data\",\"./App.jsx\",\"../api/rooms.js\",\"./Room.jsx\",function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                 //\n// imports/ui/Game.jsx                                                                                             //\n//                                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                   //\nvar _classCallCheck;module.import('babel-runtime/helpers/classCallCheck',{\"default\":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import('babel-runtime/helpers/possibleConstructorReturn',{\"default\":function(v){_possibleConstructorReturn=v}});var _inherits;module.import('babel-runtime/helpers/inherits',{\"default\":function(v){_inherits=v}});var React,Component,PropTypes;module.import('react',{\"default\":function(v){React=v},\"Component\":function(v){Component=v},\"PropTypes\":function(v){PropTypes=v}});var createContainer;module.import('meteor/react-meteor-data',{\"createContainer\":function(v){createContainer=v}});var gameRoomIdSelected;module.import('./App.jsx',{\"gameRoomIdSelected\":function(v){gameRoomIdSelected=v}});var Rooms;module.import('../api/rooms.js',{\"Rooms\":function(v){Rooms=v}});var Room;module.import('./Room.jsx',{\"default\":function(v){Room=v}});\n                                                                                                                   //\n                                                                                                                   //\n                                                                                                                   // 1\n                                                                                                                   // 2\n                                                                                                                   // 3\n                                                                                                                   //\n                                                                                                                   // 5\n                                                                                                                   // 6\n                                                                                                                   //\nvar Game = function (_Component) {                                                                                 //\n  _inherits(Game, _Component);                                                                                     //\n                                                                                                                   //\n  function Game() {                                                                                                //\n    _classCallCheck(this, Game);                                                                                   //\n                                                                                                                   //\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));                                    //\n  }                                                                                                                //\n                                                                                                                   //\n  Game.prototype.render = function () {                                                                            //\n    function render() {                                                                                            //\n      if (this.props.selectedRoom) {                                                                               // 10\n        if (this.props.selectedRoom.players.length < 2) {                                                          // 11\n          // number of players needed to start game                                                                //\n          if (this.props.selectedRoom.subround === \"Waiting for players\") {                                        // 12\n            $(\".gamestate\").hide();                                                                                // 13\n            $(\".waitingForPlayers\").show();                                                                        // 14\n          }                                                                                                        // 15\n        } else {                                                                                                   // 16\n          $(\".waitingForPlayers\").hide();                                                                          // 17\n          if (this.props.selectedRoom.subround === \"Waiting for players\") {                                        // 18\n            console.log(\"games.init should be called\");                                                            // 19\n            Meteor.call('games.init', gameRoomIdSelected.get());                                                   // 20\n          }                                                                                                        // 21\n        }                                                                                                          // 22\n      }                                                                                                            // 23\n      return React.createElement(                                                                                  // 24\n        'div',                                                                                                     // 25\n        null,                                                                                                      // 25\n        React.createElement(                                                                                       // 26\n          'div',                                                                                                   // 26\n          { className: 'gamestate waitingForPlayers' },                                                            // 26\n          React.createElement(                                                                                     // 27\n            'span',                                                                                                // 27\n            null,                                                                                                  // 27\n            'Waiting for at least 3 players...'                                                                    // 27\n          )                                                                                                        // 27\n        ),                                                                                                         // 26\n        React.createElement('div', { className: 'gamestate getReady' }),                                           // 29\n        React.createElement('div', { className: 'gamestate play' }),                                               // 31\n        React.createElement('div', { className: 'gamestate vote' }),                                               // 33\n        React.createElement('div', { className: 'gamestate results' })                                             // 35\n      )                                                                                                            // 25\n      // <div>{this.props.selectedRoom && this.props.selectedRoom.players.length > 1 ?                             //\n      // <div>THERE IS MORE THAN ONE PLAYER HERE.</div> : <div>This is the game area.</div>}</div>                 //\n      ;                                                                                                            // 24\n    }                                                                                                              // 41\n                                                                                                                   //\n    return render;                                                                                                 //\n  }();                                                                                                             //\n                                                                                                                   //\n  return Game;                                                                                                     //\n}(Component);                                                                                                      //\n                                                                                                                   //\nmodule.export(\"default\",exports.default=(Game));                                                                   //\n                                                                                                                   //\n                                                                                                                   //\nmodule.export(\"default\",exports.default=(createContainer(function () {                                             // 44\n  //var userRoom = Meteor.user().currentRoom;                                                                      //\n  return {                                                                                                         // 46\n    currentUser: Meteor.user(),                                                                                    // 47\n    selectedRoom: Rooms.findOne({ room_id: gameRoomIdSelected.get() })                                             // 48\n  };                                                                                                               // 46\n}, Game)));                                                                                                        // 50\n                                                                                                                   //\n// Game.propTypes = {                                                                                              //\n//   // This component gets the game to display through a React prop.                                              //\n//   // We can use propTypes to indicate it is required                                                            //\n//   game: PropTypes.object.isRequired,                                                                            //\n// };                                                                                                              //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"Room.jsx\":[\"babel-runtime/helpers/classCallCheck\",\"babel-runtime/helpers/possibleConstructorReturn\",\"babel-runtime/helpers/inherits\",\"react\",function(require,exports,module){\n\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                 //\n// imports/ui/Room.jsx                                                                                             //\n//                                                                                                                 //\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                   //\nvar _classCallCheck;module.import(\"babel-runtime/helpers/classCallCheck\",{\"default\":function(v){_classCallCheck=v}});var _possibleConstructorReturn;module.import(\"babel-runtime/helpers/possibleConstructorReturn\",{\"default\":function(v){_possibleConstructorReturn=v}});var _inherits;module.import(\"babel-runtime/helpers/inherits\",{\"default\":function(v){_inherits=v}});var React,Component,PropTypes;module.import('react',{\"default\":function(v){React=v},\"Component\":function(v){Component=v},\"PropTypes\":function(v){PropTypes=v}});\n                                                                                                                   //\n                                                                                                                   //\n                                                                                                                   // 1\n                                                                                                                   //\n// Room component - represents a single room item                                                                  //\n                                                                                                                   //\nvar Room = function (_Component) {                                                                                 //\n  _inherits(Room, _Component);                                                                                     //\n                                                                                                                   //\n  function Room() {                                                                                                //\n    _classCallCheck(this, Room);                                                                                   //\n                                                                                                                   //\n    return _possibleConstructorReturn(this, _Component.apply(this, arguments));                                    //\n  }                                                                                                                //\n                                                                                                                   //\n  Room.prototype.render = function () {                                                                            //\n    function render() {                                                                                            //\n      return React.createElement(                                                                                  // 6\n        \"li\",                                                                                                      // 6\n        null,                                                                                                      // 6\n        React.createElement(                                                                                       // 6\n          \"button\",                                                                                                // 6\n          { className: \"roomSelect\", \"data-room\": this.props.room.room_id, onClick: this.props.updateRoom },       // 6\n          \"Join\"                                                                                                   // 6\n        ),                                                                                                         // 6\n        React.createElement(                                                                                       // 7\n          \"span\",                                                                                                  // 7\n          { className: \"roomlistTitle\" },                                                                          // 7\n          this.props.room.displayName                                                                              // 7\n        ),                                                                                                         // 7\n        React.createElement(                                                                                       // 8\n          \"span\",                                                                                                  // 8\n          { className: \"roomlistRound\" },                                                                          // 8\n          \" Rnd: \",                                                                                                // 8\n          this.props.room.round                                                                                    // 8\n        ),                                                                                                         // 8\n        React.createElement(                                                                                       // 9\n          \"span\",                                                                                                  // 9\n          { className: \"roomlistPlayers\" },                                                                        // 9\n          \" Players: \",                                                                                            // 9\n          this.props.room.players.length                                                                           // 9\n        )                                                                                                          // 9\n      );                                                                                                           // 6\n    }                                                                                                              // 11\n                                                                                                                   //\n    return render;                                                                                                 //\n  }();                                                                                                             //\n                                                                                                                   //\n  return Room;                                                                                                     //\n}(Component);                                                                                                      //\n                                                                                                                   //\nmodule.export(\"default\",exports.default=(Room));                                                                   //\n                                                                                                                   //\n                                                                                                                   //\nRoom.propTypes = {                                                                                                 // 14\n  // This component gets the room to display through a React prop.                                                 //\n  // We can use propTypes to indicate it is required                                                               //\n  room: PropTypes.object.isRequired                                                                                // 17\n};                                                                                                                 // 14\n/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}}},{\"extensions\":[\".js\",\".json\",\".html\",\".jsx\",\".css\"]});\nrequire(\"./client/template.main.js\");\nrequire(\"./client/utilities.js\");\nrequire(\"./client/main.jsx\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/client/template.main.js","/client/main.jsx","/imports/api/chats.js","/imports/api/games.js","/imports/api/messages.js","/imports/api/rooms.js","/imports/startup/accounts-config.js","/imports/ui/AccountsUIWrapper.jsx","/imports/ui/App.jsx","/imports/ui/Chat.jsx","/imports/ui/Game.jsx","/imports/ui/Room.jsx"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["\nTemplate.body.addContent((function() {\n  var view = this;\n  return HTML.Raw('<div id=\"render-target\"></div>');\n}));\nMeteor.startup(Template.body.renderToDocument);\n","import React from 'react';\nimport { Meteor } from 'meteor/meteor';\nimport { render } from 'react-dom';\nimport { moment } from 'meteor/momentjs:moment';\n\nimport '../imports/startup/accounts-config.js';\nimport './utilities.js';\nimport App from '../imports/ui/App.jsx';\n\nMeteor.startup(() => {\n  render(<App />, document.getElementById('render-target'));\n});\n\nMeteor.subscribe(\"userData\");\n\n// DB room setup\n// db.rooms.insert({ room_id: \"FamilyRoom\", displayName: \"Family Room\", family: true, round: 0, subround: \"Waiting for players\", players: [] });\n// db.rooms.insert({ room_id: \"HotTub\", displayName: \"Hot Tub\", family: false, round: 0, subround: \"Waiting for players\", players: [] });\n\n\n","import { Mongo } from 'meteor/mongo';\n\nexport const Chats = new Mongo.Collection('chats');\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nimport { Rooms } from '../api/rooms.js';\nexport const Games = new Mongo.Collection('games');\n\n// game config\nacroLettersPool = \"AAAAAAAAAAAAAAAAAAAAAAAABBBBBBBBBBBBBBBBBBBBBBBBCCCCCCCCCCCCCCCCCCCCCCCCDDDDDDDDDDDDDDDDDDDDDDDDEEEEEEEEEEEEEEEEEEEEEEEEEEEEEEFFFFFFFFFFFFFFFFFFFFFFFFGGGGGGGGGGGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHIIIIIIIIIIIIIIIIIIIIIIJJJJJKKKKKKLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOPPPPPPPPPPPPPPPPPPPPPPPPQQQQRRRRRRRRRRRRRRRRRRSSSSSSSSSSSSSSSSSSSSSSSSTTTTTTTTTTTTTTTTTTTTTTTTUUUUUUUVVVVVVVVVVVVWWWWWWWWWWWWXYYYYYYYYYYYYZZZZ\";\n\nacroCategories = [\"General\", \"Sports\", \"Food\", \"Movies\", \"Television\", \"History\", \"Music\", \"Art\", \"Animals\",\n                  \"Science\", \"Politics\", \"Fashion\", \"Books\", \"Travel\", \"Celebrities\", \"Romance\", \"Technology\",\n                  \"Family\", \"School\", \"Nature\", \"Health\", \"Current Events\", \"Work\", \"Give Some Advice\",\n                  \"Definitions\", \"Sayings\", \"Exercise/Fitness\", \"Baby's First Sentence\", \"My Greatest Fear\",\n                  \"In the Year 3000\", \"Weird Laws\", \"I Was Late Because...\", \"Odd College Majors\",\n                  \"My Biggest Secret\", \"New Ice Cream Flavors\", \"Bad Restaurant Names\",\n                  \"I Got Fired Because...\", \"Odd Product Slogans\", \"Bad Habits\", \"Science Fiction\",\n                  \"Strange Trends\", \"Embarrassing Moments\", \"CAVEMAN SAY...\", \"Superhero/villain Names\",\n                  \"Horror Movie Titles\", \"In a Perfect World...\", \"Short Poetry\", \"New Year's Resolutions\",\n                  \"My Dream Last Night\", \"Odd Tombstone Messages\", \"Awful First Dates\", \"Odd Holiday Customs\",\n                  \"The Holidays\", \"Short Ghost Stories\", \"... Said No One Ever\", \"Fairy/Folk Tales\"]\n\nroundsToPlay = 8;\nroundTimes = [50, 60, 60, 80, 50, 60, 60 ,80]\nroundAcroLength = [3, 4, 5, 6, 3, 4, 5, 6]\n\n////////////\n\nMeteor.methods({\n  'games.init'(roomId) {\n    if (Games.find({ room_id: roomId }).fetch().length === 0) {\n      var roundletters;\n      var acroPoolLength = acroLettersPool.length;\n      var catPoolLength = acroCategories.length;\n      var acroPlayArray = [];\n      var acroCatArray = [];\n      for (var i = 0; i < roundsToPlay; i++) {\n        var acroToPlay = \"\";\n        for (var j = 0; j < roundAcroLength[i]; j++) {\n          acroToPlay = acroToPlay + acroLettersPool[Math.floor(Math.random() * acroPoolLength)]\n        }\n        acroPlayArray.push(acroToPlay);\n        acroCatArray.push(acroCategories[Math.floor(Math.random() * catPoolLength)])\n      }\n      Games.insert({\n        room_id: roomId,\n        roundletters: acroPlayArray,\n        roundcategories: acroCatArray,\n        roundtimes: roundTimes\n      });\n      Rooms.update({room_id: roomId}, {\n        $set: { round: 1 , subround: \"Get ready\" },\n      });\n\n    }\n  },\n\n  'games.getready'(roomId) {\n\n  }\n\n\n})\n\n    // Games.find({ room_id: roomId }).remove({});\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nexport const Messages = new Mongo.Collection('messages');\n\nMeteor.methods({\n  'messages.msgPlayer'(roomId, name, verb, roomName) {\n    Messages.insert({\n      user_id: \"<PartyHost>\",\n      room_id: roomId,\n      message: name + verb + roomName,\n      createdAt: new Date()\n    });\n  },\n\n  'messages.postMessage'(name, roomId, message) {\n    Messages.insert({\n      user_id: name,\n      room_id: roomId,\n      message: message,\n      createdAt: new Date() });\n  },\n\n  'messages.deleteOld'(messageId) {\n    Messages.remove({ _id : messageId});\n  }\n\n})\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nexport const Rooms = new Mongo.Collection('rooms');\n\nMeteor.methods({\n  'rooms.addPlayer'(roomId, playerAdding) {\n    Rooms.update(roomId, {\n      $addToSet: { players: playerAdding },\n    });\n  },\n\n  'rooms.removePlayer'(roomId, playerRemoving) {\n    Rooms.update(roomId, {\n      $pull: { players:  playerRemoving\n    }}, {multi: true})\n  }\n\n})\n","import { Accounts } from 'meteor/accounts-base';\n\nAccounts.ui.config({\n  passwordSignupFields: 'USERNAME_AND_EMAIL',\n});\n\nAccounts.onLogin(function(user){\n    $(\".mainScreen\").show();\n    //App.showPrivate();\n});\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Template } from 'meteor/templating';\nimport { Blaze } from 'meteor/blaze';\n\nexport default class AccountsUIWrapper extends Component {\n  componentDidMount() {\n    // Use Meteor Blaze to render login buttons\n    this.view = Blaze.render(Template.loginButtons,\n      ReactDOM.findDOMNode(this.refs.container));\n  }\n  componentWillUnmount() {\n    // Clean up Blaze view\n    Blaze.remove(this.view);\n  }\n  render() {\n    // Just render a placeholder container that will be filled in\n    return <span ref=\"container\" />;\n  }\n}\n","import React, { Component } from 'react';\nimport AccountsUIWrapper from './AccountsUIWrapper.jsx';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport { ReactiveVar } from 'meteor/reactive-var';\nexport var gameRoomIdSelected = new ReactiveVar(\"\");\n\nimport { Rooms } from '../api/rooms.js';\nimport { Chats } from '../api/chats.js';\nimport { Messages } from '../api/messages.js';\nimport { Games } from '../api/games.js';\n\nimport Room from './Room.jsx';\nimport Chat from './Chat.jsx';\nimport Game from './Game.jsx';\n\n\n\n// App component - represents the whole app\nexport default class App extends Component {\n\n  userRouting() {\n    if (this.props.currentUser) {\n      $(\".frontSignin\").hide();\n    } else {\n      $(\".frontSignin\").show();\n      $(\".mainScreen, .stats, .chat, .settings\").hide();\n    }\n    $(\".acroparty\").show()\n  }\n\n  // rooms\n  gotoRoom(e) {\n    var theroom = $(e.target).attr(\"data-room\")\n    gameRoomIdSelected.set(theroom);\n    var roomToJoin =  Rooms.findOne({ room_id: theroom })\n    Meteor.call('rooms.addPlayer', roomToJoin._id, this.props.currentUser.username)\n    $(\".mainScreen, .popup\").hide();\n    $(\".chat\").attr(\"id\", theroom).show();\n    var enteringRoomVerb = [\" appears in the \", \" saunters into the \", \" walks into the \", \" struts into the \",\n                            \" sprints into the \", \" apparates into the \", \" materializes in the \",\n                            \" mysteriously arises inside the \", \" seems to have entered our \",\n                            \" ridiculously enters the \", \" crashed through the window into the \",\n                            \" is suddenly in the \", \" scoots on in to the \", \" politely enters the \"]\n    var randomVerb = enteringRoomVerb[Math.floor(Math.random() * enteringRoomVerb.length)]\n    Meteor.call('messages.msgPlayer', gameRoomIdSelected.get(), this.props.currentUser.username, randomVerb,\n      Rooms.findOne({ room_id: gameRoomIdSelected.get() }).displayName + \"...\")\n  }\n  renderRooms() {\n    return this.props.rooms.map((room) => (\n      <Room key={room._id} room={room} updateRoom={this.gotoRoom.bind(this)}/>\n    ));\n  }\n  renderRoomId() {\n    return gameRoomIdSelected.get();\n    // return this.props.currentUser.currentRoom\n  }\n  roomName() {\n    if (this.props.selectedRoom) {\n      var theRoomName = this.props.selectedRoom.displayName;\n    } else {\n      var theRoomName = \"\"\n    }\n    return theRoomName\n  }\n  roomPlayers() {\n    if (this.props.selectedRoom) {\n      var theRoomPlayers = this.props.selectedRoom.players;\n    } else {\n      var theRoomPlayers = []\n    }\n    return theRoomPlayers\n  }\n  exitRoom(e) {\n    Meteor.call('rooms.removePlayer', this.props.selectedRoom._id, this.props.currentUser.username)\n    $(\".popup\").hide();\n    $(\"#\" + gameRoomIdSelected.get()).hide();\n    gameRoomIdSelected.set(\"\");\n    $(\".chat\").removeAttr(\"id\");\n    $(\".mainScreen\").show();\n  }\n\n  // stats\n  closePopup(e) {\n    $(\".popup\").hide();\n  }\n\n  openStats(e) {\n    $(\".settings\").hide();\n    $(\".stats\").show();\n  }\n\n  renderUsername() {\n    if (this.props.currentUser) {\n      if (this.props.currentUser.username) {\n        return  <span>{ this.props.currentUser.username }</span>;\n      } else {\n        return \"\";\n      }\n    } else {\n      return \"\";\n    }\n  }\n\n  renderLifePoints() {\n    // this.props.currentUser ? <span>{ this.props.currentUser.stats.lifetimePoints }</span> : '';\n    if (this.props.currentUser) {\n      if (this.props.currentUser.stats) {\n        return  <span>{ this.props.currentUser.stats.lifetimePoints }</span>;\n      } else {\n        return \"\";\n      }\n    } else {\n      return \"\";\n    }\n  }\n\n  //settings\n  openSettings(e) {\n    $(\".stats\").hide();\n    $(\".settings\").show();\n  }\n\n  render() {\n    return (\n\n      <div className=\"acroparty\">\n        {this.userRouting()}\n        <section className=\"frontSignin\" style={{\"display\" : \"none\"}}>\n          <h1>Welcome to AcroParty!</h1>\n          <AccountsUIWrapper />\n        </section>\n\n        <section className=\"mainScreen\">\n          <header>\n            <h1>AcroParty</h1>\n          </header>\n          <div className=\"welcomeText\">\n            Welcome, { this.renderUsername() }! Please select a room to start playing...\n          </div>\n          <div className=\"roomList\">\n            <div className=\"roomListTitle\">Rooms</div>\n            { this.renderRooms() }\n          </div>\n          <div className=\"mainButtons\">\n            <button className=\"mainButton\" onClick={this.openStats.bind(this)}>Stats</button>\n            <button className=\"mainButton\" onClick={this.openSettings.bind(this)}>Settings</button>\n          </div>\n        </section>\n\n        <section className=\"chat\">\n          <section className=\"gamePlay\">\n            <Game roomId={this.renderRoomId()} roomName={this.roomName()} />\n          </section>\n\n          <Chat clickStats={this.openStats.bind(this)} clickSettings={this.openSettings.bind(this)}\n                roomName={this.roomName()} roomPlayers={this.roomPlayers()} exitRoom={this.exitRoom.bind(this)}\n                roomId={this.renderRoomId()} />\n        </section>\n\n        <section className=\"stats popup\">\n          <div>Life wins is { this.renderLifePoints() }</div>\n          <button className=\"popupButton\" onClick={this.closePopup.bind(this)}>Close</button>\n        </section>\n\n        <section className=\"settings popup\">\n          <AccountsUIWrapper />\n          <button className=\"popupButton\" onClick={this.closePopup.bind(this)}>Close</button>\n        </section>\n\n\n      </div>\n    );\n  }\n}\n\nexport default createContainer(() => {\n  //var userRoom = Meteor.user().currentRoom;\n  return {\n    currentUser: Meteor.user(),\n    rooms: Rooms.find({}).fetch(),\n    selectedRoom: Rooms.findOne({ room_id: gameRoomIdSelected.get() }),\n  };\n}, App);\n\n","import React, { Component, PropTypes } from 'react';\nimport ReactDOM from 'react-dom';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport { gameRoomIdSelected } from './App.jsx'\n\nimport { Messages } from '../api/messages.js';\n\nexport default class ListMessages extends Component {\n  componentDidMount() {\n    var $this = $(ReactDOM.findDOMNode(this));\n    $(\".messagesRead\")[0].scrollTop = $(\".messagesRead\")[0].scrollHeight;\n  }\n  render() {\n    return <li className={this.props.author === \"<PartyHost>\" ? \"hostMessage\" : \"\"}>\n            <span className=\"authorMessage\"><span className=\"messageAuthor\">{this.props.author}:</span> {this.props.message}</span>\n            <span className=\"messageTime\" data-livestamp={this.props.timestamp}></span>\n           </li>\n  }\n}\n\nexport default class ListItemPlayer extends Component {\n  render() {\n    return <li className=\"playerInList\" data-playerInList={this.props.data}>{this.props.data}</li>;\n  }\n}\n\nexport default class Chat extends Component {\n  listPlayers() {\n    var playerListArray = this.props.roomPlayers\n    var playerListItems = playerListArray.map(function(name) {\n      return <li>name</li>\n    });\n    return playerListItems\n  }\n\n  sendMessage(event) {\n    event.preventDefault();\n    const message = ReactDOM.findDOMNode(this.refs.messageInput).value.trim();\n    if (message === \"\") {return} // blank messages don't send\n    Meteor.call('messages.postMessage', this.props.currentUser.username, gameRoomIdSelected.get(), message);\n    ReactDOM.findDOMNode(this.refs.messageInput).value = '';\n    // delete old messages in room\n    if (this.props.roomMessages.length > 200) { // 200 chat messages per room\n      var indexToTrim = this.props.roomMessages.length - 200;\n      var oldestMessageTime = this.props.roomMessages[indexToTrim].createdAt;\n      var messagesToDelete = Messages.find({\n        room_id : gameRoomIdSelected.get(),\n        createdAt: { $lt: oldestMessageTime }\n      }).fetch();\n      messagesToDelete.forEach(function(message) {\n        Meteor.call('message.deleteOld', message._id);\n      });\n    }\n  }\n\n  renderMessages() {\n    if (this.props.roomMessages) {\n      return this.props.roomMessages.map((message) => (\n        <ListMessages key={message._id} author={message.user_id} message={message.message}\n                      timestamp={message.createdAt} />\n      ));\n    } else {\n      return \"\";\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"chatArea\">\n        <div className=\"listAndInfo\">\n          <div className=\"playerList\">\n            <div className=\"bigRoomName\"><span>{this.props.roomName}</span></div>\n            <ul><u>Players</u>\n              {this.props.roomPlayers.map((name) => (\n                <ListItemPlayer key={name} data={name} />\n              ))}\n            </ul>\n          </div>\n          <div className=\"chatMenuButtons\">\n            <button className=\"mainButton\" onClick={this.props.clickStats}>Stats</button>\n            <button className=\"mainButton\" onClick={this.props.clickSettings}>Settings</button>\n            <button className=\"mainButton\" onClick={this.props.exitRoom}>Exit Room</button>\n          </div>\n        </div>\n        <div className=\"messagesArea\">\n          <div className=\"messagesRead\">\n            {this.renderMessages()}\n          </div>\n          <div className=\"messagesSendArea\">\n            <button className=\"mobile openPlayerList\">Plyrs</button>\n            <form onSubmit={this.sendMessage.bind(this)}>\n              <input type=\"text\" ref=\"messageInput\" className=\"messageEnter\" placeholder=\"Enter chat here...\"></input>\n              <button className=\"messageSend\" onClick={this.sendMessage.bind(this)}>Send</button>\n            </form>\n            <button className=\"mobile openChatMenu\">Menu</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// Chat.propTypes = {\n  // This component gets the room to display through a React prop.\n  // We can use propTypes to indicate it is required\n//   chat: PropTypes.object.isRequired,\n// };\n\nexport default createContainer(() => {\n  return {\n    currentUser: Meteor.user(),\n    roomMessages: Messages.find({ room_id: gameRoomIdSelected.get() }, { sort: { createdAt: 1 } }).fetch(),\n  };\n}, Chat);\n","import React, { Component, PropTypes } from 'react';\nimport { createContainer } from 'meteor/react-meteor-data';\nimport { gameRoomIdSelected } from './App.jsx'\n\nimport { Rooms } from '../api/rooms.js';\nimport Room from './Room.jsx';\n\nexport default class Game extends Component {\n  render() {\n    if (this.props.selectedRoom) {\n      if (this.props.selectedRoom.players.length < 2) { // number of players needed to start game\n        if (this.props.selectedRoom.subround === \"Waiting for players\") {\n          $(\".gamestate\").hide();\n          $(\".waitingForPlayers\").show();\n        }\n      } else {\n        $(\".waitingForPlayers\").hide();\n        if (this.props.selectedRoom.subround === \"Waiting for players\") {\n          console.log(\"games.init should be called\")\n          Meteor.call('games.init', gameRoomIdSelected.get(), );\n        }\n      }\n    }\n    return (\n      <div>\n        <div className=\"gamestate waitingForPlayers\">\n          <span>Waiting for at least 3 players...</span>\n        </div>\n        <div className=\"gamestate getReady\">\n        </div>\n        <div className=\"gamestate play\">\n        </div>\n        <div className=\"gamestate vote\">\n        </div>\n        <div className=\"gamestate results\">\n        </div>\n      </div>\n      // <div>{this.props.selectedRoom && this.props.selectedRoom.players.length > 1 ?\n      // <div>THERE IS MORE THAN ONE PLAYER HERE.</div> : <div>This is the game area.</div>}</div>\n    );\n  }\n}\n\nexport default createContainer(() => {\n  //var userRoom = Meteor.user().currentRoom;\n  return {\n    currentUser: Meteor.user(),\n    selectedRoom: Rooms.findOne({ room_id: gameRoomIdSelected.get() }),\n  };\n}, Game);\n\n// Game.propTypes = {\n//   // This component gets the game to display through a React prop.\n//   // We can use propTypes to indicate it is required\n//   game: PropTypes.object.isRequired,\n// };\n","import React, { Component, PropTypes } from 'react';\n\n// Room component - represents a single room item\nexport default class Room extends Component {\n  render() {\n    return (<li><button className=\"roomSelect\" data-room={this.props.room.room_id} onClick={this.props.updateRoom}>Join</button>\n        <span className=\"roomlistTitle\">{this.props.room.displayName}</span>\n        <span className=\"roomlistRound\"> Rnd: {this.props.room.round}</span>\n        <span className=\"roomlistPlayers\"> Players: {this.props.room.players.length}</span></li>\n    );\n  }\n}\n\nRoom.propTypes = {\n  // This component gets the room to display through a React prop.\n  // We can use propTypes to indicate it is required\n  room: PropTypes.object.isRequired,\n};\n"]}}]