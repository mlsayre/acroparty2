[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nECMAScript = Package.ecmascript.ECMAScript;\nAccounts = Package['accounts-base'].Accounts;\nReactMeteorData = Package['react-meteor-data'].ReactMeteorData;\nmoment = Package['momentjs:moment'].moment;\nlivestamp = Package['copleykj:livestamp'].livestamp;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nmain = Package.webapp.main;\nWebAppInternals = Package.webapp.WebAppInternals;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"imports\":{\"api\":{\"chats.js\":[\"meteor/mongo\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// imports/api/chats.js                                                                           //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nmodule.export({Chats:function(){return Chats}});var Mongo;module.import('meteor/mongo',{\"Mongo\":function(v){Mongo=v}});\n                                                                                                  //\nvar Chats = new Mongo.Collection('chats');                                                        // 3\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"gamedata.js\":[\"meteor/meteor\",\"meteor/mongo\",\"meteor/check\",\"../api/rooms.js\",\"../api/games.js\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// imports/api/gamedata.js                                                                        //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nmodule.export({Gamedata:function(){return Gamedata}});var Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var Mongo;module.import('meteor/mongo',{\"Mongo\":function(v){Mongo=v}});var check;module.import('meteor/check',{\"check\":function(v){check=v}});var Rooms;module.import('../api/rooms.js',{\"Rooms\":function(v){Rooms=v}});var Games;module.import('../api/games.js',{\"Games\":function(v){Games=v}});\n                                                                                                  // 2\n                                                                                                  // 3\n                                                                                                  //\n                                                                                                  // 5\n                                                                                                  // 6\nvar Gamedata = new Mongo.Collection('gamedata');                                                  // 7\n                                                                                                  //\nMeteor.methods({                                                                                  // 9\n  'gamedata.postAnswer': function gamedataPostAnswer(roomId, userId, answer) {                    // 10\n    var submitAnswerTime = new Date();                                                            // 11\n    Gamedata.update({ room_id: roomId, user_id: userId }, {                                       // 12\n      $set: { answer: answer,                                                                     // 13\n        submitAnswerTime: submitAnswerTime }                                                      // 14\n    });                                                                                           // 12\n    var countStarted = Games.findOne({ room_id: roomId }).playStartTime;                          // 16\n    var finalSubmitTime = (submitAnswerTime - countStarted) / 1000;                               // 17\n    Gamedata.update({ room_id: roomId, user_id: userId }, {                                       // 18\n      $set: { finalAnswerTime: finalSubmitTime }                                                  // 19\n    });                                                                                           // 18\n  }                                                                                               // 21\n});                                                                                               // 9\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"games.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// imports/api/games.js                                                                           //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nthrow new Error(\"Unexpected token (199:2)\");\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"messages.js\":[\"meteor/meteor\",\"meteor/mongo\",\"meteor/check\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// imports/api/messages.js                                                                        //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nmodule.export({Messages:function(){return Messages}});var Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var Mongo;module.import('meteor/mongo',{\"Mongo\":function(v){Mongo=v}});var check;module.import('meteor/check',{\"check\":function(v){check=v}});\n                                                                                                  // 2\n                                                                                                  // 3\n                                                                                                  //\nvar Messages = new Mongo.Collection('messages');                                                  // 5\n                                                                                                  //\nMeteor.methods({                                                                                  // 7\n  'messages.msgPlayer': function messagesMsgPlayer(roomId, name, verb, roomName, className) {     // 8\n    Messages.insert({                                                                             // 9\n      user_id: \"<PartyHost>\",                                                                     // 10\n      room_id: roomId,                                                                            // 11\n      message: name + verb + roomName,                                                            // 12\n      messageClass: className,                                                                    // 13\n      createdAt: new Date()                                                                       // 14\n    });                                                                                           // 9\n  },                                                                                              // 16\n  'messages.postMessage': function messagesPostMessage(name, roomId, message) {                   // 18\n    Messages.insert({                                                                             // 19\n      user_id: name,                                                                              // 20\n      room_id: roomId,                                                                            // 21\n      message: message,                                                                           // 22\n      createdAt: new Date() });                                                                   // 23\n  },                                                                                              // 24\n  'messages.deleteOld': function messagesDeleteOld(messageId) {                                   // 26\n    Messages.remove({ _id: messageId });                                                          // 27\n  }                                                                                               // 28\n});                                                                                               // 7\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"rooms.js\":[\"meteor/meteor\",\"meteor/mongo\",\"meteor/check\",\"../api/gamedata.js\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// imports/api/rooms.js                                                                           //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nmodule.export({Rooms:function(){return Rooms}});var Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});var Mongo;module.import('meteor/mongo',{\"Mongo\":function(v){Mongo=v}});var check;module.import('meteor/check',{\"check\":function(v){check=v}});var Gamedata;module.import('../api/gamedata.js',{\"Gamedata\":function(v){Gamedata=v}});\n                                                                                                  // 2\n                                                                                                  // 3\n                                                                                                  //\nvar Rooms = new Mongo.Collection('rooms');                                                        // 5\n                                                                                                  // 6\n                                                                                                  //\nMeteor.methods({                                                                                  // 8\n  'rooms.addPlayer': function roomsAddPlayer(roomId, playerAdding) {                              // 9\n    if (!Gamedata.findOne({ room_id: roomId, user_id: playerAdding })) {                          // 10\n      Gamedata.insert({                                                                           // 11\n        room_id: roomId,                                                                          // 12\n        user_id: playerAdding,                                                                    // 13\n        score: 0                                                                                  // 14\n      });                                                                                         // 11\n    }                                                                                             // 16\n  },                                                                                              // 17\n  'rooms.removePlayer': function roomsRemovePlayer(roomId, playerRemoving) {                      // 19\n    Gamedata.remove({ room_id: roomId, user_id: playerRemoving });                                // 20\n  }                                                                                               // 21\n});                                                                                               // 8\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},\"server\":{\"accounts-server-config.js\":[\"meteor/accounts-base\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// server/accounts-server-config.js                                                               //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nvar Accounts;module.import('meteor/accounts-base',{\"Accounts\":function(v){Accounts=v}});          // 1\n                                                                                                  //\nAccounts.onCreateUser(function (options, user) {                                                  // 3\n                                                                                                  //\n  user.currentRoom = \"\";                                                                          // 5\n  user.stats = {                                                                                  // 6\n    lifetimePoints: 0,                                                                            // 7\n    lifetimeWins: 0,                                                                              // 8\n    lifetimeGamesPlayed: 0                                                                        // 9\n  };                                                                                              // 6\n                                                                                                  //\n  if (options.profile) user.profile = options.profile;                                            // 12\n                                                                                                  //\n  return user;                                                                                    // 15\n});                                                                                               // 16\n                                                                                                  //\nMeteor.publish(\"userData\", function () {                                                          // 18\n  if (this.userId) {                                                                              // 19\n    return Meteor.users.find({ _id: this.userId }, { fields: { 'stats': 1, 'currentRoom': 1 } });\n  } else {                                                                                        // 22\n    this.ready();                                                                                 // 23\n  }                                                                                               // 24\n});                                                                                               // 25\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}],\"main.js\":[\"meteor/meteor\",\"../imports/api/rooms.js\",\"../imports/api/chats.js\",\"../imports/api/messages.js\",\"../imports/api/games.js\",function(require,exports,module){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                //\n// server/main.js                                                                                 //\n//                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                  //\nvar Meteor;module.import('meteor/meteor',{\"Meteor\":function(v){Meteor=v}});module.import('../imports/api/rooms.js');module.import('../imports/api/chats.js');module.import('../imports/api/messages.js');module.import('../imports/api/games.js');\n                                                                                                  // 2\n                                                                                                  // 3\n                                                                                                  // 4\n                                                                                                  // 5\n                                                                                                  //\nMeteor.startup(function () {                                                                      // 7\n  // code to run on server at startup                                                             //\n});                                                                                               // 9\n////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}]}},{\"extensions\":[\".js\",\".json\",\".jsx\"]});\nrequire(\"./server/accounts-server-config.js\");\nrequire(\"./server/main.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/imports/api/chats.js","/imports/api/gamedata.js","imports/api/games.js","/imports/api/messages.js","/imports/api/rooms.js","/server/accounts-server-config.js","/server/main.js"],"names":[],"mappings":"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","file":"/app.js","sourcesContent":["import { Mongo } from 'meteor/mongo';\n\nexport const Chats = new Mongo.Collection('chats');\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nimport { Rooms } from '../api/rooms.js';\nimport { Games } from '../api/games.js';\nexport const Gamedata = new Mongo.Collection('gamedata');\n\nMeteor.methods({\n  'gamedata.postAnswer'(roomId, userId, answer) {\n    var submitAnswerTime = new Date();\n    Gamedata.update({room_id: roomId, user_id: userId}, {\n      $set: { answer: answer,\n              submitAnswerTime: submitAnswerTime },\n    });\n    var countStarted = Games.findOne({room_id: roomId}).playStartTime\n    var finalSubmitTime = (submitAnswerTime - countStarted) / 1000;\n    Gamedata.update({room_id: roomId, user_id: userId}, {\n      $set: { finalAnswerTime: finalSubmitTime },\n    });\n  },\n\n  // 'rooms.removePlayer'(roomId, playerRemoving) {\n  //   Rooms.update(roomId, {\n  //     $pull: { players:  playerRemoving\n  //   }}, {multi: true})\n  // }\n\n})\n","throw new Error(\"Unexpected token (199:2)\");\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nexport const Messages = new Mongo.Collection('messages');\n\nMeteor.methods({\n  'messages.msgPlayer'(roomId, name, verb, roomName, className) {\n    Messages.insert({\n      user_id: \"<PartyHost>\",\n      room_id: roomId,\n      message: name + verb + roomName,\n      messageClass: className,\n      createdAt: new Date()\n    });\n  },\n\n  'messages.postMessage'(name, roomId, message) {\n    Messages.insert({\n      user_id: name,\n      room_id: roomId,\n      message: message,\n      createdAt: new Date() });\n  },\n\n  'messages.deleteOld'(messageId) {\n    Messages.remove({ _id : messageId});\n  }\n\n})\n","import { Meteor } from 'meteor/meteor';\nimport { Mongo } from 'meteor/mongo';\nimport { check } from 'meteor/check';\n\nexport const Rooms = new Mongo.Collection('rooms');\nimport { Gamedata } from '../api/gamedata.js';\n\nMeteor.methods({\n  'rooms.addPlayer'(roomId, playerAdding) {\n    if (!Gamedata.findOne({room_id: roomId, user_id: playerAdding})) {\n      Gamedata.insert({\n        room_id: roomId,\n        user_id: playerAdding,\n        score: 0 ,\n      });\n    }\n  },\n\n  'rooms.removePlayer'(roomId, playerRemoving) {\n    Gamedata.remove({room_id: roomId, user_id: playerRemoving});\n  }\n\n})\n","import { Accounts } from 'meteor/accounts-base';\n\nAccounts.onCreateUser((options, user) => {\n\n  user.currentRoom = \"\";\n  user.stats = {\n    lifetimePoints : 0,\n    lifetimeWins : 0,\n    lifetimeGamesPlayed : 0\n  };\n\n  if (options.profile)\n    user.profile = options.profile;\n\n  return user;\n});\n\nMeteor.publish(\"userData\", function () {\n  if (this.userId) {\n    return Meteor.users.find({_id: this.userId},\n                             {fields: {'stats': 1, 'currentRoom': 1}});\n  } else {\n    this.ready();\n  }\n});\n","import { Meteor } from 'meteor/meteor';\nimport '../imports/api/rooms.js';\nimport '../imports/api/chats.js';\nimport '../imports/api/messages.js';\nimport '../imports/api/games.js';\n\nMeteor.startup(() => {\n  // code to run on server at startup\n});\n\n"]}}]